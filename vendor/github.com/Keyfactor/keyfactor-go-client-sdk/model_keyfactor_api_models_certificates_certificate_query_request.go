/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsCertificatesCertificateQueryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsCertificatesCertificateQueryRequest{}

// KeyfactorApiModelsCertificatesCertificateQueryRequest struct for KeyfactorApiModelsCertificatesCertificateQueryRequest
type KeyfactorApiModelsCertificatesCertificateQueryRequest struct {
	// Contents of the query (ex: field1 -eq value1 AND field2 -gt value2)
	QueryString *string `json:"QueryString,omitempty"`
	// The current page within the result set to be returned
	PageReturned *int32 `json:"PageReturned,omitempty"`
	// Maximum number of records to be returned in a single call
	ReturnLimit *int32 `json:"ReturnLimit,omitempty"`
	// Field by which the results should be sorted (view results via Management Portal for sortable columns)
	SortField *string `json:"SortField,omitempty"`
	// Field sort direction [0=ascending, 1=descending]
	SortAscending *int32 `json:"SortAscending,omitempty"`
	// Select 'true' to include revoked certificates in the results
	IncludeRevoked *bool `json:"IncludeRevoked,omitempty"`
	// Select 'true' to include expired certificates in the results
	IncludeExpired *bool `json:"IncludeExpired,omitempty"`
}

// NewKeyfactorApiModelsCertificatesCertificateQueryRequest instantiates a new KeyfactorApiModelsCertificatesCertificateQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsCertificatesCertificateQueryRequest() *KeyfactorApiModelsCertificatesCertificateQueryRequest {
	this := KeyfactorApiModelsCertificatesCertificateQueryRequest{}
	return &this
}

// NewKeyfactorApiModelsCertificatesCertificateQueryRequestWithDefaults instantiates a new KeyfactorApiModelsCertificatesCertificateQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsCertificatesCertificateQueryRequestWithDefaults() *KeyfactorApiModelsCertificatesCertificateQueryRequest {
	this := KeyfactorApiModelsCertificatesCertificateQueryRequest{}
	return &this
}

// GetQueryString returns the QueryString field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetQueryString() string {
	if o == nil || isNil(o.QueryString) {
		var ret string
		return ret
	}
	return *o.QueryString
}

// GetQueryStringOk returns a tuple with the QueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetQueryStringOk() (*string, bool) {
	if o == nil || isNil(o.QueryString) {
		return nil, false
	}
	return o.QueryString, true
}

// HasQueryString returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) HasQueryString() bool {
	if o != nil && !isNil(o.QueryString) {
		return true
	}

	return false
}

// SetQueryString gets a reference to the given string and assigns it to the QueryString field.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) SetQueryString(v string) {
	o.QueryString = &v
}

// GetPageReturned returns the PageReturned field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetPageReturned() int32 {
	if o == nil || isNil(o.PageReturned) {
		var ret int32
		return ret
	}
	return *o.PageReturned
}

// GetPageReturnedOk returns a tuple with the PageReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetPageReturnedOk() (*int32, bool) {
	if o == nil || isNil(o.PageReturned) {
		return nil, false
	}
	return o.PageReturned, true
}

// HasPageReturned returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) HasPageReturned() bool {
	if o != nil && !isNil(o.PageReturned) {
		return true
	}

	return false
}

// SetPageReturned gets a reference to the given int32 and assigns it to the PageReturned field.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) SetPageReturned(v int32) {
	o.PageReturned = &v
}

// GetReturnLimit returns the ReturnLimit field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetReturnLimit() int32 {
	if o == nil || isNil(o.ReturnLimit) {
		var ret int32
		return ret
	}
	return *o.ReturnLimit
}

// GetReturnLimitOk returns a tuple with the ReturnLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetReturnLimitOk() (*int32, bool) {
	if o == nil || isNil(o.ReturnLimit) {
		return nil, false
	}
	return o.ReturnLimit, true
}

// HasReturnLimit returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) HasReturnLimit() bool {
	if o != nil && !isNil(o.ReturnLimit) {
		return true
	}

	return false
}

// SetReturnLimit gets a reference to the given int32 and assigns it to the ReturnLimit field.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) SetReturnLimit(v int32) {
	o.ReturnLimit = &v
}

// GetSortField returns the SortField field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetSortField() string {
	if o == nil || isNil(o.SortField) {
		var ret string
		return ret
	}
	return *o.SortField
}

// GetSortFieldOk returns a tuple with the SortField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetSortFieldOk() (*string, bool) {
	if o == nil || isNil(o.SortField) {
		return nil, false
	}
	return o.SortField, true
}

// HasSortField returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) HasSortField() bool {
	if o != nil && !isNil(o.SortField) {
		return true
	}

	return false
}

// SetSortField gets a reference to the given string and assigns it to the SortField field.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) SetSortField(v string) {
	o.SortField = &v
}

// GetSortAscending returns the SortAscending field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetSortAscending() int32 {
	if o == nil || isNil(o.SortAscending) {
		var ret int32
		return ret
	}
	return *o.SortAscending
}

// GetSortAscendingOk returns a tuple with the SortAscending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetSortAscendingOk() (*int32, bool) {
	if o == nil || isNil(o.SortAscending) {
		return nil, false
	}
	return o.SortAscending, true
}

// HasSortAscending returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) HasSortAscending() bool {
	if o != nil && !isNil(o.SortAscending) {
		return true
	}

	return false
}

// SetSortAscending gets a reference to the given int32 and assigns it to the SortAscending field.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) SetSortAscending(v int32) {
	o.SortAscending = &v
}

// GetIncludeRevoked returns the IncludeRevoked field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetIncludeRevoked() bool {
	if o == nil || isNil(o.IncludeRevoked) {
		var ret bool
		return ret
	}
	return *o.IncludeRevoked
}

// GetIncludeRevokedOk returns a tuple with the IncludeRevoked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetIncludeRevokedOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeRevoked) {
		return nil, false
	}
	return o.IncludeRevoked, true
}

// HasIncludeRevoked returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) HasIncludeRevoked() bool {
	if o != nil && !isNil(o.IncludeRevoked) {
		return true
	}

	return false
}

// SetIncludeRevoked gets a reference to the given bool and assigns it to the IncludeRevoked field.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) SetIncludeRevoked(v bool) {
	o.IncludeRevoked = &v
}

// GetIncludeExpired returns the IncludeExpired field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetIncludeExpired() bool {
	if o == nil || isNil(o.IncludeExpired) {
		var ret bool
		return ret
	}
	return *o.IncludeExpired
}

// GetIncludeExpiredOk returns a tuple with the IncludeExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) GetIncludeExpiredOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeExpired) {
		return nil, false
	}
	return o.IncludeExpired, true
}

// HasIncludeExpired returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) HasIncludeExpired() bool {
	if o != nil && !isNil(o.IncludeExpired) {
		return true
	}

	return false
}

// SetIncludeExpired gets a reference to the given bool and assigns it to the IncludeExpired field.
func (o *KeyfactorApiModelsCertificatesCertificateQueryRequest) SetIncludeExpired(v bool) {
	o.IncludeExpired = &v
}

func (o KeyfactorApiModelsCertificatesCertificateQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsCertificatesCertificateQueryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.QueryString) {
		toSerialize["QueryString"] = o.QueryString
	}
	if !isNil(o.PageReturned) {
		toSerialize["PageReturned"] = o.PageReturned
	}
	if !isNil(o.ReturnLimit) {
		toSerialize["ReturnLimit"] = o.ReturnLimit
	}
	if !isNil(o.SortField) {
		toSerialize["SortField"] = o.SortField
	}
	if !isNil(o.SortAscending) {
		toSerialize["SortAscending"] = o.SortAscending
	}
	if !isNil(o.IncludeRevoked) {
		toSerialize["IncludeRevoked"] = o.IncludeRevoked
	}
	if !isNil(o.IncludeExpired) {
		toSerialize["IncludeExpired"] = o.IncludeExpired
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsCertificatesCertificateQueryRequest struct {
	value *KeyfactorApiModelsCertificatesCertificateQueryRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsCertificatesCertificateQueryRequest) Get() *KeyfactorApiModelsCertificatesCertificateQueryRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateQueryRequest) Set(val *KeyfactorApiModelsCertificatesCertificateQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsCertificatesCertificateQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsCertificatesCertificateQueryRequest(val *KeyfactorApiModelsCertificatesCertificateQueryRequest) *NullableKeyfactorApiModelsCertificatesCertificateQueryRequest {
	return &NullableKeyfactorApiModelsCertificatesCertificateQueryRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsCertificatesCertificateQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


