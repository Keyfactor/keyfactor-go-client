/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsTemplateRetrievalResponseExtendedKeyUsageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTemplateRetrievalResponseExtendedKeyUsageModel{}

// ModelsTemplateRetrievalResponseExtendedKeyUsageModel struct for ModelsTemplateRetrievalResponseExtendedKeyUsageModel
type ModelsTemplateRetrievalResponseExtendedKeyUsageModel struct {
	Id *int32 `json:"Id,omitempty"`
	Oid *string `json:"Oid,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
}

// NewModelsTemplateRetrievalResponseExtendedKeyUsageModel instantiates a new ModelsTemplateRetrievalResponseExtendedKeyUsageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTemplateRetrievalResponseExtendedKeyUsageModel() *ModelsTemplateRetrievalResponseExtendedKeyUsageModel {
	this := ModelsTemplateRetrievalResponseExtendedKeyUsageModel{}
	return &this
}

// NewModelsTemplateRetrievalResponseExtendedKeyUsageModelWithDefaults instantiates a new ModelsTemplateRetrievalResponseExtendedKeyUsageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTemplateRetrievalResponseExtendedKeyUsageModelWithDefaults() *ModelsTemplateRetrievalResponseExtendedKeyUsageModel {
	this := ModelsTemplateRetrievalResponseExtendedKeyUsageModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) SetId(v int32) {
	o.Id = &v
}

// GetOid returns the Oid field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) GetOid() string {
	if o == nil || isNil(o.Oid) {
		var ret string
		return ret
	}
	return *o.Oid
}

// GetOidOk returns a tuple with the Oid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) GetOidOk() (*string, bool) {
	if o == nil || isNil(o.Oid) {
		return nil, false
	}
	return o.Oid, true
}

// HasOid returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) HasOid() bool {
	if o != nil && !isNil(o.Oid) {
		return true
	}

	return false
}

// SetOid gets a reference to the given string and assigns it to the Oid field.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) SetOid(v string) {
	o.Oid = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o ModelsTemplateRetrievalResponseExtendedKeyUsageModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTemplateRetrievalResponseExtendedKeyUsageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Oid) {
		toSerialize["Oid"] = o.Oid
	}
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	return toSerialize, nil
}

type NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel struct {
	value *ModelsTemplateRetrievalResponseExtendedKeyUsageModel
	isSet bool
}

func (v NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel) Get() *ModelsTemplateRetrievalResponseExtendedKeyUsageModel {
	return v.value
}

func (v *NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel) Set(val *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTemplateRetrievalResponseExtendedKeyUsageModel(val *ModelsTemplateRetrievalResponseExtendedKeyUsageModel) *NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel {
	return &NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel{value: val, isSet: true}
}

func (v NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTemplateRetrievalResponseExtendedKeyUsageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


