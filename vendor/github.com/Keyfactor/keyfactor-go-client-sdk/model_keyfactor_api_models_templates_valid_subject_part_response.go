/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsTemplatesValidSubjectPartResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsTemplatesValidSubjectPartResponse{}

// KeyfactorApiModelsTemplatesValidSubjectPartResponse struct for KeyfactorApiModelsTemplatesValidSubjectPartResponse
type KeyfactorApiModelsTemplatesValidSubjectPartResponse struct {
	SubjectPart *string `json:"SubjectPart,omitempty"`
	SubjectPartName *string `json:"SubjectPartName,omitempty"`
}

// NewKeyfactorApiModelsTemplatesValidSubjectPartResponse instantiates a new KeyfactorApiModelsTemplatesValidSubjectPartResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsTemplatesValidSubjectPartResponse() *KeyfactorApiModelsTemplatesValidSubjectPartResponse {
	this := KeyfactorApiModelsTemplatesValidSubjectPartResponse{}
	return &this
}

// NewKeyfactorApiModelsTemplatesValidSubjectPartResponseWithDefaults instantiates a new KeyfactorApiModelsTemplatesValidSubjectPartResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsTemplatesValidSubjectPartResponseWithDefaults() *KeyfactorApiModelsTemplatesValidSubjectPartResponse {
	this := KeyfactorApiModelsTemplatesValidSubjectPartResponse{}
	return &this
}

// GetSubjectPart returns the SubjectPart field value if set, zero value otherwise.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPart() string {
	if o == nil || isNil(o.SubjectPart) {
		var ret string
		return ret
	}
	return *o.SubjectPart
}

// GetSubjectPartOk returns a tuple with the SubjectPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPartOk() (*string, bool) {
	if o == nil || isNil(o.SubjectPart) {
		return nil, false
	}
	return o.SubjectPart, true
}

// HasSubjectPart returns a boolean if a field has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) HasSubjectPart() bool {
	if o != nil && !isNil(o.SubjectPart) {
		return true
	}

	return false
}

// SetSubjectPart gets a reference to the given string and assigns it to the SubjectPart field.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) SetSubjectPart(v string) {
	o.SubjectPart = &v
}

// GetSubjectPartName returns the SubjectPartName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPartName() string {
	if o == nil || isNil(o.SubjectPartName) {
		var ret string
		return ret
	}
	return *o.SubjectPartName
}

// GetSubjectPartNameOk returns a tuple with the SubjectPartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPartNameOk() (*string, bool) {
	if o == nil || isNil(o.SubjectPartName) {
		return nil, false
	}
	return o.SubjectPartName, true
}

// HasSubjectPartName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) HasSubjectPartName() bool {
	if o != nil && !isNil(o.SubjectPartName) {
		return true
	}

	return false
}

// SetSubjectPartName gets a reference to the given string and assigns it to the SubjectPartName field.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) SetSubjectPartName(v string) {
	o.SubjectPartName = &v
}

func (o KeyfactorApiModelsTemplatesValidSubjectPartResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsTemplatesValidSubjectPartResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SubjectPart) {
		toSerialize["SubjectPart"] = o.SubjectPart
	}
	if !isNil(o.SubjectPartName) {
		toSerialize["SubjectPartName"] = o.SubjectPartName
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse struct {
	value *KeyfactorApiModelsTemplatesValidSubjectPartResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) Get() *KeyfactorApiModelsTemplatesValidSubjectPartResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) Set(val *KeyfactorApiModelsTemplatesValidSubjectPartResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsTemplatesValidSubjectPartResponse(val *KeyfactorApiModelsTemplatesValidSubjectPartResponse) *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse {
	return &NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


