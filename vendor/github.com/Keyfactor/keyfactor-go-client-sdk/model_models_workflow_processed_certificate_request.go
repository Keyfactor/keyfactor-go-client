/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsWorkflowProcessedCertificateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsWorkflowProcessedCertificateRequest{}

// ModelsWorkflowProcessedCertificateRequest struct for ModelsWorkflowProcessedCertificateRequest
type ModelsWorkflowProcessedCertificateRequest struct {
	CARowId *int32 `json:"CARowId,omitempty"`
	CARequestId *string `json:"CARequestId,omitempty"`
	CAHost *string `json:"CAHost,omitempty"`
	CALogicalName *string `json:"CALogicalName,omitempty"`
	KeyfactorRequestId *int32 `json:"KeyfactorRequestId,omitempty"`
	Comment *string `json:"Comment,omitempty"`
}

// NewModelsWorkflowProcessedCertificateRequest instantiates a new ModelsWorkflowProcessedCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsWorkflowProcessedCertificateRequest() *ModelsWorkflowProcessedCertificateRequest {
	this := ModelsWorkflowProcessedCertificateRequest{}
	return &this
}

// NewModelsWorkflowProcessedCertificateRequestWithDefaults instantiates a new ModelsWorkflowProcessedCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsWorkflowProcessedCertificateRequestWithDefaults() *ModelsWorkflowProcessedCertificateRequest {
	this := ModelsWorkflowProcessedCertificateRequest{}
	return &this
}

// GetCARowId returns the CARowId field value if set, zero value otherwise.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCARowId() int32 {
	if o == nil || isNil(o.CARowId) {
		var ret int32
		return ret
	}
	return *o.CARowId
}

// GetCARowIdOk returns a tuple with the CARowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCARowIdOk() (*int32, bool) {
	if o == nil || isNil(o.CARowId) {
		return nil, false
	}
	return o.CARowId, true
}

// HasCARowId returns a boolean if a field has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) HasCARowId() bool {
	if o != nil && !isNil(o.CARowId) {
		return true
	}

	return false
}

// SetCARowId gets a reference to the given int32 and assigns it to the CARowId field.
func (o *ModelsWorkflowProcessedCertificateRequest) SetCARowId(v int32) {
	o.CARowId = &v
}

// GetCARequestId returns the CARequestId field value if set, zero value otherwise.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCARequestId() string {
	if o == nil || isNil(o.CARequestId) {
		var ret string
		return ret
	}
	return *o.CARequestId
}

// GetCARequestIdOk returns a tuple with the CARequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCARequestIdOk() (*string, bool) {
	if o == nil || isNil(o.CARequestId) {
		return nil, false
	}
	return o.CARequestId, true
}

// HasCARequestId returns a boolean if a field has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) HasCARequestId() bool {
	if o != nil && !isNil(o.CARequestId) {
		return true
	}

	return false
}

// SetCARequestId gets a reference to the given string and assigns it to the CARequestId field.
func (o *ModelsWorkflowProcessedCertificateRequest) SetCARequestId(v string) {
	o.CARequestId = &v
}

// GetCAHost returns the CAHost field value if set, zero value otherwise.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCAHost() string {
	if o == nil || isNil(o.CAHost) {
		var ret string
		return ret
	}
	return *o.CAHost
}

// GetCAHostOk returns a tuple with the CAHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCAHostOk() (*string, bool) {
	if o == nil || isNil(o.CAHost) {
		return nil, false
	}
	return o.CAHost, true
}

// HasCAHost returns a boolean if a field has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) HasCAHost() bool {
	if o != nil && !isNil(o.CAHost) {
		return true
	}

	return false
}

// SetCAHost gets a reference to the given string and assigns it to the CAHost field.
func (o *ModelsWorkflowProcessedCertificateRequest) SetCAHost(v string) {
	o.CAHost = &v
}

// GetCALogicalName returns the CALogicalName field value if set, zero value otherwise.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCALogicalName() string {
	if o == nil || isNil(o.CALogicalName) {
		var ret string
		return ret
	}
	return *o.CALogicalName
}

// GetCALogicalNameOk returns a tuple with the CALogicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCALogicalNameOk() (*string, bool) {
	if o == nil || isNil(o.CALogicalName) {
		return nil, false
	}
	return o.CALogicalName, true
}

// HasCALogicalName returns a boolean if a field has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) HasCALogicalName() bool {
	if o != nil && !isNil(o.CALogicalName) {
		return true
	}

	return false
}

// SetCALogicalName gets a reference to the given string and assigns it to the CALogicalName field.
func (o *ModelsWorkflowProcessedCertificateRequest) SetCALogicalName(v string) {
	o.CALogicalName = &v
}

// GetKeyfactorRequestId returns the KeyfactorRequestId field value if set, zero value otherwise.
func (o *ModelsWorkflowProcessedCertificateRequest) GetKeyfactorRequestId() int32 {
	if o == nil || isNil(o.KeyfactorRequestId) {
		var ret int32
		return ret
	}
	return *o.KeyfactorRequestId
}

// GetKeyfactorRequestIdOk returns a tuple with the KeyfactorRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) GetKeyfactorRequestIdOk() (*int32, bool) {
	if o == nil || isNil(o.KeyfactorRequestId) {
		return nil, false
	}
	return o.KeyfactorRequestId, true
}

// HasKeyfactorRequestId returns a boolean if a field has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) HasKeyfactorRequestId() bool {
	if o != nil && !isNil(o.KeyfactorRequestId) {
		return true
	}

	return false
}

// SetKeyfactorRequestId gets a reference to the given int32 and assigns it to the KeyfactorRequestId field.
func (o *ModelsWorkflowProcessedCertificateRequest) SetKeyfactorRequestId(v int32) {
	o.KeyfactorRequestId = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ModelsWorkflowProcessedCertificateRequest) GetComment() string {
	if o == nil || isNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) GetCommentOk() (*string, bool) {
	if o == nil || isNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ModelsWorkflowProcessedCertificateRequest) HasComment() bool {
	if o != nil && !isNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ModelsWorkflowProcessedCertificateRequest) SetComment(v string) {
	o.Comment = &v
}

func (o ModelsWorkflowProcessedCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsWorkflowProcessedCertificateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: CARowId is readOnly
	if !isNil(o.CARequestId) {
		toSerialize["CARequestId"] = o.CARequestId
	}
	if !isNil(o.CAHost) {
		toSerialize["CAHost"] = o.CAHost
	}
	if !isNil(o.CALogicalName) {
		toSerialize["CALogicalName"] = o.CALogicalName
	}
	if !isNil(o.KeyfactorRequestId) {
		toSerialize["KeyfactorRequestId"] = o.KeyfactorRequestId
	}
	if !isNil(o.Comment) {
		toSerialize["Comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableModelsWorkflowProcessedCertificateRequest struct {
	value *ModelsWorkflowProcessedCertificateRequest
	isSet bool
}

func (v NullableModelsWorkflowProcessedCertificateRequest) Get() *ModelsWorkflowProcessedCertificateRequest {
	return v.value
}

func (v *NullableModelsWorkflowProcessedCertificateRequest) Set(val *ModelsWorkflowProcessedCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsWorkflowProcessedCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsWorkflowProcessedCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsWorkflowProcessedCertificateRequest(val *ModelsWorkflowProcessedCertificateRequest) *NullableModelsWorkflowProcessedCertificateRequest {
	return &NullableModelsWorkflowProcessedCertificateRequest{value: val, isSet: true}
}

func (v NullableModelsWorkflowProcessedCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsWorkflowProcessedCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


