/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsEnrollmentPFXEnrollmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsEnrollmentPFXEnrollmentResponse{}

// ModelsEnrollmentPFXEnrollmentResponse struct for ModelsEnrollmentPFXEnrollmentResponse
type ModelsEnrollmentPFXEnrollmentResponse struct {
	CertificateInformation *ModelsPkcs12CertificateResponse `json:"CertificateInformation,omitempty"`
	Metadata *map[string]string `json:"Metadata,omitempty"`
}

// NewModelsEnrollmentPFXEnrollmentResponse instantiates a new ModelsEnrollmentPFXEnrollmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsEnrollmentPFXEnrollmentResponse() *ModelsEnrollmentPFXEnrollmentResponse {
	this := ModelsEnrollmentPFXEnrollmentResponse{}
	return &this
}

// NewModelsEnrollmentPFXEnrollmentResponseWithDefaults instantiates a new ModelsEnrollmentPFXEnrollmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsEnrollmentPFXEnrollmentResponseWithDefaults() *ModelsEnrollmentPFXEnrollmentResponse {
	this := ModelsEnrollmentPFXEnrollmentResponse{}
	return &this
}

// GetCertificateInformation returns the CertificateInformation field value if set, zero value otherwise.
func (o *ModelsEnrollmentPFXEnrollmentResponse) GetCertificateInformation() ModelsPkcs12CertificateResponse {
	if o == nil || isNil(o.CertificateInformation) {
		var ret ModelsPkcs12CertificateResponse
		return ret
	}
	return *o.CertificateInformation
}

// GetCertificateInformationOk returns a tuple with the CertificateInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentPFXEnrollmentResponse) GetCertificateInformationOk() (*ModelsPkcs12CertificateResponse, bool) {
	if o == nil || isNil(o.CertificateInformation) {
		return nil, false
	}
	return o.CertificateInformation, true
}

// HasCertificateInformation returns a boolean if a field has been set.
func (o *ModelsEnrollmentPFXEnrollmentResponse) HasCertificateInformation() bool {
	if o != nil && !isNil(o.CertificateInformation) {
		return true
	}

	return false
}

// SetCertificateInformation gets a reference to the given ModelsPkcs12CertificateResponse and assigns it to the CertificateInformation field.
func (o *ModelsEnrollmentPFXEnrollmentResponse) SetCertificateInformation(v ModelsPkcs12CertificateResponse) {
	o.CertificateInformation = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ModelsEnrollmentPFXEnrollmentResponse) GetMetadata() map[string]string {
	if o == nil || isNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentPFXEnrollmentResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ModelsEnrollmentPFXEnrollmentResponse) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ModelsEnrollmentPFXEnrollmentResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o ModelsEnrollmentPFXEnrollmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsEnrollmentPFXEnrollmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateInformation) {
		toSerialize["CertificateInformation"] = o.CertificateInformation
	}
	if !isNil(o.Metadata) {
		toSerialize["Metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableModelsEnrollmentPFXEnrollmentResponse struct {
	value *ModelsEnrollmentPFXEnrollmentResponse
	isSet bool
}

func (v NullableModelsEnrollmentPFXEnrollmentResponse) Get() *ModelsEnrollmentPFXEnrollmentResponse {
	return v.value
}

func (v *NullableModelsEnrollmentPFXEnrollmentResponse) Set(val *ModelsEnrollmentPFXEnrollmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsEnrollmentPFXEnrollmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsEnrollmentPFXEnrollmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsEnrollmentPFXEnrollmentResponse(val *ModelsEnrollmentPFXEnrollmentResponse) *NullableModelsEnrollmentPFXEnrollmentResponse {
	return &NullableModelsEnrollmentPFXEnrollmentResponse{value: val, isSet: true}
}

func (v NullableModelsEnrollmentPFXEnrollmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsEnrollmentPFXEnrollmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


