/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSHAccessServerAccessResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHAccessServerAccessResponse{}

// ModelsSSHAccessServerAccessResponse struct for ModelsSSHAccessServerAccessResponse
type ModelsSSHAccessServerAccessResponse struct {
	ServerId *int32 `json:"ServerId,omitempty"`
	LogonUsers []ModelsSSHAccessLogonUserAccessResponse `json:"LogonUsers,omitempty"`
}

// NewModelsSSHAccessServerAccessResponse instantiates a new ModelsSSHAccessServerAccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHAccessServerAccessResponse() *ModelsSSHAccessServerAccessResponse {
	this := ModelsSSHAccessServerAccessResponse{}
	return &this
}

// NewModelsSSHAccessServerAccessResponseWithDefaults instantiates a new ModelsSSHAccessServerAccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHAccessServerAccessResponseWithDefaults() *ModelsSSHAccessServerAccessResponse {
	this := ModelsSSHAccessServerAccessResponse{}
	return &this
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ModelsSSHAccessServerAccessResponse) GetServerId() int32 {
	if o == nil || isNil(o.ServerId) {
		var ret int32
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessServerAccessResponse) GetServerIdOk() (*int32, bool) {
	if o == nil || isNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ModelsSSHAccessServerAccessResponse) HasServerId() bool {
	if o != nil && !isNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given int32 and assigns it to the ServerId field.
func (o *ModelsSSHAccessServerAccessResponse) SetServerId(v int32) {
	o.ServerId = &v
}

// GetLogonUsers returns the LogonUsers field value if set, zero value otherwise.
func (o *ModelsSSHAccessServerAccessResponse) GetLogonUsers() []ModelsSSHAccessLogonUserAccessResponse {
	if o == nil || isNil(o.LogonUsers) {
		var ret []ModelsSSHAccessLogonUserAccessResponse
		return ret
	}
	return o.LogonUsers
}

// GetLogonUsersOk returns a tuple with the LogonUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessServerAccessResponse) GetLogonUsersOk() ([]ModelsSSHAccessLogonUserAccessResponse, bool) {
	if o == nil || isNil(o.LogonUsers) {
		return nil, false
	}
	return o.LogonUsers, true
}

// HasLogonUsers returns a boolean if a field has been set.
func (o *ModelsSSHAccessServerAccessResponse) HasLogonUsers() bool {
	if o != nil && !isNil(o.LogonUsers) {
		return true
	}

	return false
}

// SetLogonUsers gets a reference to the given []ModelsSSHAccessLogonUserAccessResponse and assigns it to the LogonUsers field.
func (o *ModelsSSHAccessServerAccessResponse) SetLogonUsers(v []ModelsSSHAccessLogonUserAccessResponse) {
	o.LogonUsers = v
}

func (o ModelsSSHAccessServerAccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHAccessServerAccessResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !isNil(o.LogonUsers) {
		toSerialize["LogonUsers"] = o.LogonUsers
	}
	return toSerialize, nil
}

type NullableModelsSSHAccessServerAccessResponse struct {
	value *ModelsSSHAccessServerAccessResponse
	isSet bool
}

func (v NullableModelsSSHAccessServerAccessResponse) Get() *ModelsSSHAccessServerAccessResponse {
	return v.value
}

func (v *NullableModelsSSHAccessServerAccessResponse) Set(val *ModelsSSHAccessServerAccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHAccessServerAccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHAccessServerAccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHAccessServerAccessResponse(val *ModelsSSHAccessServerAccessResponse) *NullableModelsSSHAccessServerAccessResponse {
	return &NullableModelsSSHAccessServerAccessResponse{value: val, isSet: true}
}

func (v NullableModelsSSHAccessServerAccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHAccessServerAccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


