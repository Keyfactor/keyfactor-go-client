/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSLImmediateSslScanRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSLImmediateSslScanRequest{}

// ModelsSSLImmediateSslScanRequest struct for ModelsSSLImmediateSslScanRequest
type ModelsSSLImmediateSslScanRequest struct {
	Discovery bool `json:"Discovery"`
	Monitoring bool `json:"Monitoring"`
}

// NewModelsSSLImmediateSslScanRequest instantiates a new ModelsSSLImmediateSslScanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSLImmediateSslScanRequest(discovery bool, monitoring bool) *ModelsSSLImmediateSslScanRequest {
	this := ModelsSSLImmediateSslScanRequest{}
	this.Discovery = discovery
	this.Monitoring = monitoring
	return &this
}

// NewModelsSSLImmediateSslScanRequestWithDefaults instantiates a new ModelsSSLImmediateSslScanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSLImmediateSslScanRequestWithDefaults() *ModelsSSLImmediateSslScanRequest {
	this := ModelsSSLImmediateSslScanRequest{}
	return &this
}

// GetDiscovery returns the Discovery field value
func (o *ModelsSSLImmediateSslScanRequest) GetDiscovery() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Discovery
}

// GetDiscoveryOk returns a tuple with the Discovery field value
// and a boolean to check if the value has been set.
func (o *ModelsSSLImmediateSslScanRequest) GetDiscoveryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Discovery, true
}

// SetDiscovery sets field value
func (o *ModelsSSLImmediateSslScanRequest) SetDiscovery(v bool) {
	o.Discovery = v
}

// GetMonitoring returns the Monitoring field value
func (o *ModelsSSLImmediateSslScanRequest) GetMonitoring() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Monitoring
}

// GetMonitoringOk returns a tuple with the Monitoring field value
// and a boolean to check if the value has been set.
func (o *ModelsSSLImmediateSslScanRequest) GetMonitoringOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Monitoring, true
}

// SetMonitoring sets field value
func (o *ModelsSSLImmediateSslScanRequest) SetMonitoring(v bool) {
	o.Monitoring = v
}

func (o ModelsSSLImmediateSslScanRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSLImmediateSslScanRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Discovery"] = o.Discovery
	toSerialize["Monitoring"] = o.Monitoring
	return toSerialize, nil
}

type NullableModelsSSLImmediateSslScanRequest struct {
	value *ModelsSSLImmediateSslScanRequest
	isSet bool
}

func (v NullableModelsSSLImmediateSslScanRequest) Get() *ModelsSSLImmediateSslScanRequest {
	return v.value
}

func (v *NullableModelsSSLImmediateSslScanRequest) Set(val *ModelsSSLImmediateSslScanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSLImmediateSslScanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSLImmediateSslScanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSLImmediateSslScanRequest(val *ModelsSSLImmediateSslScanRequest) *NullableModelsSSLImmediateSslScanRequest {
	return &NullableModelsSSLImmediateSslScanRequest{value: val, isSet: true}
}

func (v NullableModelsSSLImmediateSslScanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSLImmediateSslScanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


