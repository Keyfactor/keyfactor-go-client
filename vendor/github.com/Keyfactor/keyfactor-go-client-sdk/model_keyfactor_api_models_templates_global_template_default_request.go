/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest{}

// KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest struct for KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest
type KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest struct {
	// The subject part to apply the default to.
	SubjectPart string `json:"SubjectPart"`
	// The value to apply by default.
	Value *string `json:"Value,omitempty"`
}

// NewKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest instantiates a new KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest(subjectPart string) *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest {
	this := KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest{}
	this.SubjectPart = subjectPart
	return &this
}

// NewKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequestWithDefaults instantiates a new KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequestWithDefaults() *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest {
	this := KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest{}
	return &this
}

// GetSubjectPart returns the SubjectPart field value
func (o *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) GetSubjectPart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectPart
}

// GetSubjectPartOk returns a tuple with the SubjectPart field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) GetSubjectPartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubjectPart, true
}

// SetSubjectPart sets field value
func (o *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) SetSubjectPart(v string) {
	o.SubjectPart = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) SetValue(v string) {
	o.Value = &v
}

func (o KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["SubjectPart"] = o.SubjectPart
	if !isNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest struct {
	value *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) Get() *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) Set(val *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest(val *KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) *NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest {
	return &NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


