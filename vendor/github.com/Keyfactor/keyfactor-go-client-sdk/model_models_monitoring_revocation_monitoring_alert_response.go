/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsMonitoringRevocationMonitoringAlertResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsMonitoringRevocationMonitoringAlertResponse{}

// ModelsMonitoringRevocationMonitoringAlertResponse struct for ModelsMonitoringRevocationMonitoringAlertResponse
type ModelsMonitoringRevocationMonitoringAlertResponse struct {
	Subject *string `json:"Subject,omitempty"`
	Message *string `json:"Message,omitempty"`
	Recipients []string `json:"Recipients,omitempty"`
}

// NewModelsMonitoringRevocationMonitoringAlertResponse instantiates a new ModelsMonitoringRevocationMonitoringAlertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsMonitoringRevocationMonitoringAlertResponse() *ModelsMonitoringRevocationMonitoringAlertResponse {
	this := ModelsMonitoringRevocationMonitoringAlertResponse{}
	return &this
}

// NewModelsMonitoringRevocationMonitoringAlertResponseWithDefaults instantiates a new ModelsMonitoringRevocationMonitoringAlertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsMonitoringRevocationMonitoringAlertResponseWithDefaults() *ModelsMonitoringRevocationMonitoringAlertResponse {
	this := ModelsMonitoringRevocationMonitoringAlertResponse{}
	return &this
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetSubject() string {
	if o == nil || isNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetSubjectOk() (*string, bool) {
	if o == nil || isNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) HasSubject() bool {
	if o != nil && !isNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetSubject(v string) {
	o.Subject = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetMessage(v string) {
	o.Message = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetRecipients() []string {
	if o == nil || isNil(o.Recipients) {
		var ret []string
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetRecipientsOk() ([]string, bool) {
	if o == nil || isNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) HasRecipients() bool {
	if o != nil && !isNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetRecipients(v []string) {
	o.Recipients = v
}

func (o ModelsMonitoringRevocationMonitoringAlertResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsMonitoringRevocationMonitoringAlertResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Subject) {
		toSerialize["Subject"] = o.Subject
	}
	if !isNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	if !isNil(o.Recipients) {
		toSerialize["Recipients"] = o.Recipients
	}
	return toSerialize, nil
}

type NullableModelsMonitoringRevocationMonitoringAlertResponse struct {
	value *ModelsMonitoringRevocationMonitoringAlertResponse
	isSet bool
}

func (v NullableModelsMonitoringRevocationMonitoringAlertResponse) Get() *ModelsMonitoringRevocationMonitoringAlertResponse {
	return v.value
}

func (v *NullableModelsMonitoringRevocationMonitoringAlertResponse) Set(val *ModelsMonitoringRevocationMonitoringAlertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsMonitoringRevocationMonitoringAlertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsMonitoringRevocationMonitoringAlertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsMonitoringRevocationMonitoringAlertResponse(val *ModelsMonitoringRevocationMonitoringAlertResponse) *NullableModelsMonitoringRevocationMonitoringAlertResponse {
	return &NullableModelsMonitoringRevocationMonitoringAlertResponse{value: val, isSet: true}
}

func (v NullableModelsMonitoringRevocationMonitoringAlertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsMonitoringRevocationMonitoringAlertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


