/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSecurityIdentitiesPermissionRolesPairResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSecurityIdentitiesPermissionRolesPairResponse{}

// ModelsSecurityIdentitiesPermissionRolesPairResponse struct for ModelsSecurityIdentitiesPermissionRolesPairResponse
type ModelsSecurityIdentitiesPermissionRolesPairResponse struct {
	Permission *string `json:"Permission,omitempty"`
	GrantedByRoles []string `json:"GrantedByRoles,omitempty"`
}

// NewModelsSecurityIdentitiesPermissionRolesPairResponse instantiates a new ModelsSecurityIdentitiesPermissionRolesPairResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSecurityIdentitiesPermissionRolesPairResponse() *ModelsSecurityIdentitiesPermissionRolesPairResponse {
	this := ModelsSecurityIdentitiesPermissionRolesPairResponse{}
	return &this
}

// NewModelsSecurityIdentitiesPermissionRolesPairResponseWithDefaults instantiates a new ModelsSecurityIdentitiesPermissionRolesPairResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSecurityIdentitiesPermissionRolesPairResponseWithDefaults() *ModelsSecurityIdentitiesPermissionRolesPairResponse {
	this := ModelsSecurityIdentitiesPermissionRolesPairResponse{}
	return &this
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) GetPermission() string {
	if o == nil || isNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) GetPermissionOk() (*string, bool) {
	if o == nil || isNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) HasPermission() bool {
	if o != nil && !isNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) SetPermission(v string) {
	o.Permission = &v
}

// GetGrantedByRoles returns the GrantedByRoles field value if set, zero value otherwise.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) GetGrantedByRoles() []string {
	if o == nil || isNil(o.GrantedByRoles) {
		var ret []string
		return ret
	}
	return o.GrantedByRoles
}

// GetGrantedByRolesOk returns a tuple with the GrantedByRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) GetGrantedByRolesOk() ([]string, bool) {
	if o == nil || isNil(o.GrantedByRoles) {
		return nil, false
	}
	return o.GrantedByRoles, true
}

// HasGrantedByRoles returns a boolean if a field has been set.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) HasGrantedByRoles() bool {
	if o != nil && !isNil(o.GrantedByRoles) {
		return true
	}

	return false
}

// SetGrantedByRoles gets a reference to the given []string and assigns it to the GrantedByRoles field.
func (o *ModelsSecurityIdentitiesPermissionRolesPairResponse) SetGrantedByRoles(v []string) {
	o.GrantedByRoles = v
}

func (o ModelsSecurityIdentitiesPermissionRolesPairResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSecurityIdentitiesPermissionRolesPairResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Permission) {
		toSerialize["Permission"] = o.Permission
	}
	if !isNil(o.GrantedByRoles) {
		toSerialize["GrantedByRoles"] = o.GrantedByRoles
	}
	return toSerialize, nil
}

type NullableModelsSecurityIdentitiesPermissionRolesPairResponse struct {
	value *ModelsSecurityIdentitiesPermissionRolesPairResponse
	isSet bool
}

func (v NullableModelsSecurityIdentitiesPermissionRolesPairResponse) Get() *ModelsSecurityIdentitiesPermissionRolesPairResponse {
	return v.value
}

func (v *NullableModelsSecurityIdentitiesPermissionRolesPairResponse) Set(val *ModelsSecurityIdentitiesPermissionRolesPairResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSecurityIdentitiesPermissionRolesPairResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSecurityIdentitiesPermissionRolesPairResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSecurityIdentitiesPermissionRolesPairResponse(val *ModelsSecurityIdentitiesPermissionRolesPairResponse) *NullableModelsSecurityIdentitiesPermissionRolesPairResponse {
	return &NullableModelsSecurityIdentitiesPermissionRolesPairResponse{value: val, isSet: true}
}

func (v NullableModelsSecurityIdentitiesPermissionRolesPairResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSecurityIdentitiesPermissionRolesPairResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


