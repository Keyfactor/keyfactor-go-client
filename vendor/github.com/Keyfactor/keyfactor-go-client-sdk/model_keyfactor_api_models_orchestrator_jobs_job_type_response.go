/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsOrchestratorJobsJobTypeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsOrchestratorJobsJobTypeResponse{}

// KeyfactorApiModelsOrchestratorJobsJobTypeResponse struct for KeyfactorApiModelsOrchestratorJobsJobTypeResponse
type KeyfactorApiModelsOrchestratorJobsJobTypeResponse struct {
	Id *string `json:"Id,omitempty"`
	JobTypeName *string `json:"JobTypeName,omitempty"`
	Description *string `json:"Description,omitempty"`
	JobTypeFields []KeyfactorApiModelsOrchestratorJobsJobTypeFieldResponse `json:"JobTypeFields,omitempty"`
}

// NewKeyfactorApiModelsOrchestratorJobsJobTypeResponse instantiates a new KeyfactorApiModelsOrchestratorJobsJobTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsOrchestratorJobsJobTypeResponse() *KeyfactorApiModelsOrchestratorJobsJobTypeResponse {
	this := KeyfactorApiModelsOrchestratorJobsJobTypeResponse{}
	return &this
}

// NewKeyfactorApiModelsOrchestratorJobsJobTypeResponseWithDefaults instantiates a new KeyfactorApiModelsOrchestratorJobsJobTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsOrchestratorJobsJobTypeResponseWithDefaults() *KeyfactorApiModelsOrchestratorJobsJobTypeResponse {
	this := KeyfactorApiModelsOrchestratorJobsJobTypeResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) SetId(v string) {
	o.Id = &v
}

// GetJobTypeName returns the JobTypeName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetJobTypeName() string {
	if o == nil || isNil(o.JobTypeName) {
		var ret string
		return ret
	}
	return *o.JobTypeName
}

// GetJobTypeNameOk returns a tuple with the JobTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetJobTypeNameOk() (*string, bool) {
	if o == nil || isNil(o.JobTypeName) {
		return nil, false
	}
	return o.JobTypeName, true
}

// HasJobTypeName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) HasJobTypeName() bool {
	if o != nil && !isNil(o.JobTypeName) {
		return true
	}

	return false
}

// SetJobTypeName gets a reference to the given string and assigns it to the JobTypeName field.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) SetJobTypeName(v string) {
	o.JobTypeName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) SetDescription(v string) {
	o.Description = &v
}

// GetJobTypeFields returns the JobTypeFields field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetJobTypeFields() []KeyfactorApiModelsOrchestratorJobsJobTypeFieldResponse {
	if o == nil || isNil(o.JobTypeFields) {
		var ret []KeyfactorApiModelsOrchestratorJobsJobTypeFieldResponse
		return ret
	}
	return o.JobTypeFields
}

// GetJobTypeFieldsOk returns a tuple with the JobTypeFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) GetJobTypeFieldsOk() ([]KeyfactorApiModelsOrchestratorJobsJobTypeFieldResponse, bool) {
	if o == nil || isNil(o.JobTypeFields) {
		return nil, false
	}
	return o.JobTypeFields, true
}

// HasJobTypeFields returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) HasJobTypeFields() bool {
	if o != nil && !isNil(o.JobTypeFields) {
		return true
	}

	return false
}

// SetJobTypeFields gets a reference to the given []KeyfactorApiModelsOrchestratorJobsJobTypeFieldResponse and assigns it to the JobTypeFields field.
func (o *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) SetJobTypeFields(v []KeyfactorApiModelsOrchestratorJobsJobTypeFieldResponse) {
	o.JobTypeFields = v
}

func (o KeyfactorApiModelsOrchestratorJobsJobTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsOrchestratorJobsJobTypeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.JobTypeName) {
		toSerialize["JobTypeName"] = o.JobTypeName
	}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !isNil(o.JobTypeFields) {
		toSerialize["JobTypeFields"] = o.JobTypeFields
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse struct {
	value *KeyfactorApiModelsOrchestratorJobsJobTypeResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse) Get() *KeyfactorApiModelsOrchestratorJobsJobTypeResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse) Set(val *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse(val *KeyfactorApiModelsOrchestratorJobsJobTypeResponse) *NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse {
	return &NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsOrchestratorJobsJobTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


