/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsSSHKeysKeyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHKeysKeyResponse{}

// ModelsSSHKeysKeyResponse struct for ModelsSSHKeysKeyResponse
type ModelsSSHKeysKeyResponse struct {
	Id *int32 `json:"Id,omitempty"`
	Fingerprint *string `json:"Fingerprint,omitempty"`
	PublicKey *string `json:"PublicKey,omitempty"`
	PrivateKey *string `json:"PrivateKey,omitempty"`
	KeyType *string `json:"KeyType,omitempty"`
	KeyLength *int32 `json:"KeyLength,omitempty"`
	CreationDate *time.Time `json:"CreationDate,omitempty"`
	StaleDate *time.Time `json:"StaleDate,omitempty"`
	Email *string `json:"Email,omitempty"`
	Comments []string `json:"Comments,omitempty"`
	LogonCount *int32 `json:"LogonCount,omitempty"`
}

// NewModelsSSHKeysKeyResponse instantiates a new ModelsSSHKeysKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHKeysKeyResponse() *ModelsSSHKeysKeyResponse {
	this := ModelsSSHKeysKeyResponse{}
	return &this
}

// NewModelsSSHKeysKeyResponseWithDefaults instantiates a new ModelsSSHKeysKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHKeysKeyResponseWithDefaults() *ModelsSSHKeysKeyResponse {
	this := ModelsSSHKeysKeyResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsSSHKeysKeyResponse) SetId(v int32) {
	o.Id = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetFingerprint() string {
	if o == nil || isNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetFingerprintOk() (*string, bool) {
	if o == nil || isNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasFingerprint() bool {
	if o != nil && !isNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *ModelsSSHKeysKeyResponse) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetPublicKey() string {
	if o == nil || isNil(o.PublicKey) {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetPublicKeyOk() (*string, bool) {
	if o == nil || isNil(o.PublicKey) {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasPublicKey() bool {
	if o != nil && !isNil(o.PublicKey) {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *ModelsSSHKeysKeyResponse) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetPrivateKey() string {
	if o == nil || isNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetPrivateKeyOk() (*string, bool) {
	if o == nil || isNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasPrivateKey() bool {
	if o != nil && !isNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *ModelsSSHKeysKeyResponse) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetKeyType() string {
	if o == nil || isNil(o.KeyType) {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetKeyTypeOk() (*string, bool) {
	if o == nil || isNil(o.KeyType) {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasKeyType() bool {
	if o != nil && !isNil(o.KeyType) {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *ModelsSSHKeysKeyResponse) SetKeyType(v string) {
	o.KeyType = &v
}

// GetKeyLength returns the KeyLength field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetKeyLength() int32 {
	if o == nil || isNil(o.KeyLength) {
		var ret int32
		return ret
	}
	return *o.KeyLength
}

// GetKeyLengthOk returns a tuple with the KeyLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetKeyLengthOk() (*int32, bool) {
	if o == nil || isNil(o.KeyLength) {
		return nil, false
	}
	return o.KeyLength, true
}

// HasKeyLength returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasKeyLength() bool {
	if o != nil && !isNil(o.KeyLength) {
		return true
	}

	return false
}

// SetKeyLength gets a reference to the given int32 and assigns it to the KeyLength field.
func (o *ModelsSSHKeysKeyResponse) SetKeyLength(v int32) {
	o.KeyLength = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetCreationDate() time.Time {
	if o == nil || isNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasCreationDate() bool {
	if o != nil && !isNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *ModelsSSHKeysKeyResponse) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetStaleDate returns the StaleDate field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetStaleDate() time.Time {
	if o == nil || isNil(o.StaleDate) {
		var ret time.Time
		return ret
	}
	return *o.StaleDate
}

// GetStaleDateOk returns a tuple with the StaleDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetStaleDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.StaleDate) {
		return nil, false
	}
	return o.StaleDate, true
}

// HasStaleDate returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasStaleDate() bool {
	if o != nil && !isNil(o.StaleDate) {
		return true
	}

	return false
}

// SetStaleDate gets a reference to the given time.Time and assigns it to the StaleDate field.
func (o *ModelsSSHKeysKeyResponse) SetStaleDate(v time.Time) {
	o.StaleDate = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ModelsSSHKeysKeyResponse) SetEmail(v string) {
	o.Email = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetComments() []string {
	if o == nil || isNil(o.Comments) {
		var ret []string
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetCommentsOk() ([]string, bool) {
	if o == nil || isNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasComments() bool {
	if o != nil && !isNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []string and assigns it to the Comments field.
func (o *ModelsSSHKeysKeyResponse) SetComments(v []string) {
	o.Comments = v
}

// GetLogonCount returns the LogonCount field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyResponse) GetLogonCount() int32 {
	if o == nil || isNil(o.LogonCount) {
		var ret int32
		return ret
	}
	return *o.LogonCount
}

// GetLogonCountOk returns a tuple with the LogonCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyResponse) GetLogonCountOk() (*int32, bool) {
	if o == nil || isNil(o.LogonCount) {
		return nil, false
	}
	return o.LogonCount, true
}

// HasLogonCount returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyResponse) HasLogonCount() bool {
	if o != nil && !isNil(o.LogonCount) {
		return true
	}

	return false
}

// SetLogonCount gets a reference to the given int32 and assigns it to the LogonCount field.
func (o *ModelsSSHKeysKeyResponse) SetLogonCount(v int32) {
	o.LogonCount = &v
}

func (o ModelsSSHKeysKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHKeysKeyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Fingerprint) {
		toSerialize["Fingerprint"] = o.Fingerprint
	}
	if !isNil(o.PublicKey) {
		toSerialize["PublicKey"] = o.PublicKey
	}
	if !isNil(o.PrivateKey) {
		toSerialize["PrivateKey"] = o.PrivateKey
	}
	if !isNil(o.KeyType) {
		toSerialize["KeyType"] = o.KeyType
	}
	if !isNil(o.KeyLength) {
		toSerialize["KeyLength"] = o.KeyLength
	}
	if !isNil(o.CreationDate) {
		toSerialize["CreationDate"] = o.CreationDate
	}
	if !isNil(o.StaleDate) {
		toSerialize["StaleDate"] = o.StaleDate
	}
	if !isNil(o.Email) {
		toSerialize["Email"] = o.Email
	}
	if !isNil(o.Comments) {
		toSerialize["Comments"] = o.Comments
	}
	if !isNil(o.LogonCount) {
		toSerialize["LogonCount"] = o.LogonCount
	}
	return toSerialize, nil
}

type NullableModelsSSHKeysKeyResponse struct {
	value *ModelsSSHKeysKeyResponse
	isSet bool
}

func (v NullableModelsSSHKeysKeyResponse) Get() *ModelsSSHKeysKeyResponse {
	return v.value
}

func (v *NullableModelsSSHKeysKeyResponse) Set(val *ModelsSSHKeysKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHKeysKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHKeysKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHKeysKeyResponse(val *ModelsSSHKeysKeyResponse) *NullableModelsSSHKeysKeyResponse {
	return &NullableModelsSSHKeysKeyResponse{value: val, isSet: true}
}

func (v NullableModelsSSHKeysKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHKeysKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


