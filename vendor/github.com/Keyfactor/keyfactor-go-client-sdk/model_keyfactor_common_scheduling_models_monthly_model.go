/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorCommonSchedulingModelsMonthlyModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorCommonSchedulingModelsMonthlyModel{}

// KeyfactorCommonSchedulingModelsMonthlyModel struct for KeyfactorCommonSchedulingModelsMonthlyModel
type KeyfactorCommonSchedulingModelsMonthlyModel struct {
	Day *int32 `json:"Day,omitempty"`
	Time *time.Time `json:"Time,omitempty"`
}

// NewKeyfactorCommonSchedulingModelsMonthlyModel instantiates a new KeyfactorCommonSchedulingModelsMonthlyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorCommonSchedulingModelsMonthlyModel() *KeyfactorCommonSchedulingModelsMonthlyModel {
	this := KeyfactorCommonSchedulingModelsMonthlyModel{}
	return &this
}

// NewKeyfactorCommonSchedulingModelsMonthlyModelWithDefaults instantiates a new KeyfactorCommonSchedulingModelsMonthlyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorCommonSchedulingModelsMonthlyModelWithDefaults() *KeyfactorCommonSchedulingModelsMonthlyModel {
	this := KeyfactorCommonSchedulingModelsMonthlyModel{}
	return &this
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) GetDay() int32 {
	if o == nil || isNil(o.Day) {
		var ret int32
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) GetDayOk() (*int32, bool) {
	if o == nil || isNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) HasDay() bool {
	if o != nil && !isNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given int32 and assigns it to the Day field.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) SetDay(v int32) {
	o.Day = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) GetTime() time.Time {
	if o == nil || isNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) GetTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) HasTime() bool {
	if o != nil && !isNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *KeyfactorCommonSchedulingModelsMonthlyModel) SetTime(v time.Time) {
	o.Time = &v
}

func (o KeyfactorCommonSchedulingModelsMonthlyModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorCommonSchedulingModelsMonthlyModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Day) {
		toSerialize["Day"] = o.Day
	}
	if !isNil(o.Time) {
		toSerialize["Time"] = o.Time
	}
	return toSerialize, nil
}

type NullableKeyfactorCommonSchedulingModelsMonthlyModel struct {
	value *KeyfactorCommonSchedulingModelsMonthlyModel
	isSet bool
}

func (v NullableKeyfactorCommonSchedulingModelsMonthlyModel) Get() *KeyfactorCommonSchedulingModelsMonthlyModel {
	return v.value
}

func (v *NullableKeyfactorCommonSchedulingModelsMonthlyModel) Set(val *KeyfactorCommonSchedulingModelsMonthlyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorCommonSchedulingModelsMonthlyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorCommonSchedulingModelsMonthlyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorCommonSchedulingModelsMonthlyModel(val *KeyfactorCommonSchedulingModelsMonthlyModel) *NullableKeyfactorCommonSchedulingModelsMonthlyModel {
	return &NullableKeyfactorCommonSchedulingModelsMonthlyModel{value: val, isSet: true}
}

func (v NullableKeyfactorCommonSchedulingModelsMonthlyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorCommonSchedulingModelsMonthlyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


