/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{}

// ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel struct for ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel
type ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel struct {
	StoreMachine *string `json:"StoreMachine,omitempty"`
	StorePath *string `json:"StorePath,omitempty"`
	StoreType *int32 `json:"StoreType,omitempty"`
	Alias *string `json:"Alias,omitempty"`
	ChainLevel *int32 `json:"ChainLevel,omitempty"`
	CertStoreId *string `json:"CertStoreId,omitempty"`
}

// NewModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel instantiates a new ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel() *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	this := ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{}
	return &this
}

// NewModelsCertificateRetrievalResponseCertificateStoreInventoryItemModelWithDefaults instantiates a new ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateRetrievalResponseCertificateStoreInventoryItemModelWithDefaults() *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	this := ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{}
	return &this
}

// GetStoreMachine returns the StoreMachine field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreMachine() string {
	if o == nil || isNil(o.StoreMachine) {
		var ret string
		return ret
	}
	return *o.StoreMachine
}

// GetStoreMachineOk returns a tuple with the StoreMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreMachineOk() (*string, bool) {
	if o == nil || isNil(o.StoreMachine) {
		return nil, false
	}
	return o.StoreMachine, true
}

// HasStoreMachine returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasStoreMachine() bool {
	if o != nil && !isNil(o.StoreMachine) {
		return true
	}

	return false
}

// SetStoreMachine gets a reference to the given string and assigns it to the StoreMachine field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStoreMachine(v string) {
	o.StoreMachine = &v
}

// GetStorePath returns the StorePath field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStorePath() string {
	if o == nil || isNil(o.StorePath) {
		var ret string
		return ret
	}
	return *o.StorePath
}

// GetStorePathOk returns a tuple with the StorePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStorePathOk() (*string, bool) {
	if o == nil || isNil(o.StorePath) {
		return nil, false
	}
	return o.StorePath, true
}

// HasStorePath returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasStorePath() bool {
	if o != nil && !isNil(o.StorePath) {
		return true
	}

	return false
}

// SetStorePath gets a reference to the given string and assigns it to the StorePath field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStorePath(v string) {
	o.StorePath = &v
}

// GetStoreType returns the StoreType field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreType() int32 {
	if o == nil || isNil(o.StoreType) {
		var ret int32
		return ret
	}
	return *o.StoreType
}

// GetStoreTypeOk returns a tuple with the StoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreTypeOk() (*int32, bool) {
	if o == nil || isNil(o.StoreType) {
		return nil, false
	}
	return o.StoreType, true
}

// HasStoreType returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasStoreType() bool {
	if o != nil && !isNil(o.StoreType) {
		return true
	}

	return false
}

// SetStoreType gets a reference to the given int32 and assigns it to the StoreType field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStoreType(v int32) {
	o.StoreType = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetAlias() string {
	if o == nil || isNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetAliasOk() (*string, bool) {
	if o == nil || isNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasAlias() bool {
	if o != nil && !isNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetAlias(v string) {
	o.Alias = &v
}

// GetChainLevel returns the ChainLevel field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetChainLevel() int32 {
	if o == nil || isNil(o.ChainLevel) {
		var ret int32
		return ret
	}
	return *o.ChainLevel
}

// GetChainLevelOk returns a tuple with the ChainLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetChainLevelOk() (*int32, bool) {
	if o == nil || isNil(o.ChainLevel) {
		return nil, false
	}
	return o.ChainLevel, true
}

// HasChainLevel returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasChainLevel() bool {
	if o != nil && !isNil(o.ChainLevel) {
		return true
	}

	return false
}

// SetChainLevel gets a reference to the given int32 and assigns it to the ChainLevel field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetChainLevel(v int32) {
	o.ChainLevel = &v
}

// GetCertStoreId returns the CertStoreId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetCertStoreId() string {
	if o == nil || isNil(o.CertStoreId) {
		var ret string
		return ret
	}
	return *o.CertStoreId
}

// GetCertStoreIdOk returns a tuple with the CertStoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetCertStoreIdOk() (*string, bool) {
	if o == nil || isNil(o.CertStoreId) {
		return nil, false
	}
	return o.CertStoreId, true
}

// HasCertStoreId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasCertStoreId() bool {
	if o != nil && !isNil(o.CertStoreId) {
		return true
	}

	return false
}

// SetCertStoreId gets a reference to the given string and assigns it to the CertStoreId field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetCertStoreId(v string) {
	o.CertStoreId = &v
}

func (o ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StoreMachine) {
		toSerialize["StoreMachine"] = o.StoreMachine
	}
	if !isNil(o.StorePath) {
		toSerialize["StorePath"] = o.StorePath
	}
	if !isNil(o.StoreType) {
		toSerialize["StoreType"] = o.StoreType
	}
	if !isNil(o.Alias) {
		toSerialize["Alias"] = o.Alias
	}
	if !isNil(o.ChainLevel) {
		toSerialize["ChainLevel"] = o.ChainLevel
	}
	if !isNil(o.CertStoreId) {
		toSerialize["CertStoreId"] = o.CertStoreId
	}
	return toSerialize, nil
}

type NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel struct {
	value *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel
	isSet bool
}

func (v NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) Get() *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	return v.value
}

func (v *NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) Set(val *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel(val *ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) *NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	return &NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{value: val, isSet: true}
}

func (v NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


