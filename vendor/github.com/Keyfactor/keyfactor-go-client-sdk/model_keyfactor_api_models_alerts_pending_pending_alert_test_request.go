/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsAlertsPendingPendingAlertTestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsAlertsPendingPendingAlertTestRequest{}

// KeyfactorApiModelsAlertsPendingPendingAlertTestRequest struct for KeyfactorApiModelsAlertsPendingPendingAlertTestRequest
type KeyfactorApiModelsAlertsPendingPendingAlertTestRequest struct {
	AlertId *int32 `json:"AlertId,omitempty"`
	SendAlerts *bool `json:"SendAlerts,omitempty"`
}

// NewKeyfactorApiModelsAlertsPendingPendingAlertTestRequest instantiates a new KeyfactorApiModelsAlertsPendingPendingAlertTestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsAlertsPendingPendingAlertTestRequest() *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest {
	this := KeyfactorApiModelsAlertsPendingPendingAlertTestRequest{}
	return &this
}

// NewKeyfactorApiModelsAlertsPendingPendingAlertTestRequestWithDefaults instantiates a new KeyfactorApiModelsAlertsPendingPendingAlertTestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsAlertsPendingPendingAlertTestRequestWithDefaults() *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest {
	this := KeyfactorApiModelsAlertsPendingPendingAlertTestRequest{}
	return &this
}

// GetAlertId returns the AlertId field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) GetAlertId() int32 {
	if o == nil || isNil(o.AlertId) {
		var ret int32
		return ret
	}
	return *o.AlertId
}

// GetAlertIdOk returns a tuple with the AlertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) GetAlertIdOk() (*int32, bool) {
	if o == nil || isNil(o.AlertId) {
		return nil, false
	}
	return o.AlertId, true
}

// HasAlertId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) HasAlertId() bool {
	if o != nil && !isNil(o.AlertId) {
		return true
	}

	return false
}

// SetAlertId gets a reference to the given int32 and assigns it to the AlertId field.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) SetAlertId(v int32) {
	o.AlertId = &v
}

// GetSendAlerts returns the SendAlerts field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) GetSendAlerts() bool {
	if o == nil || isNil(o.SendAlerts) {
		var ret bool
		return ret
	}
	return *o.SendAlerts
}

// GetSendAlertsOk returns a tuple with the SendAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) GetSendAlertsOk() (*bool, bool) {
	if o == nil || isNil(o.SendAlerts) {
		return nil, false
	}
	return o.SendAlerts, true
}

// HasSendAlerts returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) HasSendAlerts() bool {
	if o != nil && !isNil(o.SendAlerts) {
		return true
	}

	return false
}

// SetSendAlerts gets a reference to the given bool and assigns it to the SendAlerts field.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) SetSendAlerts(v bool) {
	o.SendAlerts = &v
}

func (o KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AlertId) {
		toSerialize["AlertId"] = o.AlertId
	}
	if !isNil(o.SendAlerts) {
		toSerialize["SendAlerts"] = o.SendAlerts
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest struct {
	value *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest) Get() *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest) Set(val *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest(val *KeyfactorApiModelsAlertsPendingPendingAlertTestRequest) *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest {
	return &NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


