/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSHUsersSshUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHUsersSshUserResponse{}

// ModelsSSHUsersSshUserResponse struct for ModelsSSHUsersSshUserResponse
type ModelsSSHUsersSshUserResponse struct {
	Id *int32 `json:"Id,omitempty"`
	Key *ModelsSSHKeysKeyResponse `json:"Key,omitempty"`
	Username *string `json:"Username,omitempty"`
	LogonIds []int32 `json:"LogonIds,omitempty"`
}

// NewModelsSSHUsersSshUserResponse instantiates a new ModelsSSHUsersSshUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHUsersSshUserResponse() *ModelsSSHUsersSshUserResponse {
	this := ModelsSSHUsersSshUserResponse{}
	return &this
}

// NewModelsSSHUsersSshUserResponseWithDefaults instantiates a new ModelsSSHUsersSshUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHUsersSshUserResponseWithDefaults() *ModelsSSHUsersSshUserResponse {
	this := ModelsSSHUsersSshUserResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsSSHUsersSshUserResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHUsersSshUserResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsSSHUsersSshUserResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsSSHUsersSshUserResponse) SetId(v int32) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ModelsSSHUsersSshUserResponse) GetKey() ModelsSSHKeysKeyResponse {
	if o == nil || isNil(o.Key) {
		var ret ModelsSSHKeysKeyResponse
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHUsersSshUserResponse) GetKeyOk() (*ModelsSSHKeysKeyResponse, bool) {
	if o == nil || isNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ModelsSSHUsersSshUserResponse) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given ModelsSSHKeysKeyResponse and assigns it to the Key field.
func (o *ModelsSSHUsersSshUserResponse) SetKey(v ModelsSSHKeysKeyResponse) {
	o.Key = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ModelsSSHUsersSshUserResponse) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHUsersSshUserResponse) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ModelsSSHUsersSshUserResponse) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ModelsSSHUsersSshUserResponse) SetUsername(v string) {
	o.Username = &v
}

// GetLogonIds returns the LogonIds field value if set, zero value otherwise.
func (o *ModelsSSHUsersSshUserResponse) GetLogonIds() []int32 {
	if o == nil || isNil(o.LogonIds) {
		var ret []int32
		return ret
	}
	return o.LogonIds
}

// GetLogonIdsOk returns a tuple with the LogonIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHUsersSshUserResponse) GetLogonIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.LogonIds) {
		return nil, false
	}
	return o.LogonIds, true
}

// HasLogonIds returns a boolean if a field has been set.
func (o *ModelsSSHUsersSshUserResponse) HasLogonIds() bool {
	if o != nil && !isNil(o.LogonIds) {
		return true
	}

	return false
}

// SetLogonIds gets a reference to the given []int32 and assigns it to the LogonIds field.
func (o *ModelsSSHUsersSshUserResponse) SetLogonIds(v []int32) {
	o.LogonIds = v
}

func (o ModelsSSHUsersSshUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHUsersSshUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Key) {
		toSerialize["Key"] = o.Key
	}
	if !isNil(o.Username) {
		toSerialize["Username"] = o.Username
	}
	if !isNil(o.LogonIds) {
		toSerialize["LogonIds"] = o.LogonIds
	}
	return toSerialize, nil
}

type NullableModelsSSHUsersSshUserResponse struct {
	value *ModelsSSHUsersSshUserResponse
	isSet bool
}

func (v NullableModelsSSHUsersSshUserResponse) Get() *ModelsSSHUsersSshUserResponse {
	return v.value
}

func (v *NullableModelsSSHUsersSshUserResponse) Set(val *ModelsSSHUsersSshUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHUsersSshUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHUsersSshUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHUsersSshUserResponse(val *ModelsSSHUsersSshUserResponse) *NullableModelsSSHUsersSshUserResponse {
	return &NullableModelsSSHUsersSshUserResponse{value: val, isSet: true}
}

func (v NullableModelsSSHUsersSshUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHUsersSshUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


