/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSecurityIdentitiesSecurityIdentityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSecurityIdentitiesSecurityIdentityRequest{}

// ModelsSecurityIdentitiesSecurityIdentityRequest Model for requesting a security identity.
type ModelsSecurityIdentitiesSecurityIdentityRequest struct {
	// The username of the security identity.
	AccountName string `json:"AccountName"`
}

// NewModelsSecurityIdentitiesSecurityIdentityRequest instantiates a new ModelsSecurityIdentitiesSecurityIdentityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSecurityIdentitiesSecurityIdentityRequest(accountName string) *ModelsSecurityIdentitiesSecurityIdentityRequest {
	this := ModelsSecurityIdentitiesSecurityIdentityRequest{}
	this.AccountName = accountName
	return &this
}

// NewModelsSecurityIdentitiesSecurityIdentityRequestWithDefaults instantiates a new ModelsSecurityIdentitiesSecurityIdentityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSecurityIdentitiesSecurityIdentityRequestWithDefaults() *ModelsSecurityIdentitiesSecurityIdentityRequest {
	this := ModelsSecurityIdentitiesSecurityIdentityRequest{}
	return &this
}

// GetAccountName returns the AccountName field value
func (o *ModelsSecurityIdentitiesSecurityIdentityRequest) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityRequest) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *ModelsSecurityIdentitiesSecurityIdentityRequest) SetAccountName(v string) {
	o.AccountName = v
}

func (o ModelsSecurityIdentitiesSecurityIdentityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSecurityIdentitiesSecurityIdentityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["AccountName"] = o.AccountName
	return toSerialize, nil
}

type NullableModelsSecurityIdentitiesSecurityIdentityRequest struct {
	value *ModelsSecurityIdentitiesSecurityIdentityRequest
	isSet bool
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityRequest) Get() *ModelsSecurityIdentitiesSecurityIdentityRequest {
	return v.value
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityRequest) Set(val *ModelsSecurityIdentitiesSecurityIdentityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSecurityIdentitiesSecurityIdentityRequest(val *ModelsSecurityIdentitiesSecurityIdentityRequest) *NullableModelsSecurityIdentitiesSecurityIdentityRequest {
	return &NullableModelsSecurityIdentitiesSecurityIdentityRequest{value: val, isSet: true}
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


