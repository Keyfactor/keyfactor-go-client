/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsWorkflowsParameterDefinitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsWorkflowsParameterDefinitionResponse{}

// KeyfactorApiModelsWorkflowsParameterDefinitionResponse struct for KeyfactorApiModelsWorkflowsParameterDefinitionResponse
type KeyfactorApiModelsWorkflowsParameterDefinitionResponse struct {
	DisplayName *string `json:"DisplayName,omitempty"`
	ParameterType *int32 `json:"ParameterType,omitempty"`
	Required *bool `json:"Required,omitempty"`
	DefaultValue *string `json:"DefaultValue,omitempty"`
	ControlType *int32 `json:"ControlType,omitempty"`
	PotentialValues *map[string]string `json:"PotentialValues,omitempty"`
	SupportTokenReplacement *bool `json:"SupportTokenReplacement,omitempty"`
	DependsOn *map[string]string `json:"DependsOn,omitempty"`
}

// NewKeyfactorApiModelsWorkflowsParameterDefinitionResponse instantiates a new KeyfactorApiModelsWorkflowsParameterDefinitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsWorkflowsParameterDefinitionResponse() *KeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	this := KeyfactorApiModelsWorkflowsParameterDefinitionResponse{}
	return &this
}

// NewKeyfactorApiModelsWorkflowsParameterDefinitionResponseWithDefaults instantiates a new KeyfactorApiModelsWorkflowsParameterDefinitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsWorkflowsParameterDefinitionResponseWithDefaults() *KeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	this := KeyfactorApiModelsWorkflowsParameterDefinitionResponse{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetParameterType returns the ParameterType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetParameterType() int32 {
	if o == nil || isNil(o.ParameterType) {
		var ret int32
		return ret
	}
	return *o.ParameterType
}

// GetParameterTypeOk returns a tuple with the ParameterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetParameterTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ParameterType) {
		return nil, false
	}
	return o.ParameterType, true
}

// HasParameterType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasParameterType() bool {
	if o != nil && !isNil(o.ParameterType) {
		return true
	}

	return false
}

// SetParameterType gets a reference to the given int32 and assigns it to the ParameterType field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetParameterType(v int32) {
	o.ParameterType = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetRequired() bool {
	if o == nil || isNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasRequired() bool {
	if o != nil && !isNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetRequired(v bool) {
	o.Required = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDefaultValue() string {
	if o == nil || isNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDefaultValueOk() (*string, bool) {
	if o == nil || isNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasDefaultValue() bool {
	if o != nil && !isNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetControlType returns the ControlType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetControlType() int32 {
	if o == nil || isNil(o.ControlType) {
		var ret int32
		return ret
	}
	return *o.ControlType
}

// GetControlTypeOk returns a tuple with the ControlType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetControlTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ControlType) {
		return nil, false
	}
	return o.ControlType, true
}

// HasControlType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasControlType() bool {
	if o != nil && !isNil(o.ControlType) {
		return true
	}

	return false
}

// SetControlType gets a reference to the given int32 and assigns it to the ControlType field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetControlType(v int32) {
	o.ControlType = &v
}

// GetPotentialValues returns the PotentialValues field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetPotentialValues() map[string]string {
	if o == nil || isNil(o.PotentialValues) {
		var ret map[string]string
		return ret
	}
	return *o.PotentialValues
}

// GetPotentialValuesOk returns a tuple with the PotentialValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetPotentialValuesOk() (*map[string]string, bool) {
	if o == nil || isNil(o.PotentialValues) {
		return nil, false
	}
	return o.PotentialValues, true
}

// HasPotentialValues returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasPotentialValues() bool {
	if o != nil && !isNil(o.PotentialValues) {
		return true
	}

	return false
}

// SetPotentialValues gets a reference to the given map[string]string and assigns it to the PotentialValues field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetPotentialValues(v map[string]string) {
	o.PotentialValues = &v
}

// GetSupportTokenReplacement returns the SupportTokenReplacement field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetSupportTokenReplacement() bool {
	if o == nil || isNil(o.SupportTokenReplacement) {
		var ret bool
		return ret
	}
	return *o.SupportTokenReplacement
}

// GetSupportTokenReplacementOk returns a tuple with the SupportTokenReplacement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetSupportTokenReplacementOk() (*bool, bool) {
	if o == nil || isNil(o.SupportTokenReplacement) {
		return nil, false
	}
	return o.SupportTokenReplacement, true
}

// HasSupportTokenReplacement returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasSupportTokenReplacement() bool {
	if o != nil && !isNil(o.SupportTokenReplacement) {
		return true
	}

	return false
}

// SetSupportTokenReplacement gets a reference to the given bool and assigns it to the SupportTokenReplacement field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetSupportTokenReplacement(v bool) {
	o.SupportTokenReplacement = &v
}

// GetDependsOn returns the DependsOn field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDependsOn() map[string]string {
	if o == nil || isNil(o.DependsOn) {
		var ret map[string]string
		return ret
	}
	return *o.DependsOn
}

// GetDependsOnOk returns a tuple with the DependsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDependsOnOk() (*map[string]string, bool) {
	if o == nil || isNil(o.DependsOn) {
		return nil, false
	}
	return o.DependsOn, true
}

// HasDependsOn returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasDependsOn() bool {
	if o != nil && !isNil(o.DependsOn) {
		return true
	}

	return false
}

// SetDependsOn gets a reference to the given map[string]string and assigns it to the DependsOn field.
func (o *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDependsOn(v map[string]string) {
	o.DependsOn = &v
}

func (o KeyfactorApiModelsWorkflowsParameterDefinitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsWorkflowsParameterDefinitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !isNil(o.ParameterType) {
		toSerialize["ParameterType"] = o.ParameterType
	}
	if !isNil(o.Required) {
		toSerialize["Required"] = o.Required
	}
	if !isNil(o.DefaultValue) {
		toSerialize["DefaultValue"] = o.DefaultValue
	}
	if !isNil(o.ControlType) {
		toSerialize["ControlType"] = o.ControlType
	}
	if !isNil(o.PotentialValues) {
		toSerialize["PotentialValues"] = o.PotentialValues
	}
	if !isNil(o.SupportTokenReplacement) {
		toSerialize["SupportTokenReplacement"] = o.SupportTokenReplacement
	}
	if !isNil(o.DependsOn) {
		toSerialize["DependsOn"] = o.DependsOn
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse struct {
	value *KeyfactorApiModelsWorkflowsParameterDefinitionResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse) Get() *KeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse) Set(val *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse(val *KeyfactorApiModelsWorkflowsParameterDefinitionResponse) *NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	return &NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsWorkflowsParameterDefinitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


