/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse{}

// KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse A DTO for CA tests.
type KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse struct {
	// Whether the test succeeded or failed.
	Success *bool `json:"Success,omitempty"`
	// The message returned by the test.
	Message *string `json:"Message,omitempty"`
}

// NewKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse instantiates a new KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse() *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse {
	this := KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse{}
	return &this
}

// NewKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponseWithDefaults instantiates a new KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponseWithDefaults() *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse {
	this := KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) GetSuccess() bool {
	if o == nil || isNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || isNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) HasSuccess() bool {
	if o != nil && !isNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) SetMessage(v string) {
	o.Message = &v
}

func (o KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Success) {
		toSerialize["Success"] = o.Success
	}
	if !isNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse struct {
	value *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) Get() *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) Set(val *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse(val *KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) *NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse {
	return &NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


