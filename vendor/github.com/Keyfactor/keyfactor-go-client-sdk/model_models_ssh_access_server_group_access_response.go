/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSHAccessServerGroupAccessResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHAccessServerGroupAccessResponse{}

// ModelsSSHAccessServerGroupAccessResponse struct for ModelsSSHAccessServerGroupAccessResponse
type ModelsSSHAccessServerGroupAccessResponse struct {
	ServerGroupId *string `json:"ServerGroupId,omitempty"`
	LogonUsers []ModelsSSHAccessLogonUserAccessResponse `json:"LogonUsers,omitempty"`
}

// NewModelsSSHAccessServerGroupAccessResponse instantiates a new ModelsSSHAccessServerGroupAccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHAccessServerGroupAccessResponse() *ModelsSSHAccessServerGroupAccessResponse {
	this := ModelsSSHAccessServerGroupAccessResponse{}
	return &this
}

// NewModelsSSHAccessServerGroupAccessResponseWithDefaults instantiates a new ModelsSSHAccessServerGroupAccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHAccessServerGroupAccessResponseWithDefaults() *ModelsSSHAccessServerGroupAccessResponse {
	this := ModelsSSHAccessServerGroupAccessResponse{}
	return &this
}

// GetServerGroupId returns the ServerGroupId field value if set, zero value otherwise.
func (o *ModelsSSHAccessServerGroupAccessResponse) GetServerGroupId() string {
	if o == nil || isNil(o.ServerGroupId) {
		var ret string
		return ret
	}
	return *o.ServerGroupId
}

// GetServerGroupIdOk returns a tuple with the ServerGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessServerGroupAccessResponse) GetServerGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.ServerGroupId) {
		return nil, false
	}
	return o.ServerGroupId, true
}

// HasServerGroupId returns a boolean if a field has been set.
func (o *ModelsSSHAccessServerGroupAccessResponse) HasServerGroupId() bool {
	if o != nil && !isNil(o.ServerGroupId) {
		return true
	}

	return false
}

// SetServerGroupId gets a reference to the given string and assigns it to the ServerGroupId field.
func (o *ModelsSSHAccessServerGroupAccessResponse) SetServerGroupId(v string) {
	o.ServerGroupId = &v
}

// GetLogonUsers returns the LogonUsers field value if set, zero value otherwise.
func (o *ModelsSSHAccessServerGroupAccessResponse) GetLogonUsers() []ModelsSSHAccessLogonUserAccessResponse {
	if o == nil || isNil(o.LogonUsers) {
		var ret []ModelsSSHAccessLogonUserAccessResponse
		return ret
	}
	return o.LogonUsers
}

// GetLogonUsersOk returns a tuple with the LogonUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessServerGroupAccessResponse) GetLogonUsersOk() ([]ModelsSSHAccessLogonUserAccessResponse, bool) {
	if o == nil || isNil(o.LogonUsers) {
		return nil, false
	}
	return o.LogonUsers, true
}

// HasLogonUsers returns a boolean if a field has been set.
func (o *ModelsSSHAccessServerGroupAccessResponse) HasLogonUsers() bool {
	if o != nil && !isNil(o.LogonUsers) {
		return true
	}

	return false
}

// SetLogonUsers gets a reference to the given []ModelsSSHAccessLogonUserAccessResponse and assigns it to the LogonUsers field.
func (o *ModelsSSHAccessServerGroupAccessResponse) SetLogonUsers(v []ModelsSSHAccessLogonUserAccessResponse) {
	o.LogonUsers = v
}

func (o ModelsSSHAccessServerGroupAccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHAccessServerGroupAccessResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ServerGroupId) {
		toSerialize["ServerGroupId"] = o.ServerGroupId
	}
	if !isNil(o.LogonUsers) {
		toSerialize["LogonUsers"] = o.LogonUsers
	}
	return toSerialize, nil
}

type NullableModelsSSHAccessServerGroupAccessResponse struct {
	value *ModelsSSHAccessServerGroupAccessResponse
	isSet bool
}

func (v NullableModelsSSHAccessServerGroupAccessResponse) Get() *ModelsSSHAccessServerGroupAccessResponse {
	return v.value
}

func (v *NullableModelsSSHAccessServerGroupAccessResponse) Set(val *ModelsSSHAccessServerGroupAccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHAccessServerGroupAccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHAccessServerGroupAccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHAccessServerGroupAccessResponse(val *ModelsSSHAccessServerGroupAccessResponse) *NullableModelsSSHAccessServerGroupAccessResponse {
	return &NullableModelsSSHAccessServerGroupAccessResponse{value: val, isSet: true}
}

func (v NullableModelsSSHAccessServerGroupAccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHAccessServerGroupAccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


