/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse{}

// KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse struct for KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse
type KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse struct {
	Id *int32 `json:"Id,omitempty"`
	Name *string `json:"Name,omitempty"`
}

// NewKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse instantiates a new KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse() *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse {
	this := KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse{}
	return &this
}

// NewKeyfactorApiModelsSecurityRolesRoleIdentitiesResponseWithDefaults instantiates a new KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsSecurityRolesRoleIdentitiesResponseWithDefaults() *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse {
	this := KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) SetName(v string) {
	o.Name = &v
}

func (o KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse struct {
	value *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) Get() *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) Set(val *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse(val *KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) *NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse {
	return &NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsSecurityRolesRoleIdentitiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


