/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsTemplateUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTemplateUpdateRequest{}

// ModelsTemplateUpdateRequest struct for ModelsTemplateUpdateRequest
type ModelsTemplateUpdateRequest struct {
	Id *int32 `json:"Id,omitempty"`
	KeySize *string `json:"KeySize,omitempty"`
	KeyType *string `json:"KeyType,omitempty"`
	FriendlyName *string `json:"FriendlyName,omitempty"`
	KeyRetention *int32 `json:"KeyRetention,omitempty"`
	KeyRetentionDays *int32 `json:"KeyRetentionDays,omitempty"`
	KeyArchival *bool `json:"KeyArchival,omitempty"`
	EnrollmentFields []ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel `json:"EnrollmentFields,omitempty"`
	MetadataFields []ModelsTemplateUpdateRequestTemplateMetadataFieldModel `json:"MetadataFields,omitempty"`
	AllowedEnrollmentTypes *int32 `json:"AllowedEnrollmentTypes,omitempty"`
	TemplateRegexes []ModelsTemplateUpdateRequestTemplateRegexModel `json:"TemplateRegexes,omitempty"`
	TemplateDefaults []ModelsTemplateUpdateRequestTemplateDefaultModel `json:"TemplateDefaults,omitempty"`
	TemplatePolicy *ModelsTemplateUpdateRequestTemplatePolicyModel `json:"TemplatePolicy,omitempty"`
	UseAllowedRequesters *bool `json:"UseAllowedRequesters,omitempty"`
	AllowedRequesters []string `json:"AllowedRequesters,omitempty"`
	RequiresApproval *bool `json:"RequiresApproval,omitempty"`
	KeyUsage *int32 `json:"KeyUsage,omitempty"`
}

// NewModelsTemplateUpdateRequest instantiates a new ModelsTemplateUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTemplateUpdateRequest() *ModelsTemplateUpdateRequest {
	this := ModelsTemplateUpdateRequest{}
	return &this
}

// NewModelsTemplateUpdateRequestWithDefaults instantiates a new ModelsTemplateUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTemplateUpdateRequestWithDefaults() *ModelsTemplateUpdateRequest {
	this := ModelsTemplateUpdateRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsTemplateUpdateRequest) SetId(v int32) {
	o.Id = &v
}

// GetKeySize returns the KeySize field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetKeySize() string {
	if o == nil || isNil(o.KeySize) {
		var ret string
		return ret
	}
	return *o.KeySize
}

// GetKeySizeOk returns a tuple with the KeySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetKeySizeOk() (*string, bool) {
	if o == nil || isNil(o.KeySize) {
		return nil, false
	}
	return o.KeySize, true
}

// HasKeySize returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasKeySize() bool {
	if o != nil && !isNil(o.KeySize) {
		return true
	}

	return false
}

// SetKeySize gets a reference to the given string and assigns it to the KeySize field.
func (o *ModelsTemplateUpdateRequest) SetKeySize(v string) {
	o.KeySize = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetKeyType() string {
	if o == nil || isNil(o.KeyType) {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil || isNil(o.KeyType) {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasKeyType() bool {
	if o != nil && !isNil(o.KeyType) {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *ModelsTemplateUpdateRequest) SetKeyType(v string) {
	o.KeyType = &v
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetFriendlyName() string {
	if o == nil || isNil(o.FriendlyName) {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetFriendlyNameOk() (*string, bool) {
	if o == nil || isNil(o.FriendlyName) {
		return nil, false
	}
	return o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasFriendlyName() bool {
	if o != nil && !isNil(o.FriendlyName) {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *ModelsTemplateUpdateRequest) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetKeyRetention returns the KeyRetention field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetKeyRetention() int32 {
	if o == nil || isNil(o.KeyRetention) {
		var ret int32
		return ret
	}
	return *o.KeyRetention
}

// GetKeyRetentionOk returns a tuple with the KeyRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetKeyRetentionOk() (*int32, bool) {
	if o == nil || isNil(o.KeyRetention) {
		return nil, false
	}
	return o.KeyRetention, true
}

// HasKeyRetention returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasKeyRetention() bool {
	if o != nil && !isNil(o.KeyRetention) {
		return true
	}

	return false
}

// SetKeyRetention gets a reference to the given int32 and assigns it to the KeyRetention field.
func (o *ModelsTemplateUpdateRequest) SetKeyRetention(v int32) {
	o.KeyRetention = &v
}

// GetKeyRetentionDays returns the KeyRetentionDays field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetKeyRetentionDays() int32 {
	if o == nil || isNil(o.KeyRetentionDays) {
		var ret int32
		return ret
	}
	return *o.KeyRetentionDays
}

// GetKeyRetentionDaysOk returns a tuple with the KeyRetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetKeyRetentionDaysOk() (*int32, bool) {
	if o == nil || isNil(o.KeyRetentionDays) {
		return nil, false
	}
	return o.KeyRetentionDays, true
}

// HasKeyRetentionDays returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasKeyRetentionDays() bool {
	if o != nil && !isNil(o.KeyRetentionDays) {
		return true
	}

	return false
}

// SetKeyRetentionDays gets a reference to the given int32 and assigns it to the KeyRetentionDays field.
func (o *ModelsTemplateUpdateRequest) SetKeyRetentionDays(v int32) {
	o.KeyRetentionDays = &v
}

// GetKeyArchival returns the KeyArchival field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetKeyArchival() bool {
	if o == nil || isNil(o.KeyArchival) {
		var ret bool
		return ret
	}
	return *o.KeyArchival
}

// GetKeyArchivalOk returns a tuple with the KeyArchival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetKeyArchivalOk() (*bool, bool) {
	if o == nil || isNil(o.KeyArchival) {
		return nil, false
	}
	return o.KeyArchival, true
}

// HasKeyArchival returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasKeyArchival() bool {
	if o != nil && !isNil(o.KeyArchival) {
		return true
	}

	return false
}

// SetKeyArchival gets a reference to the given bool and assigns it to the KeyArchival field.
func (o *ModelsTemplateUpdateRequest) SetKeyArchival(v bool) {
	o.KeyArchival = &v
}

// GetEnrollmentFields returns the EnrollmentFields field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetEnrollmentFields() []ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel {
	if o == nil || isNil(o.EnrollmentFields) {
		var ret []ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel
		return ret
	}
	return o.EnrollmentFields
}

// GetEnrollmentFieldsOk returns a tuple with the EnrollmentFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetEnrollmentFieldsOk() ([]ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel, bool) {
	if o == nil || isNil(o.EnrollmentFields) {
		return nil, false
	}
	return o.EnrollmentFields, true
}

// HasEnrollmentFields returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasEnrollmentFields() bool {
	if o != nil && !isNil(o.EnrollmentFields) {
		return true
	}

	return false
}

// SetEnrollmentFields gets a reference to the given []ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel and assigns it to the EnrollmentFields field.
func (o *ModelsTemplateUpdateRequest) SetEnrollmentFields(v []ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel) {
	o.EnrollmentFields = v
}

// GetMetadataFields returns the MetadataFields field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetMetadataFields() []ModelsTemplateUpdateRequestTemplateMetadataFieldModel {
	if o == nil || isNil(o.MetadataFields) {
		var ret []ModelsTemplateUpdateRequestTemplateMetadataFieldModel
		return ret
	}
	return o.MetadataFields
}

// GetMetadataFieldsOk returns a tuple with the MetadataFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetMetadataFieldsOk() ([]ModelsTemplateUpdateRequestTemplateMetadataFieldModel, bool) {
	if o == nil || isNil(o.MetadataFields) {
		return nil, false
	}
	return o.MetadataFields, true
}

// HasMetadataFields returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasMetadataFields() bool {
	if o != nil && !isNil(o.MetadataFields) {
		return true
	}

	return false
}

// SetMetadataFields gets a reference to the given []ModelsTemplateUpdateRequestTemplateMetadataFieldModel and assigns it to the MetadataFields field.
func (o *ModelsTemplateUpdateRequest) SetMetadataFields(v []ModelsTemplateUpdateRequestTemplateMetadataFieldModel) {
	o.MetadataFields = v
}

// GetAllowedEnrollmentTypes returns the AllowedEnrollmentTypes field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetAllowedEnrollmentTypes() int32 {
	if o == nil || isNil(o.AllowedEnrollmentTypes) {
		var ret int32
		return ret
	}
	return *o.AllowedEnrollmentTypes
}

// GetAllowedEnrollmentTypesOk returns a tuple with the AllowedEnrollmentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetAllowedEnrollmentTypesOk() (*int32, bool) {
	if o == nil || isNil(o.AllowedEnrollmentTypes) {
		return nil, false
	}
	return o.AllowedEnrollmentTypes, true
}

// HasAllowedEnrollmentTypes returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasAllowedEnrollmentTypes() bool {
	if o != nil && !isNil(o.AllowedEnrollmentTypes) {
		return true
	}

	return false
}

// SetAllowedEnrollmentTypes gets a reference to the given int32 and assigns it to the AllowedEnrollmentTypes field.
func (o *ModelsTemplateUpdateRequest) SetAllowedEnrollmentTypes(v int32) {
	o.AllowedEnrollmentTypes = &v
}

// GetTemplateRegexes returns the TemplateRegexes field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetTemplateRegexes() []ModelsTemplateUpdateRequestTemplateRegexModel {
	if o == nil || isNil(o.TemplateRegexes) {
		var ret []ModelsTemplateUpdateRequestTemplateRegexModel
		return ret
	}
	return o.TemplateRegexes
}

// GetTemplateRegexesOk returns a tuple with the TemplateRegexes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetTemplateRegexesOk() ([]ModelsTemplateUpdateRequestTemplateRegexModel, bool) {
	if o == nil || isNil(o.TemplateRegexes) {
		return nil, false
	}
	return o.TemplateRegexes, true
}

// HasTemplateRegexes returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasTemplateRegexes() bool {
	if o != nil && !isNil(o.TemplateRegexes) {
		return true
	}

	return false
}

// SetTemplateRegexes gets a reference to the given []ModelsTemplateUpdateRequestTemplateRegexModel and assigns it to the TemplateRegexes field.
func (o *ModelsTemplateUpdateRequest) SetTemplateRegexes(v []ModelsTemplateUpdateRequestTemplateRegexModel) {
	o.TemplateRegexes = v
}

// GetTemplateDefaults returns the TemplateDefaults field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetTemplateDefaults() []ModelsTemplateUpdateRequestTemplateDefaultModel {
	if o == nil || isNil(o.TemplateDefaults) {
		var ret []ModelsTemplateUpdateRequestTemplateDefaultModel
		return ret
	}
	return o.TemplateDefaults
}

// GetTemplateDefaultsOk returns a tuple with the TemplateDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetTemplateDefaultsOk() ([]ModelsTemplateUpdateRequestTemplateDefaultModel, bool) {
	if o == nil || isNil(o.TemplateDefaults) {
		return nil, false
	}
	return o.TemplateDefaults, true
}

// HasTemplateDefaults returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasTemplateDefaults() bool {
	if o != nil && !isNil(o.TemplateDefaults) {
		return true
	}

	return false
}

// SetTemplateDefaults gets a reference to the given []ModelsTemplateUpdateRequestTemplateDefaultModel and assigns it to the TemplateDefaults field.
func (o *ModelsTemplateUpdateRequest) SetTemplateDefaults(v []ModelsTemplateUpdateRequestTemplateDefaultModel) {
	o.TemplateDefaults = v
}

// GetTemplatePolicy returns the TemplatePolicy field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetTemplatePolicy() ModelsTemplateUpdateRequestTemplatePolicyModel {
	if o == nil || isNil(o.TemplatePolicy) {
		var ret ModelsTemplateUpdateRequestTemplatePolicyModel
		return ret
	}
	return *o.TemplatePolicy
}

// GetTemplatePolicyOk returns a tuple with the TemplatePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetTemplatePolicyOk() (*ModelsTemplateUpdateRequestTemplatePolicyModel, bool) {
	if o == nil || isNil(o.TemplatePolicy) {
		return nil, false
	}
	return o.TemplatePolicy, true
}

// HasTemplatePolicy returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasTemplatePolicy() bool {
	if o != nil && !isNil(o.TemplatePolicy) {
		return true
	}

	return false
}

// SetTemplatePolicy gets a reference to the given ModelsTemplateUpdateRequestTemplatePolicyModel and assigns it to the TemplatePolicy field.
func (o *ModelsTemplateUpdateRequest) SetTemplatePolicy(v ModelsTemplateUpdateRequestTemplatePolicyModel) {
	o.TemplatePolicy = &v
}

// GetUseAllowedRequesters returns the UseAllowedRequesters field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetUseAllowedRequesters() bool {
	if o == nil || isNil(o.UseAllowedRequesters) {
		var ret bool
		return ret
	}
	return *o.UseAllowedRequesters
}

// GetUseAllowedRequestersOk returns a tuple with the UseAllowedRequesters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetUseAllowedRequestersOk() (*bool, bool) {
	if o == nil || isNil(o.UseAllowedRequesters) {
		return nil, false
	}
	return o.UseAllowedRequesters, true
}

// HasUseAllowedRequesters returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasUseAllowedRequesters() bool {
	if o != nil && !isNil(o.UseAllowedRequesters) {
		return true
	}

	return false
}

// SetUseAllowedRequesters gets a reference to the given bool and assigns it to the UseAllowedRequesters field.
func (o *ModelsTemplateUpdateRequest) SetUseAllowedRequesters(v bool) {
	o.UseAllowedRequesters = &v
}

// GetAllowedRequesters returns the AllowedRequesters field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetAllowedRequesters() []string {
	if o == nil || isNil(o.AllowedRequesters) {
		var ret []string
		return ret
	}
	return o.AllowedRequesters
}

// GetAllowedRequestersOk returns a tuple with the AllowedRequesters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetAllowedRequestersOk() ([]string, bool) {
	if o == nil || isNil(o.AllowedRequesters) {
		return nil, false
	}
	return o.AllowedRequesters, true
}

// HasAllowedRequesters returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasAllowedRequesters() bool {
	if o != nil && !isNil(o.AllowedRequesters) {
		return true
	}

	return false
}

// SetAllowedRequesters gets a reference to the given []string and assigns it to the AllowedRequesters field.
func (o *ModelsTemplateUpdateRequest) SetAllowedRequesters(v []string) {
	o.AllowedRequesters = v
}

// GetRequiresApproval returns the RequiresApproval field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetRequiresApproval() bool {
	if o == nil || isNil(o.RequiresApproval) {
		var ret bool
		return ret
	}
	return *o.RequiresApproval
}

// GetRequiresApprovalOk returns a tuple with the RequiresApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetRequiresApprovalOk() (*bool, bool) {
	if o == nil || isNil(o.RequiresApproval) {
		return nil, false
	}
	return o.RequiresApproval, true
}

// HasRequiresApproval returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasRequiresApproval() bool {
	if o != nil && !isNil(o.RequiresApproval) {
		return true
	}

	return false
}

// SetRequiresApproval gets a reference to the given bool and assigns it to the RequiresApproval field.
func (o *ModelsTemplateUpdateRequest) SetRequiresApproval(v bool) {
	o.RequiresApproval = &v
}

// GetKeyUsage returns the KeyUsage field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequest) GetKeyUsage() int32 {
	if o == nil || isNil(o.KeyUsage) {
		var ret int32
		return ret
	}
	return *o.KeyUsage
}

// GetKeyUsageOk returns a tuple with the KeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequest) GetKeyUsageOk() (*int32, bool) {
	if o == nil || isNil(o.KeyUsage) {
		return nil, false
	}
	return o.KeyUsage, true
}

// HasKeyUsage returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequest) HasKeyUsage() bool {
	if o != nil && !isNil(o.KeyUsage) {
		return true
	}

	return false
}

// SetKeyUsage gets a reference to the given int32 and assigns it to the KeyUsage field.
func (o *ModelsTemplateUpdateRequest) SetKeyUsage(v int32) {
	o.KeyUsage = &v
}

func (o ModelsTemplateUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTemplateUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.KeySize) {
		toSerialize["KeySize"] = o.KeySize
	}
	if !isNil(o.KeyType) {
		toSerialize["KeyType"] = o.KeyType
	}
	if !isNil(o.FriendlyName) {
		toSerialize["FriendlyName"] = o.FriendlyName
	}
	if !isNil(o.KeyRetention) {
		toSerialize["KeyRetention"] = o.KeyRetention
	}
	if !isNil(o.KeyRetentionDays) {
		toSerialize["KeyRetentionDays"] = o.KeyRetentionDays
	}
	if !isNil(o.KeyArchival) {
		toSerialize["KeyArchival"] = o.KeyArchival
	}
	if !isNil(o.EnrollmentFields) {
		toSerialize["EnrollmentFields"] = o.EnrollmentFields
	}
	if !isNil(o.MetadataFields) {
		toSerialize["MetadataFields"] = o.MetadataFields
	}
	if !isNil(o.AllowedEnrollmentTypes) {
		toSerialize["AllowedEnrollmentTypes"] = o.AllowedEnrollmentTypes
	}
	if !isNil(o.TemplateRegexes) {
		toSerialize["TemplateRegexes"] = o.TemplateRegexes
	}
	if !isNil(o.TemplateDefaults) {
		toSerialize["TemplateDefaults"] = o.TemplateDefaults
	}
	if !isNil(o.TemplatePolicy) {
		toSerialize["TemplatePolicy"] = o.TemplatePolicy
	}
	if !isNil(o.UseAllowedRequesters) {
		toSerialize["UseAllowedRequesters"] = o.UseAllowedRequesters
	}
	if !isNil(o.AllowedRequesters) {
		toSerialize["AllowedRequesters"] = o.AllowedRequesters
	}
	if !isNil(o.RequiresApproval) {
		toSerialize["RequiresApproval"] = o.RequiresApproval
	}
	if !isNil(o.KeyUsage) {
		toSerialize["KeyUsage"] = o.KeyUsage
	}
	return toSerialize, nil
}

type NullableModelsTemplateUpdateRequest struct {
	value *ModelsTemplateUpdateRequest
	isSet bool
}

func (v NullableModelsTemplateUpdateRequest) Get() *ModelsTemplateUpdateRequest {
	return v.value
}

func (v *NullableModelsTemplateUpdateRequest) Set(val *ModelsTemplateUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTemplateUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTemplateUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTemplateUpdateRequest(val *ModelsTemplateUpdateRequest) *NullableModelsTemplateUpdateRequest {
	return &NullableModelsTemplateUpdateRequest{value: val, isSet: true}
}

func (v NullableModelsTemplateUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTemplateUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


