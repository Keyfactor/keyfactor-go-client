/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse{}

// KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse struct for KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse
type KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse struct {
	SuccessfulStores []string `json:"SuccessfulStores,omitempty"`
	FailedStores []string `json:"FailedStores,omitempty"`
}

// NewKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse instantiates a new KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse() *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse {
	this := KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse{}
	return &this
}

// NewKeyfactorAPIModelsEnrollmentEnrollmentManagementResponseWithDefaults instantiates a new KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorAPIModelsEnrollmentEnrollmentManagementResponseWithDefaults() *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse {
	this := KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse{}
	return &this
}

// GetSuccessfulStores returns the SuccessfulStores field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) GetSuccessfulStores() []string {
	if o == nil || isNil(o.SuccessfulStores) {
		var ret []string
		return ret
	}
	return o.SuccessfulStores
}

// GetSuccessfulStoresOk returns a tuple with the SuccessfulStores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) GetSuccessfulStoresOk() ([]string, bool) {
	if o == nil || isNil(o.SuccessfulStores) {
		return nil, false
	}
	return o.SuccessfulStores, true
}

// HasSuccessfulStores returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) HasSuccessfulStores() bool {
	if o != nil && !isNil(o.SuccessfulStores) {
		return true
	}

	return false
}

// SetSuccessfulStores gets a reference to the given []string and assigns it to the SuccessfulStores field.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) SetSuccessfulStores(v []string) {
	o.SuccessfulStores = v
}

// GetFailedStores returns the FailedStores field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) GetFailedStores() []string {
	if o == nil || isNil(o.FailedStores) {
		var ret []string
		return ret
	}
	return o.FailedStores
}

// GetFailedStoresOk returns a tuple with the FailedStores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) GetFailedStoresOk() ([]string, bool) {
	if o == nil || isNil(o.FailedStores) {
		return nil, false
	}
	return o.FailedStores, true
}

// HasFailedStores returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) HasFailedStores() bool {
	if o != nil && !isNil(o.FailedStores) {
		return true
	}

	return false
}

// SetFailedStores gets a reference to the given []string and assigns it to the FailedStores field.
func (o *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) SetFailedStores(v []string) {
	o.FailedStores = v
}

func (o KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SuccessfulStores) {
		toSerialize["SuccessfulStores"] = o.SuccessfulStores
	}
	if !isNil(o.FailedStores) {
		toSerialize["FailedStores"] = o.FailedStores
	}
	return toSerialize, nil
}

type NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse struct {
	value *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse
	isSet bool
}

func (v NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) Get() *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse {
	return v.value
}

func (v *NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) Set(val *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse(val *KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) *NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse {
	return &NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse{value: val, isSet: true}
}

func (v NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorAPIModelsEnrollmentEnrollmentManagementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


