/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsRecoveryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsRecoveryResponse{}

// ModelsRecoveryResponse struct for ModelsRecoveryResponse
type ModelsRecoveryResponse struct {
	PFX *string `json:"PFX,omitempty"`
	FileName *string `json:"FileName,omitempty"`
}

// NewModelsRecoveryResponse instantiates a new ModelsRecoveryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsRecoveryResponse() *ModelsRecoveryResponse {
	this := ModelsRecoveryResponse{}
	return &this
}

// NewModelsRecoveryResponseWithDefaults instantiates a new ModelsRecoveryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsRecoveryResponseWithDefaults() *ModelsRecoveryResponse {
	this := ModelsRecoveryResponse{}
	return &this
}

// GetPFX returns the PFX field value if set, zero value otherwise.
func (o *ModelsRecoveryResponse) GetPFX() string {
	if o == nil || isNil(o.PFX) {
		var ret string
		return ret
	}
	return *o.PFX
}

// GetPFXOk returns a tuple with the PFX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRecoveryResponse) GetPFXOk() (*string, bool) {
	if o == nil || isNil(o.PFX) {
		return nil, false
	}
	return o.PFX, true
}

// HasPFX returns a boolean if a field has been set.
func (o *ModelsRecoveryResponse) HasPFX() bool {
	if o != nil && !isNil(o.PFX) {
		return true
	}

	return false
}

// SetPFX gets a reference to the given string and assigns it to the PFX field.
func (o *ModelsRecoveryResponse) SetPFX(v string) {
	o.PFX = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ModelsRecoveryResponse) GetFileName() string {
	if o == nil || isNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRecoveryResponse) GetFileNameOk() (*string, bool) {
	if o == nil || isNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *ModelsRecoveryResponse) HasFileName() bool {
	if o != nil && !isNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ModelsRecoveryResponse) SetFileName(v string) {
	o.FileName = &v
}

func (o ModelsRecoveryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsRecoveryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PFX) {
		toSerialize["PFX"] = o.PFX
	}
	if !isNil(o.FileName) {
		toSerialize["FileName"] = o.FileName
	}
	return toSerialize, nil
}

type NullableModelsRecoveryResponse struct {
	value *ModelsRecoveryResponse
	isSet bool
}

func (v NullableModelsRecoveryResponse) Get() *ModelsRecoveryResponse {
	return v.value
}

func (v *NullableModelsRecoveryResponse) Set(val *ModelsRecoveryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsRecoveryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsRecoveryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsRecoveryResponse(val *ModelsRecoveryResponse) *NullableModelsRecoveryResponse {
	return &NullableModelsRecoveryResponse{value: val, isSet: true}
}

func (v NullableModelsRecoveryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsRecoveryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


