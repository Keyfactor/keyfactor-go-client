/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSHUsersSshUserUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHUsersSshUserUpdateRequest{}

// ModelsSSHUsersSshUserUpdateRequest struct for ModelsSSHUsersSshUserUpdateRequest
type ModelsSSHUsersSshUserUpdateRequest struct {
	Id int32 `json:"Id"`
	LogonIds []int32 `json:"LogonIds,omitempty"`
}

// NewModelsSSHUsersSshUserUpdateRequest instantiates a new ModelsSSHUsersSshUserUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHUsersSshUserUpdateRequest(id int32) *ModelsSSHUsersSshUserUpdateRequest {
	this := ModelsSSHUsersSshUserUpdateRequest{}
	this.Id = id
	return &this
}

// NewModelsSSHUsersSshUserUpdateRequestWithDefaults instantiates a new ModelsSSHUsersSshUserUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHUsersSshUserUpdateRequestWithDefaults() *ModelsSSHUsersSshUserUpdateRequest {
	this := ModelsSSHUsersSshUserUpdateRequest{}
	return &this
}

// GetId returns the Id field value
func (o *ModelsSSHUsersSshUserUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHUsersSshUserUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModelsSSHUsersSshUserUpdateRequest) SetId(v int32) {
	o.Id = v
}

// GetLogonIds returns the LogonIds field value if set, zero value otherwise.
func (o *ModelsSSHUsersSshUserUpdateRequest) GetLogonIds() []int32 {
	if o == nil || isNil(o.LogonIds) {
		var ret []int32
		return ret
	}
	return o.LogonIds
}

// GetLogonIdsOk returns a tuple with the LogonIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHUsersSshUserUpdateRequest) GetLogonIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.LogonIds) {
		return nil, false
	}
	return o.LogonIds, true
}

// HasLogonIds returns a boolean if a field has been set.
func (o *ModelsSSHUsersSshUserUpdateRequest) HasLogonIds() bool {
	if o != nil && !isNil(o.LogonIds) {
		return true
	}

	return false
}

// SetLogonIds gets a reference to the given []int32 and assigns it to the LogonIds field.
func (o *ModelsSSHUsersSshUserUpdateRequest) SetLogonIds(v []int32) {
	o.LogonIds = v
}

func (o ModelsSSHUsersSshUserUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHUsersSshUserUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	if !isNil(o.LogonIds) {
		toSerialize["LogonIds"] = o.LogonIds
	}
	return toSerialize, nil
}

type NullableModelsSSHUsersSshUserUpdateRequest struct {
	value *ModelsSSHUsersSshUserUpdateRequest
	isSet bool
}

func (v NullableModelsSSHUsersSshUserUpdateRequest) Get() *ModelsSSHUsersSshUserUpdateRequest {
	return v.value
}

func (v *NullableModelsSSHUsersSshUserUpdateRequest) Set(val *ModelsSSHUsersSshUserUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHUsersSshUserUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHUsersSshUserUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHUsersSshUserUpdateRequest(val *ModelsSSHUsersSshUserUpdateRequest) *NullableModelsSSHUsersSshUserUpdateRequest {
	return &NullableModelsSSHUsersSshUserUpdateRequest{value: val, isSet: true}
}

func (v NullableModelsSSHUsersSshUserUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHUsersSshUserUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


