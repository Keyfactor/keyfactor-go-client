/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSLSslScanResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSLSslScanResult{}

// ModelsSSLSslScanResult struct for ModelsSSLSslScanResult
type ModelsSSLSslScanResult struct {
	EndpointId *string `json:"EndpointId,omitempty"`
	ReverseDNS *string `json:"ReverseDNS,omitempty"`
	SNIName *string `json:"SNIName,omitempty"`
	IpAddress *string `json:"IpAddress,omitempty"`
	Port *int32 `json:"Port,omitempty"`
	CertificateFound *bool `json:"CertificateFound,omitempty"`
	AgentPoolName *string `json:"AgentPoolName,omitempty"`
	NetworkName *string `json:"NetworkName,omitempty"`
	MonitorStatus *bool `json:"MonitorStatus,omitempty"`
	CertificateCN *string `json:"CertificateCN,omitempty"`
	Reviewed *bool `json:"Reviewed,omitempty"`
}

// NewModelsSSLSslScanResult instantiates a new ModelsSSLSslScanResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSLSslScanResult() *ModelsSSLSslScanResult {
	this := ModelsSSLSslScanResult{}
	return &this
}

// NewModelsSSLSslScanResultWithDefaults instantiates a new ModelsSSLSslScanResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSLSslScanResultWithDefaults() *ModelsSSLSslScanResult {
	this := ModelsSSLSslScanResult{}
	return &this
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetEndpointId() string {
	if o == nil || isNil(o.EndpointId) {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetEndpointIdOk() (*string, bool) {
	if o == nil || isNil(o.EndpointId) {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasEndpointId() bool {
	if o != nil && !isNil(o.EndpointId) {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *ModelsSSLSslScanResult) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetReverseDNS returns the ReverseDNS field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetReverseDNS() string {
	if o == nil || isNil(o.ReverseDNS) {
		var ret string
		return ret
	}
	return *o.ReverseDNS
}

// GetReverseDNSOk returns a tuple with the ReverseDNS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetReverseDNSOk() (*string, bool) {
	if o == nil || isNil(o.ReverseDNS) {
		return nil, false
	}
	return o.ReverseDNS, true
}

// HasReverseDNS returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasReverseDNS() bool {
	if o != nil && !isNil(o.ReverseDNS) {
		return true
	}

	return false
}

// SetReverseDNS gets a reference to the given string and assigns it to the ReverseDNS field.
func (o *ModelsSSLSslScanResult) SetReverseDNS(v string) {
	o.ReverseDNS = &v
}

// GetSNIName returns the SNIName field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetSNIName() string {
	if o == nil || isNil(o.SNIName) {
		var ret string
		return ret
	}
	return *o.SNIName
}

// GetSNINameOk returns a tuple with the SNIName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetSNINameOk() (*string, bool) {
	if o == nil || isNil(o.SNIName) {
		return nil, false
	}
	return o.SNIName, true
}

// HasSNIName returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasSNIName() bool {
	if o != nil && !isNil(o.SNIName) {
		return true
	}

	return false
}

// SetSNIName gets a reference to the given string and assigns it to the SNIName field.
func (o *ModelsSSLSslScanResult) SetSNIName(v string) {
	o.SNIName = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetIpAddress() string {
	if o == nil || isNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetIpAddressOk() (*string, bool) {
	if o == nil || isNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasIpAddress() bool {
	if o != nil && !isNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ModelsSSLSslScanResult) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ModelsSSLSslScanResult) SetPort(v int32) {
	o.Port = &v
}

// GetCertificateFound returns the CertificateFound field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetCertificateFound() bool {
	if o == nil || isNil(o.CertificateFound) {
		var ret bool
		return ret
	}
	return *o.CertificateFound
}

// GetCertificateFoundOk returns a tuple with the CertificateFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetCertificateFoundOk() (*bool, bool) {
	if o == nil || isNil(o.CertificateFound) {
		return nil, false
	}
	return o.CertificateFound, true
}

// HasCertificateFound returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasCertificateFound() bool {
	if o != nil && !isNil(o.CertificateFound) {
		return true
	}

	return false
}

// SetCertificateFound gets a reference to the given bool and assigns it to the CertificateFound field.
func (o *ModelsSSLSslScanResult) SetCertificateFound(v bool) {
	o.CertificateFound = &v
}

// GetAgentPoolName returns the AgentPoolName field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetAgentPoolName() string {
	if o == nil || isNil(o.AgentPoolName) {
		var ret string
		return ret
	}
	return *o.AgentPoolName
}

// GetAgentPoolNameOk returns a tuple with the AgentPoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetAgentPoolNameOk() (*string, bool) {
	if o == nil || isNil(o.AgentPoolName) {
		return nil, false
	}
	return o.AgentPoolName, true
}

// HasAgentPoolName returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasAgentPoolName() bool {
	if o != nil && !isNil(o.AgentPoolName) {
		return true
	}

	return false
}

// SetAgentPoolName gets a reference to the given string and assigns it to the AgentPoolName field.
func (o *ModelsSSLSslScanResult) SetAgentPoolName(v string) {
	o.AgentPoolName = &v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetNetworkName() string {
	if o == nil || isNil(o.NetworkName) {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetNetworkNameOk() (*string, bool) {
	if o == nil || isNil(o.NetworkName) {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasNetworkName() bool {
	if o != nil && !isNil(o.NetworkName) {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *ModelsSSLSslScanResult) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetMonitorStatus returns the MonitorStatus field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetMonitorStatus() bool {
	if o == nil || isNil(o.MonitorStatus) {
		var ret bool
		return ret
	}
	return *o.MonitorStatus
}

// GetMonitorStatusOk returns a tuple with the MonitorStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetMonitorStatusOk() (*bool, bool) {
	if o == nil || isNil(o.MonitorStatus) {
		return nil, false
	}
	return o.MonitorStatus, true
}

// HasMonitorStatus returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasMonitorStatus() bool {
	if o != nil && !isNil(o.MonitorStatus) {
		return true
	}

	return false
}

// SetMonitorStatus gets a reference to the given bool and assigns it to the MonitorStatus field.
func (o *ModelsSSLSslScanResult) SetMonitorStatus(v bool) {
	o.MonitorStatus = &v
}

// GetCertificateCN returns the CertificateCN field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetCertificateCN() string {
	if o == nil || isNil(o.CertificateCN) {
		var ret string
		return ret
	}
	return *o.CertificateCN
}

// GetCertificateCNOk returns a tuple with the CertificateCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetCertificateCNOk() (*string, bool) {
	if o == nil || isNil(o.CertificateCN) {
		return nil, false
	}
	return o.CertificateCN, true
}

// HasCertificateCN returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasCertificateCN() bool {
	if o != nil && !isNil(o.CertificateCN) {
		return true
	}

	return false
}

// SetCertificateCN gets a reference to the given string and assigns it to the CertificateCN field.
func (o *ModelsSSLSslScanResult) SetCertificateCN(v string) {
	o.CertificateCN = &v
}

// GetReviewed returns the Reviewed field value if set, zero value otherwise.
func (o *ModelsSSLSslScanResult) GetReviewed() bool {
	if o == nil || isNil(o.Reviewed) {
		var ret bool
		return ret
	}
	return *o.Reviewed
}

// GetReviewedOk returns a tuple with the Reviewed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLSslScanResult) GetReviewedOk() (*bool, bool) {
	if o == nil || isNil(o.Reviewed) {
		return nil, false
	}
	return o.Reviewed, true
}

// HasReviewed returns a boolean if a field has been set.
func (o *ModelsSSLSslScanResult) HasReviewed() bool {
	if o != nil && !isNil(o.Reviewed) {
		return true
	}

	return false
}

// SetReviewed gets a reference to the given bool and assigns it to the Reviewed field.
func (o *ModelsSSLSslScanResult) SetReviewed(v bool) {
	o.Reviewed = &v
}

func (o ModelsSSLSslScanResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSLSslScanResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EndpointId) {
		toSerialize["EndpointId"] = o.EndpointId
	}
	if !isNil(o.ReverseDNS) {
		toSerialize["ReverseDNS"] = o.ReverseDNS
	}
	if !isNil(o.SNIName) {
		toSerialize["SNIName"] = o.SNIName
	}
	if !isNil(o.IpAddress) {
		toSerialize["IpAddress"] = o.IpAddress
	}
	if !isNil(o.Port) {
		toSerialize["Port"] = o.Port
	}
	if !isNil(o.CertificateFound) {
		toSerialize["CertificateFound"] = o.CertificateFound
	}
	if !isNil(o.AgentPoolName) {
		toSerialize["AgentPoolName"] = o.AgentPoolName
	}
	if !isNil(o.NetworkName) {
		toSerialize["NetworkName"] = o.NetworkName
	}
	if !isNil(o.MonitorStatus) {
		toSerialize["MonitorStatus"] = o.MonitorStatus
	}
	if !isNil(o.CertificateCN) {
		toSerialize["CertificateCN"] = o.CertificateCN
	}
	if !isNil(o.Reviewed) {
		toSerialize["Reviewed"] = o.Reviewed
	}
	return toSerialize, nil
}

type NullableModelsSSLSslScanResult struct {
	value *ModelsSSLSslScanResult
	isSet bool
}

func (v NullableModelsSSLSslScanResult) Get() *ModelsSSLSslScanResult {
	return v.value
}

func (v *NullableModelsSSLSslScanResult) Set(val *ModelsSSLSslScanResult) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSLSslScanResult) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSLSslScanResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSLSslScanResult(val *ModelsSSLSslScanResult) *NullableModelsSSLSslScanResult {
	return &NullableModelsSSLSslScanResult{value: val, isSet: true}
}

func (v NullableModelsSSLSslScanResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSLSslScanResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


