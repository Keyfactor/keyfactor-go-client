/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsWorkflowsDefinitionStepResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsWorkflowsDefinitionStepResponse{}

// KeyfactorApiModelsWorkflowsDefinitionStepResponse struct for KeyfactorApiModelsWorkflowsDefinitionStepResponse
type KeyfactorApiModelsWorkflowsDefinitionStepResponse struct {
	Id *string `json:"Id,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	UniqueName *string `json:"UniqueName,omitempty"`
	ExtensionName *string `json:"ExtensionName,omitempty"`
	Enabled *bool `json:"Enabled,omitempty"`
	ConfigurationParameters map[string]map[string]interface{} `json:"ConfigurationParameters,omitempty"`
	Signals []KeyfactorApiModelsWorkflowsDefinitionStepSignalResponse `json:"Signals,omitempty"`
	Conditions []KeyfactorApiModelsWorkflowsConditionConfigurationResponse `json:"Conditions,omitempty"`
	Outputs *map[string]string `json:"Outputs,omitempty"`
}

// NewKeyfactorApiModelsWorkflowsDefinitionStepResponse instantiates a new KeyfactorApiModelsWorkflowsDefinitionStepResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsWorkflowsDefinitionStepResponse() *KeyfactorApiModelsWorkflowsDefinitionStepResponse {
	this := KeyfactorApiModelsWorkflowsDefinitionStepResponse{}
	return &this
}

// NewKeyfactorApiModelsWorkflowsDefinitionStepResponseWithDefaults instantiates a new KeyfactorApiModelsWorkflowsDefinitionStepResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsWorkflowsDefinitionStepResponseWithDefaults() *KeyfactorApiModelsWorkflowsDefinitionStepResponse {
	this := KeyfactorApiModelsWorkflowsDefinitionStepResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetUniqueName returns the UniqueName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetUniqueName() string {
	if o == nil || isNil(o.UniqueName) {
		var ret string
		return ret
	}
	return *o.UniqueName
}

// GetUniqueNameOk returns a tuple with the UniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetUniqueNameOk() (*string, bool) {
	if o == nil || isNil(o.UniqueName) {
		return nil, false
	}
	return o.UniqueName, true
}

// HasUniqueName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasUniqueName() bool {
	if o != nil && !isNil(o.UniqueName) {
		return true
	}

	return false
}

// SetUniqueName gets a reference to the given string and assigns it to the UniqueName field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetUniqueName(v string) {
	o.UniqueName = &v
}

// GetExtensionName returns the ExtensionName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetExtensionName() string {
	if o == nil || isNil(o.ExtensionName) {
		var ret string
		return ret
	}
	return *o.ExtensionName
}

// GetExtensionNameOk returns a tuple with the ExtensionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetExtensionNameOk() (*string, bool) {
	if o == nil || isNil(o.ExtensionName) {
		return nil, false
	}
	return o.ExtensionName, true
}

// HasExtensionName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasExtensionName() bool {
	if o != nil && !isNil(o.ExtensionName) {
		return true
	}

	return false
}

// SetExtensionName gets a reference to the given string and assigns it to the ExtensionName field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetExtensionName(v string) {
	o.ExtensionName = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetConfigurationParameters returns the ConfigurationParameters field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetConfigurationParameters() map[string]map[string]interface{} {
	if o == nil || isNil(o.ConfigurationParameters) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.ConfigurationParameters
}

// GetConfigurationParametersOk returns a tuple with the ConfigurationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetConfigurationParametersOk() (map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.ConfigurationParameters) {
		return map[string]map[string]interface{}{}, false
	}
	return o.ConfigurationParameters, true
}

// HasConfigurationParameters returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasConfigurationParameters() bool {
	if o != nil && !isNil(o.ConfigurationParameters) {
		return true
	}

	return false
}

// SetConfigurationParameters gets a reference to the given map[string]map[string]interface{} and assigns it to the ConfigurationParameters field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetConfigurationParameters(v map[string]map[string]interface{}) {
	o.ConfigurationParameters = v
}

// GetSignals returns the Signals field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetSignals() []KeyfactorApiModelsWorkflowsDefinitionStepSignalResponse {
	if o == nil || isNil(o.Signals) {
		var ret []KeyfactorApiModelsWorkflowsDefinitionStepSignalResponse
		return ret
	}
	return o.Signals
}

// GetSignalsOk returns a tuple with the Signals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetSignalsOk() ([]KeyfactorApiModelsWorkflowsDefinitionStepSignalResponse, bool) {
	if o == nil || isNil(o.Signals) {
		return nil, false
	}
	return o.Signals, true
}

// HasSignals returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasSignals() bool {
	if o != nil && !isNil(o.Signals) {
		return true
	}

	return false
}

// SetSignals gets a reference to the given []KeyfactorApiModelsWorkflowsDefinitionStepSignalResponse and assigns it to the Signals field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetSignals(v []KeyfactorApiModelsWorkflowsDefinitionStepSignalResponse) {
	o.Signals = v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetConditions() []KeyfactorApiModelsWorkflowsConditionConfigurationResponse {
	if o == nil || isNil(o.Conditions) {
		var ret []KeyfactorApiModelsWorkflowsConditionConfigurationResponse
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetConditionsOk() ([]KeyfactorApiModelsWorkflowsConditionConfigurationResponse, bool) {
	if o == nil || isNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasConditions() bool {
	if o != nil && !isNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []KeyfactorApiModelsWorkflowsConditionConfigurationResponse and assigns it to the Conditions field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetConditions(v []KeyfactorApiModelsWorkflowsConditionConfigurationResponse) {
	o.Conditions = v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetOutputs() map[string]string {
	if o == nil || isNil(o.Outputs) {
		var ret map[string]string
		return ret
	}
	return *o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) GetOutputsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) HasOutputs() bool {
	if o != nil && !isNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given map[string]string and assigns it to the Outputs field.
func (o *KeyfactorApiModelsWorkflowsDefinitionStepResponse) SetOutputs(v map[string]string) {
	o.Outputs = &v
}

func (o KeyfactorApiModelsWorkflowsDefinitionStepResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsWorkflowsDefinitionStepResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !isNil(o.UniqueName) {
		toSerialize["UniqueName"] = o.UniqueName
	}
	if !isNil(o.ExtensionName) {
		toSerialize["ExtensionName"] = o.ExtensionName
	}
	if !isNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	if !isNil(o.ConfigurationParameters) {
		toSerialize["ConfigurationParameters"] = o.ConfigurationParameters
	}
	if !isNil(o.Signals) {
		toSerialize["Signals"] = o.Signals
	}
	if !isNil(o.Conditions) {
		toSerialize["Conditions"] = o.Conditions
	}
	if !isNil(o.Outputs) {
		toSerialize["Outputs"] = o.Outputs
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse struct {
	value *KeyfactorApiModelsWorkflowsDefinitionStepResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse) Get() *KeyfactorApiModelsWorkflowsDefinitionStepResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse) Set(val *KeyfactorApiModelsWorkflowsDefinitionStepResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsWorkflowsDefinitionStepResponse(val *KeyfactorApiModelsWorkflowsDefinitionStepResponse) *NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse {
	return &NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsWorkflowsDefinitionStepResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


