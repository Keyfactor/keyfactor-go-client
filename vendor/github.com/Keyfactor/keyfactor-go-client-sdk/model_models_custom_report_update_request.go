/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCustomReportUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCustomReportUpdateRequest{}

// ModelsCustomReportUpdateRequest The CustomReport can be used to create and update a custom report.
type ModelsCustomReportUpdateRequest struct {
	CustomURL *string `json:"CustomURL,omitempty"`
	Id int32 `json:"Id"`
	DisplayName *string `json:"DisplayName,omitempty"`
	Description *string `json:"Description,omitempty"`
	InNavigator *bool `json:"InNavigator,omitempty"`
	Favorite *bool `json:"Favorite,omitempty"`
}

// NewModelsCustomReportUpdateRequest instantiates a new ModelsCustomReportUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCustomReportUpdateRequest(id int32) *ModelsCustomReportUpdateRequest {
	this := ModelsCustomReportUpdateRequest{}
	this.Id = id
	return &this
}

// NewModelsCustomReportUpdateRequestWithDefaults instantiates a new ModelsCustomReportUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCustomReportUpdateRequestWithDefaults() *ModelsCustomReportUpdateRequest {
	this := ModelsCustomReportUpdateRequest{}
	return &this
}

// GetCustomURL returns the CustomURL field value if set, zero value otherwise.
func (o *ModelsCustomReportUpdateRequest) GetCustomURL() string {
	if o == nil || isNil(o.CustomURL) {
		var ret string
		return ret
	}
	return *o.CustomURL
}

// GetCustomURLOk returns a tuple with the CustomURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCustomReportUpdateRequest) GetCustomURLOk() (*string, bool) {
	if o == nil || isNil(o.CustomURL) {
		return nil, false
	}
	return o.CustomURL, true
}

// HasCustomURL returns a boolean if a field has been set.
func (o *ModelsCustomReportUpdateRequest) HasCustomURL() bool {
	if o != nil && !isNil(o.CustomURL) {
		return true
	}

	return false
}

// SetCustomURL gets a reference to the given string and assigns it to the CustomURL field.
func (o *ModelsCustomReportUpdateRequest) SetCustomURL(v string) {
	o.CustomURL = &v
}

// GetId returns the Id field value
func (o *ModelsCustomReportUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModelsCustomReportUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModelsCustomReportUpdateRequest) SetId(v int32) {
	o.Id = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelsCustomReportUpdateRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCustomReportUpdateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelsCustomReportUpdateRequest) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelsCustomReportUpdateRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsCustomReportUpdateRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCustomReportUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsCustomReportUpdateRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsCustomReportUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetInNavigator returns the InNavigator field value if set, zero value otherwise.
func (o *ModelsCustomReportUpdateRequest) GetInNavigator() bool {
	if o == nil || isNil(o.InNavigator) {
		var ret bool
		return ret
	}
	return *o.InNavigator
}

// GetInNavigatorOk returns a tuple with the InNavigator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCustomReportUpdateRequest) GetInNavigatorOk() (*bool, bool) {
	if o == nil || isNil(o.InNavigator) {
		return nil, false
	}
	return o.InNavigator, true
}

// HasInNavigator returns a boolean if a field has been set.
func (o *ModelsCustomReportUpdateRequest) HasInNavigator() bool {
	if o != nil && !isNil(o.InNavigator) {
		return true
	}

	return false
}

// SetInNavigator gets a reference to the given bool and assigns it to the InNavigator field.
func (o *ModelsCustomReportUpdateRequest) SetInNavigator(v bool) {
	o.InNavigator = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ModelsCustomReportUpdateRequest) GetFavorite() bool {
	if o == nil || isNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCustomReportUpdateRequest) GetFavoriteOk() (*bool, bool) {
	if o == nil || isNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ModelsCustomReportUpdateRequest) HasFavorite() bool {
	if o != nil && !isNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ModelsCustomReportUpdateRequest) SetFavorite(v bool) {
	o.Favorite = &v
}

func (o ModelsCustomReportUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCustomReportUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CustomURL) {
		toSerialize["CustomURL"] = o.CustomURL
	}
	toSerialize["Id"] = o.Id
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !isNil(o.InNavigator) {
		toSerialize["InNavigator"] = o.InNavigator
	}
	if !isNil(o.Favorite) {
		toSerialize["Favorite"] = o.Favorite
	}
	return toSerialize, nil
}

type NullableModelsCustomReportUpdateRequest struct {
	value *ModelsCustomReportUpdateRequest
	isSet bool
}

func (v NullableModelsCustomReportUpdateRequest) Get() *ModelsCustomReportUpdateRequest {
	return v.value
}

func (v *NullableModelsCustomReportUpdateRequest) Set(val *ModelsCustomReportUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCustomReportUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCustomReportUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCustomReportUpdateRequest(val *ModelsCustomReportUpdateRequest) *NullableModelsCustomReportUpdateRequest {
	return &NullableModelsCustomReportUpdateRequest{value: val, isSet: true}
}

func (v NullableModelsCustomReportUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCustomReportUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


