/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsCertificateRetrievalResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateRetrievalResponse{}

// ModelsCertificateRetrievalResponse struct for ModelsCertificateRetrievalResponse
type ModelsCertificateRetrievalResponse struct {
	Id *int32 `json:"Id,omitempty"`
	Thumbprint *string `json:"Thumbprint,omitempty"`
	SerialNumber *string `json:"SerialNumber,omitempty"`
	IssuedDN NullableString `json:"IssuedDN,omitempty"`
	IssuedCN NullableString `json:"IssuedCN,omitempty"`
	ImportDate *time.Time `json:"ImportDate,omitempty"`
	NotBefore *time.Time `json:"NotBefore,omitempty"`
	NotAfter *time.Time `json:"NotAfter,omitempty"`
	IssuerDN NullableString `json:"IssuerDN,omitempty"`
	PrincipalId NullableInt32 `json:"PrincipalId,omitempty"`
	TemplateId *int32 `json:"TemplateId,omitempty"`
	CertState *int32 `json:"CertState,omitempty"`
	KeySizeInBits *int32 `json:"KeySizeInBits,omitempty"`
	KeyType *int32 `json:"KeyType,omitempty"`
	RequesterId *int32 `json:"RequesterId,omitempty"`
	IssuedOU NullableString `json:"IssuedOU,omitempty"`
	IssuedEmail NullableString `json:"IssuedEmail,omitempty"`
	KeyUsage *int32 `json:"KeyUsage,omitempty"`
	SigningAlgorithm *string `json:"SigningAlgorithm,omitempty"`
	CertStateString *string `json:"CertStateString,omitempty"`
	KeyTypeString *string `json:"KeyTypeString,omitempty"`
	RevocationEffDate NullableTime `json:"RevocationEffDate,omitempty"`
	RevocationReason NullableInt32 `json:"RevocationReason,omitempty"`
	RevocationComment NullableString `json:"RevocationComment,omitempty"`
	CertificateAuthorityId *int32 `json:"CertificateAuthorityId,omitempty"`
	CertificateAuthorityName *string `json:"CertificateAuthorityName,omitempty"`
	// Full template display name.
	TemplateName *string `json:"TemplateName,omitempty"`
	ArchivedKey *bool `json:"ArchivedKey,omitempty"`
	HasPrivateKey *bool `json:"HasPrivateKey,omitempty"`
	PrincipalName NullableString `json:"PrincipalName,omitempty"`
	CertRequestId *int32 `json:"CertRequestId,omitempty"`
	RequesterName *string `json:"RequesterName,omitempty"`
	ContentBytes *string `json:"ContentBytes,omitempty"`
	ExtendedKeyUsages []ModelsCertificateRetrievalResponseExtendedKeyUsageModel `json:"ExtendedKeyUsages,omitempty"`
	SubjectAltNameElements []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel `json:"SubjectAltNameElements,omitempty"`
	CRLDistributionPoints []ModelsCertificateRetrievalResponseCRLDistributionPointModel `json:"CRLDistributionPoints,omitempty"`
	LocationsCount []ModelsCertificateRetrievalResponseLocationCountModel `json:"LocationsCount,omitempty"`
	SSLLocations []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel `json:"SSLLocations,omitempty"`
	Locations []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel `json:"Locations,omitempty"`
	Metadata *map[string]string `json:"Metadata,omitempty"`
	CertificateKeyId *int32 `json:"CertificateKeyId,omitempty"`
	CARowIndex *int64 `json:"CARowIndex,omitempty"`
	CARecordId *string `json:"CARecordId,omitempty"`
	DetailedKeyUsage *ModelsCertificateRetrievalResponseDetailedKeyUsageModel `json:"DetailedKeyUsage,omitempty"`
	KeyRecoverable *bool `json:"KeyRecoverable,omitempty"`
	Curve NullableString `json:"Curve,omitempty"`
}

// NewModelsCertificateRetrievalResponse instantiates a new ModelsCertificateRetrievalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateRetrievalResponse() *ModelsCertificateRetrievalResponse {
	this := ModelsCertificateRetrievalResponse{}
	return &this
}

// NewModelsCertificateRetrievalResponseWithDefaults instantiates a new ModelsCertificateRetrievalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateRetrievalResponseWithDefaults() *ModelsCertificateRetrievalResponse {
	this := ModelsCertificateRetrievalResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsCertificateRetrievalResponse) SetId(v int32) {
	o.Id = &v
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint) {
		var ret string
		return ret
	}
	return *o.Thumbprint
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetThumbprintOk() (*string, bool) {
	if o == nil || isNil(o.Thumbprint) {
		return nil, false
	}
	return o.Thumbprint, true
}

// HasThumbprint returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasThumbprint() bool {
	if o != nil && !isNil(o.Thumbprint) {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given string and assigns it to the Thumbprint field.
func (o *ModelsCertificateRetrievalResponse) SetThumbprint(v string) {
	o.Thumbprint = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetSerialNumber() string {
	if o == nil || isNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetSerialNumberOk() (*string, bool) {
	if o == nil || isNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSerialNumber() bool {
	if o != nil && !isNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *ModelsCertificateRetrievalResponse) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetIssuedDN returns the IssuedDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedDN() string {
	if o == nil || isNil(o.IssuedDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedDN.Get()
}

// GetIssuedDNOk returns a tuple with the IssuedDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedDN.Get(), o.IssuedDN.IsSet()
}

// HasIssuedDN returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedDN() bool {
	if o != nil && o.IssuedDN.IsSet() {
		return true
	}

	return false
}

// SetIssuedDN gets a reference to the given NullableString and assigns it to the IssuedDN field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedDN(v string) {
	o.IssuedDN.Set(&v)
}
// SetIssuedDNNil sets the value for IssuedDN to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedDNNil() {
	o.IssuedDN.Set(nil)
}

// UnsetIssuedDN ensures that no value is present for IssuedDN, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedDN() {
	o.IssuedDN.Unset()
}

// GetIssuedCN returns the IssuedCN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedCN() string {
	if o == nil || isNil(o.IssuedCN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedCN.Get()
}

// GetIssuedCNOk returns a tuple with the IssuedCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedCNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedCN.Get(), o.IssuedCN.IsSet()
}

// HasIssuedCN returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedCN() bool {
	if o != nil && o.IssuedCN.IsSet() {
		return true
	}

	return false
}

// SetIssuedCN gets a reference to the given NullableString and assigns it to the IssuedCN field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedCN(v string) {
	o.IssuedCN.Set(&v)
}
// SetIssuedCNNil sets the value for IssuedCN to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedCNNil() {
	o.IssuedCN.Set(nil)
}

// UnsetIssuedCN ensures that no value is present for IssuedCN, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedCN() {
	o.IssuedCN.Unset()
}

// GetImportDate returns the ImportDate field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetImportDate() time.Time {
	if o == nil || isNil(o.ImportDate) {
		var ret time.Time
		return ret
	}
	return *o.ImportDate
}

// GetImportDateOk returns a tuple with the ImportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetImportDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.ImportDate) {
		return nil, false
	}
	return o.ImportDate, true
}

// HasImportDate returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasImportDate() bool {
	if o != nil && !isNil(o.ImportDate) {
		return true
	}

	return false
}

// SetImportDate gets a reference to the given time.Time and assigns it to the ImportDate field.
func (o *ModelsCertificateRetrievalResponse) SetImportDate(v time.Time) {
	o.ImportDate = &v
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetNotBefore() time.Time {
	if o == nil || isNil(o.NotBefore) {
		var ret time.Time
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetNotBeforeOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotBefore) {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasNotBefore() bool {
	if o != nil && !isNil(o.NotBefore) {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given time.Time and assigns it to the NotBefore field.
func (o *ModelsCertificateRetrievalResponse) SetNotBefore(v time.Time) {
	o.NotBefore = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetNotAfter() time.Time {
	if o == nil || isNil(o.NotAfter) {
		var ret time.Time
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetNotAfterOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotAfter) {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasNotAfter() bool {
	if o != nil && !isNil(o.NotAfter) {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given time.Time and assigns it to the NotAfter field.
func (o *ModelsCertificateRetrievalResponse) SetNotAfter(v time.Time) {
	o.NotAfter = &v
}

// GetIssuerDN returns the IssuerDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuerDN() string {
	if o == nil || isNil(o.IssuerDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuerDN.Get()
}

// GetIssuerDNOk returns a tuple with the IssuerDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuerDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuerDN.Get(), o.IssuerDN.IsSet()
}

// HasIssuerDN returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuerDN() bool {
	if o != nil && o.IssuerDN.IsSet() {
		return true
	}

	return false
}

// SetIssuerDN gets a reference to the given NullableString and assigns it to the IssuerDN field.
func (o *ModelsCertificateRetrievalResponse) SetIssuerDN(v string) {
	o.IssuerDN.Set(&v)
}
// SetIssuerDNNil sets the value for IssuerDN to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuerDNNil() {
	o.IssuerDN.Set(nil)
}

// UnsetIssuerDN ensures that no value is present for IssuerDN, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuerDN() {
	o.IssuerDN.Unset()
}

// GetPrincipalId returns the PrincipalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetPrincipalId() int32 {
	if o == nil || isNil(o.PrincipalId.Get()) {
		var ret int32
		return ret
	}
	return *o.PrincipalId.Get()
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetPrincipalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrincipalId.Get(), o.PrincipalId.IsSet()
}

// HasPrincipalId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasPrincipalId() bool {
	if o != nil && o.PrincipalId.IsSet() {
		return true
	}

	return false
}

// SetPrincipalId gets a reference to the given NullableInt32 and assigns it to the PrincipalId field.
func (o *ModelsCertificateRetrievalResponse) SetPrincipalId(v int32) {
	o.PrincipalId.Set(&v)
}
// SetPrincipalIdNil sets the value for PrincipalId to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetPrincipalIdNil() {
	o.PrincipalId.Set(nil)
}

// UnsetPrincipalId ensures that no value is present for PrincipalId, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetPrincipalId() {
	o.PrincipalId.Unset()
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetTemplateId() int32 {
	if o == nil || isNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetTemplateIdOk() (*int32, bool) {
	if o == nil || isNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasTemplateId() bool {
	if o != nil && !isNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *ModelsCertificateRetrievalResponse) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetCertState returns the CertState field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertState() int32 {
	if o == nil || isNil(o.CertState) {
		var ret int32
		return ret
	}
	return *o.CertState
}

// GetCertStateOk returns a tuple with the CertState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertStateOk() (*int32, bool) {
	if o == nil || isNil(o.CertState) {
		return nil, false
	}
	return o.CertState, true
}

// HasCertState returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertState() bool {
	if o != nil && !isNil(o.CertState) {
		return true
	}

	return false
}

// SetCertState gets a reference to the given int32 and assigns it to the CertState field.
func (o *ModelsCertificateRetrievalResponse) SetCertState(v int32) {
	o.CertState = &v
}

// GetKeySizeInBits returns the KeySizeInBits field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeySizeInBits() int32 {
	if o == nil || isNil(o.KeySizeInBits) {
		var ret int32
		return ret
	}
	return *o.KeySizeInBits
}

// GetKeySizeInBitsOk returns a tuple with the KeySizeInBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeySizeInBitsOk() (*int32, bool) {
	if o == nil || isNil(o.KeySizeInBits) {
		return nil, false
	}
	return o.KeySizeInBits, true
}

// HasKeySizeInBits returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeySizeInBits() bool {
	if o != nil && !isNil(o.KeySizeInBits) {
		return true
	}

	return false
}

// SetKeySizeInBits gets a reference to the given int32 and assigns it to the KeySizeInBits field.
func (o *ModelsCertificateRetrievalResponse) SetKeySizeInBits(v int32) {
	o.KeySizeInBits = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeyType() int32 {
	if o == nil || isNil(o.KeyType) {
		var ret int32
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeyTypeOk() (*int32, bool) {
	if o == nil || isNil(o.KeyType) {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyType() bool {
	if o != nil && !isNil(o.KeyType) {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given int32 and assigns it to the KeyType field.
func (o *ModelsCertificateRetrievalResponse) SetKeyType(v int32) {
	o.KeyType = &v
}

// GetRequesterId returns the RequesterId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetRequesterId() int32 {
	if o == nil || isNil(o.RequesterId) {
		var ret int32
		return ret
	}
	return *o.RequesterId
}

// GetRequesterIdOk returns a tuple with the RequesterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetRequesterIdOk() (*int32, bool) {
	if o == nil || isNil(o.RequesterId) {
		return nil, false
	}
	return o.RequesterId, true
}

// HasRequesterId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRequesterId() bool {
	if o != nil && !isNil(o.RequesterId) {
		return true
	}

	return false
}

// SetRequesterId gets a reference to the given int32 and assigns it to the RequesterId field.
func (o *ModelsCertificateRetrievalResponse) SetRequesterId(v int32) {
	o.RequesterId = &v
}

// GetIssuedOU returns the IssuedOU field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedOU() string {
	if o == nil || isNil(o.IssuedOU.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedOU.Get()
}

// GetIssuedOUOk returns a tuple with the IssuedOU field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedOUOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedOU.Get(), o.IssuedOU.IsSet()
}

// HasIssuedOU returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedOU() bool {
	if o != nil && o.IssuedOU.IsSet() {
		return true
	}

	return false
}

// SetIssuedOU gets a reference to the given NullableString and assigns it to the IssuedOU field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedOU(v string) {
	o.IssuedOU.Set(&v)
}
// SetIssuedOUNil sets the value for IssuedOU to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedOUNil() {
	o.IssuedOU.Set(nil)
}

// UnsetIssuedOU ensures that no value is present for IssuedOU, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedOU() {
	o.IssuedOU.Unset()
}

// GetIssuedEmail returns the IssuedEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedEmail() string {
	if o == nil || isNil(o.IssuedEmail.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedEmail.Get()
}

// GetIssuedEmailOk returns a tuple with the IssuedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedEmail.Get(), o.IssuedEmail.IsSet()
}

// HasIssuedEmail returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedEmail() bool {
	if o != nil && o.IssuedEmail.IsSet() {
		return true
	}

	return false
}

// SetIssuedEmail gets a reference to the given NullableString and assigns it to the IssuedEmail field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedEmail(v string) {
	o.IssuedEmail.Set(&v)
}
// SetIssuedEmailNil sets the value for IssuedEmail to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedEmailNil() {
	o.IssuedEmail.Set(nil)
}

// UnsetIssuedEmail ensures that no value is present for IssuedEmail, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedEmail() {
	o.IssuedEmail.Unset()
}

// GetKeyUsage returns the KeyUsage field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeyUsage() int32 {
	if o == nil || isNil(o.KeyUsage) {
		var ret int32
		return ret
	}
	return *o.KeyUsage
}

// GetKeyUsageOk returns a tuple with the KeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeyUsageOk() (*int32, bool) {
	if o == nil || isNil(o.KeyUsage) {
		return nil, false
	}
	return o.KeyUsage, true
}

// HasKeyUsage returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyUsage() bool {
	if o != nil && !isNil(o.KeyUsage) {
		return true
	}

	return false
}

// SetKeyUsage gets a reference to the given int32 and assigns it to the KeyUsage field.
func (o *ModelsCertificateRetrievalResponse) SetKeyUsage(v int32) {
	o.KeyUsage = &v
}

// GetSigningAlgorithm returns the SigningAlgorithm field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetSigningAlgorithm() string {
	if o == nil || isNil(o.SigningAlgorithm) {
		var ret string
		return ret
	}
	return *o.SigningAlgorithm
}

// GetSigningAlgorithmOk returns a tuple with the SigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetSigningAlgorithmOk() (*string, bool) {
	if o == nil || isNil(o.SigningAlgorithm) {
		return nil, false
	}
	return o.SigningAlgorithm, true
}

// HasSigningAlgorithm returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSigningAlgorithm() bool {
	if o != nil && !isNil(o.SigningAlgorithm) {
		return true
	}

	return false
}

// SetSigningAlgorithm gets a reference to the given string and assigns it to the SigningAlgorithm field.
func (o *ModelsCertificateRetrievalResponse) SetSigningAlgorithm(v string) {
	o.SigningAlgorithm = &v
}

// GetCertStateString returns the CertStateString field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertStateString() string {
	if o == nil || isNil(o.CertStateString) {
		var ret string
		return ret
	}
	return *o.CertStateString
}

// GetCertStateStringOk returns a tuple with the CertStateString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertStateStringOk() (*string, bool) {
	if o == nil || isNil(o.CertStateString) {
		return nil, false
	}
	return o.CertStateString, true
}

// HasCertStateString returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertStateString() bool {
	if o != nil && !isNil(o.CertStateString) {
		return true
	}

	return false
}

// SetCertStateString gets a reference to the given string and assigns it to the CertStateString field.
func (o *ModelsCertificateRetrievalResponse) SetCertStateString(v string) {
	o.CertStateString = &v
}

// GetKeyTypeString returns the KeyTypeString field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeyTypeString() string {
	if o == nil || isNil(o.KeyTypeString) {
		var ret string
		return ret
	}
	return *o.KeyTypeString
}

// GetKeyTypeStringOk returns a tuple with the KeyTypeString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeyTypeStringOk() (*string, bool) {
	if o == nil || isNil(o.KeyTypeString) {
		return nil, false
	}
	return o.KeyTypeString, true
}

// HasKeyTypeString returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyTypeString() bool {
	if o != nil && !isNil(o.KeyTypeString) {
		return true
	}

	return false
}

// SetKeyTypeString gets a reference to the given string and assigns it to the KeyTypeString field.
func (o *ModelsCertificateRetrievalResponse) SetKeyTypeString(v string) {
	o.KeyTypeString = &v
}

// GetRevocationEffDate returns the RevocationEffDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetRevocationEffDate() time.Time {
	if o == nil || isNil(o.RevocationEffDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.RevocationEffDate.Get()
}

// GetRevocationEffDateOk returns a tuple with the RevocationEffDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetRevocationEffDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevocationEffDate.Get(), o.RevocationEffDate.IsSet()
}

// HasRevocationEffDate returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRevocationEffDate() bool {
	if o != nil && o.RevocationEffDate.IsSet() {
		return true
	}

	return false
}

// SetRevocationEffDate gets a reference to the given NullableTime and assigns it to the RevocationEffDate field.
func (o *ModelsCertificateRetrievalResponse) SetRevocationEffDate(v time.Time) {
	o.RevocationEffDate.Set(&v)
}
// SetRevocationEffDateNil sets the value for RevocationEffDate to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetRevocationEffDateNil() {
	o.RevocationEffDate.Set(nil)
}

// UnsetRevocationEffDate ensures that no value is present for RevocationEffDate, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetRevocationEffDate() {
	o.RevocationEffDate.Unset()
}

// GetRevocationReason returns the RevocationReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetRevocationReason() int32 {
	if o == nil || isNil(o.RevocationReason.Get()) {
		var ret int32
		return ret
	}
	return *o.RevocationReason.Get()
}

// GetRevocationReasonOk returns a tuple with the RevocationReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetRevocationReasonOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevocationReason.Get(), o.RevocationReason.IsSet()
}

// HasRevocationReason returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRevocationReason() bool {
	if o != nil && o.RevocationReason.IsSet() {
		return true
	}

	return false
}

// SetRevocationReason gets a reference to the given NullableInt32 and assigns it to the RevocationReason field.
func (o *ModelsCertificateRetrievalResponse) SetRevocationReason(v int32) {
	o.RevocationReason.Set(&v)
}
// SetRevocationReasonNil sets the value for RevocationReason to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetRevocationReasonNil() {
	o.RevocationReason.Set(nil)
}

// UnsetRevocationReason ensures that no value is present for RevocationReason, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetRevocationReason() {
	o.RevocationReason.Unset()
}

// GetRevocationComment returns the RevocationComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetRevocationComment() string {
	if o == nil || isNil(o.RevocationComment.Get()) {
		var ret string
		return ret
	}
	return *o.RevocationComment.Get()
}

// GetRevocationCommentOk returns a tuple with the RevocationComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetRevocationCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevocationComment.Get(), o.RevocationComment.IsSet()
}

// HasRevocationComment returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRevocationComment() bool {
	if o != nil && o.RevocationComment.IsSet() {
		return true
	}

	return false
}

// SetRevocationComment gets a reference to the given NullableString and assigns it to the RevocationComment field.
func (o *ModelsCertificateRetrievalResponse) SetRevocationComment(v string) {
	o.RevocationComment.Set(&v)
}
// SetRevocationCommentNil sets the value for RevocationComment to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetRevocationCommentNil() {
	o.RevocationComment.Set(nil)
}

// UnsetRevocationComment ensures that no value is present for RevocationComment, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetRevocationComment() {
	o.RevocationComment.Unset()
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityId() int32 {
	if o == nil || isNil(o.CertificateAuthorityId) {
		var ret int32
		return ret
	}
	return *o.CertificateAuthorityId
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateAuthorityId) {
		return nil, false
	}
	return o.CertificateAuthorityId, true
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertificateAuthorityId() bool {
	if o != nil && !isNil(o.CertificateAuthorityId) {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given int32 and assigns it to the CertificateAuthorityId field.
func (o *ModelsCertificateRetrievalResponse) SetCertificateAuthorityId(v int32) {
	o.CertificateAuthorityId = &v
}

// GetCertificateAuthorityName returns the CertificateAuthorityName field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityName() string {
	if o == nil || isNil(o.CertificateAuthorityName) {
		var ret string
		return ret
	}
	return *o.CertificateAuthorityName
}

// GetCertificateAuthorityNameOk returns a tuple with the CertificateAuthorityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityNameOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthorityName) {
		return nil, false
	}
	return o.CertificateAuthorityName, true
}

// HasCertificateAuthorityName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertificateAuthorityName() bool {
	if o != nil && !isNil(o.CertificateAuthorityName) {
		return true
	}

	return false
}

// SetCertificateAuthorityName gets a reference to the given string and assigns it to the CertificateAuthorityName field.
func (o *ModelsCertificateRetrievalResponse) SetCertificateAuthorityName(v string) {
	o.CertificateAuthorityName = &v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetTemplateName() string {
	if o == nil || isNil(o.TemplateName) {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetTemplateNameOk() (*string, bool) {
	if o == nil || isNil(o.TemplateName) {
		return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasTemplateName() bool {
	if o != nil && !isNil(o.TemplateName) {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *ModelsCertificateRetrievalResponse) SetTemplateName(v string) {
	o.TemplateName = &v
}

// GetArchivedKey returns the ArchivedKey field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetArchivedKey() bool {
	if o == nil || isNil(o.ArchivedKey) {
		var ret bool
		return ret
	}
	return *o.ArchivedKey
}

// GetArchivedKeyOk returns a tuple with the ArchivedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetArchivedKeyOk() (*bool, bool) {
	if o == nil || isNil(o.ArchivedKey) {
		return nil, false
	}
	return o.ArchivedKey, true
}

// HasArchivedKey returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasArchivedKey() bool {
	if o != nil && !isNil(o.ArchivedKey) {
		return true
	}

	return false
}

// SetArchivedKey gets a reference to the given bool and assigns it to the ArchivedKey field.
func (o *ModelsCertificateRetrievalResponse) SetArchivedKey(v bool) {
	o.ArchivedKey = &v
}

// GetHasPrivateKey returns the HasPrivateKey field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetHasPrivateKey() bool {
	if o == nil || isNil(o.HasPrivateKey) {
		var ret bool
		return ret
	}
	return *o.HasPrivateKey
}

// GetHasPrivateKeyOk returns a tuple with the HasPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetHasPrivateKeyOk() (*bool, bool) {
	if o == nil || isNil(o.HasPrivateKey) {
		return nil, false
	}
	return o.HasPrivateKey, true
}

// HasHasPrivateKey returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasHasPrivateKey() bool {
	if o != nil && !isNil(o.HasPrivateKey) {
		return true
	}

	return false
}

// SetHasPrivateKey gets a reference to the given bool and assigns it to the HasPrivateKey field.
func (o *ModelsCertificateRetrievalResponse) SetHasPrivateKey(v bool) {
	o.HasPrivateKey = &v
}

// GetPrincipalName returns the PrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetPrincipalName() string {
	if o == nil || isNil(o.PrincipalName.Get()) {
		var ret string
		return ret
	}
	return *o.PrincipalName.Get()
}

// GetPrincipalNameOk returns a tuple with the PrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetPrincipalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrincipalName.Get(), o.PrincipalName.IsSet()
}

// HasPrincipalName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasPrincipalName() bool {
	if o != nil && o.PrincipalName.IsSet() {
		return true
	}

	return false
}

// SetPrincipalName gets a reference to the given NullableString and assigns it to the PrincipalName field.
func (o *ModelsCertificateRetrievalResponse) SetPrincipalName(v string) {
	o.PrincipalName.Set(&v)
}
// SetPrincipalNameNil sets the value for PrincipalName to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetPrincipalNameNil() {
	o.PrincipalName.Set(nil)
}

// UnsetPrincipalName ensures that no value is present for PrincipalName, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetPrincipalName() {
	o.PrincipalName.Unset()
}

// GetCertRequestId returns the CertRequestId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertRequestId() int32 {
	if o == nil || isNil(o.CertRequestId) {
		var ret int32
		return ret
	}
	return *o.CertRequestId
}

// GetCertRequestIdOk returns a tuple with the CertRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertRequestIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertRequestId) {
		return nil, false
	}
	return o.CertRequestId, true
}

// HasCertRequestId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertRequestId() bool {
	if o != nil && !isNil(o.CertRequestId) {
		return true
	}

	return false
}

// SetCertRequestId gets a reference to the given int32 and assigns it to the CertRequestId field.
func (o *ModelsCertificateRetrievalResponse) SetCertRequestId(v int32) {
	o.CertRequestId = &v
}

// GetRequesterName returns the RequesterName field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetRequesterName() string {
	if o == nil || isNil(o.RequesterName) {
		var ret string
		return ret
	}
	return *o.RequesterName
}

// GetRequesterNameOk returns a tuple with the RequesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetRequesterNameOk() (*string, bool) {
	if o == nil || isNil(o.RequesterName) {
		return nil, false
	}
	return o.RequesterName, true
}

// HasRequesterName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRequesterName() bool {
	if o != nil && !isNil(o.RequesterName) {
		return true
	}

	return false
}

// SetRequesterName gets a reference to the given string and assigns it to the RequesterName field.
func (o *ModelsCertificateRetrievalResponse) SetRequesterName(v string) {
	o.RequesterName = &v
}

// GetContentBytes returns the ContentBytes field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetContentBytes() string {
	if o == nil || isNil(o.ContentBytes) {
		var ret string
		return ret
	}
	return *o.ContentBytes
}

// GetContentBytesOk returns a tuple with the ContentBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetContentBytesOk() (*string, bool) {
	if o == nil || isNil(o.ContentBytes) {
		return nil, false
	}
	return o.ContentBytes, true
}

// HasContentBytes returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasContentBytes() bool {
	if o != nil && !isNil(o.ContentBytes) {
		return true
	}

	return false
}

// SetContentBytes gets a reference to the given string and assigns it to the ContentBytes field.
func (o *ModelsCertificateRetrievalResponse) SetContentBytes(v string) {
	o.ContentBytes = &v
}

// GetExtendedKeyUsages returns the ExtendedKeyUsages field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetExtendedKeyUsages() []ModelsCertificateRetrievalResponseExtendedKeyUsageModel {
	if o == nil || isNil(o.ExtendedKeyUsages) {
		var ret []ModelsCertificateRetrievalResponseExtendedKeyUsageModel
		return ret
	}
	return o.ExtendedKeyUsages
}

// GetExtendedKeyUsagesOk returns a tuple with the ExtendedKeyUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetExtendedKeyUsagesOk() ([]ModelsCertificateRetrievalResponseExtendedKeyUsageModel, bool) {
	if o == nil || isNil(o.ExtendedKeyUsages) {
		return nil, false
	}
	return o.ExtendedKeyUsages, true
}

// HasExtendedKeyUsages returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasExtendedKeyUsages() bool {
	if o != nil && !isNil(o.ExtendedKeyUsages) {
		return true
	}

	return false
}

// SetExtendedKeyUsages gets a reference to the given []ModelsCertificateRetrievalResponseExtendedKeyUsageModel and assigns it to the ExtendedKeyUsages field.
func (o *ModelsCertificateRetrievalResponse) SetExtendedKeyUsages(v []ModelsCertificateRetrievalResponseExtendedKeyUsageModel) {
	o.ExtendedKeyUsages = v
}

// GetSubjectAltNameElements returns the SubjectAltNameElements field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetSubjectAltNameElements() []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel {
	if o == nil || isNil(o.SubjectAltNameElements) {
		var ret []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel
		return ret
	}
	return o.SubjectAltNameElements
}

// GetSubjectAltNameElementsOk returns a tuple with the SubjectAltNameElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetSubjectAltNameElementsOk() ([]ModelsCertificateRetrievalResponseSubjectAlternativeNameModel, bool) {
	if o == nil || isNil(o.SubjectAltNameElements) {
		return nil, false
	}
	return o.SubjectAltNameElements, true
}

// HasSubjectAltNameElements returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSubjectAltNameElements() bool {
	if o != nil && !isNil(o.SubjectAltNameElements) {
		return true
	}

	return false
}

// SetSubjectAltNameElements gets a reference to the given []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel and assigns it to the SubjectAltNameElements field.
func (o *ModelsCertificateRetrievalResponse) SetSubjectAltNameElements(v []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel) {
	o.SubjectAltNameElements = v
}

// GetCRLDistributionPoints returns the CRLDistributionPoints field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCRLDistributionPoints() []ModelsCertificateRetrievalResponseCRLDistributionPointModel {
	if o == nil || isNil(o.CRLDistributionPoints) {
		var ret []ModelsCertificateRetrievalResponseCRLDistributionPointModel
		return ret
	}
	return o.CRLDistributionPoints
}

// GetCRLDistributionPointsOk returns a tuple with the CRLDistributionPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCRLDistributionPointsOk() ([]ModelsCertificateRetrievalResponseCRLDistributionPointModel, bool) {
	if o == nil || isNil(o.CRLDistributionPoints) {
		return nil, false
	}
	return o.CRLDistributionPoints, true
}

// HasCRLDistributionPoints returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCRLDistributionPoints() bool {
	if o != nil && !isNil(o.CRLDistributionPoints) {
		return true
	}

	return false
}

// SetCRLDistributionPoints gets a reference to the given []ModelsCertificateRetrievalResponseCRLDistributionPointModel and assigns it to the CRLDistributionPoints field.
func (o *ModelsCertificateRetrievalResponse) SetCRLDistributionPoints(v []ModelsCertificateRetrievalResponseCRLDistributionPointModel) {
	o.CRLDistributionPoints = v
}

// GetLocationsCount returns the LocationsCount field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetLocationsCount() []ModelsCertificateRetrievalResponseLocationCountModel {
	if o == nil || isNil(o.LocationsCount) {
		var ret []ModelsCertificateRetrievalResponseLocationCountModel
		return ret
	}
	return o.LocationsCount
}

// GetLocationsCountOk returns a tuple with the LocationsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetLocationsCountOk() ([]ModelsCertificateRetrievalResponseLocationCountModel, bool) {
	if o == nil || isNil(o.LocationsCount) {
		return nil, false
	}
	return o.LocationsCount, true
}

// HasLocationsCount returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasLocationsCount() bool {
	if o != nil && !isNil(o.LocationsCount) {
		return true
	}

	return false
}

// SetLocationsCount gets a reference to the given []ModelsCertificateRetrievalResponseLocationCountModel and assigns it to the LocationsCount field.
func (o *ModelsCertificateRetrievalResponse) SetLocationsCount(v []ModelsCertificateRetrievalResponseLocationCountModel) {
	o.LocationsCount = v
}

// GetSSLLocations returns the SSLLocations field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetSSLLocations() []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel {
	if o == nil || isNil(o.SSLLocations) {
		var ret []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel
		return ret
	}
	return o.SSLLocations
}

// GetSSLLocationsOk returns a tuple with the SSLLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetSSLLocationsOk() ([]ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel, bool) {
	if o == nil || isNil(o.SSLLocations) {
		return nil, false
	}
	return o.SSLLocations, true
}

// HasSSLLocations returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSSLLocations() bool {
	if o != nil && !isNil(o.SSLLocations) {
		return true
	}

	return false
}

// SetSSLLocations gets a reference to the given []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel and assigns it to the SSLLocations field.
func (o *ModelsCertificateRetrievalResponse) SetSSLLocations(v []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) {
	o.SSLLocations = v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetLocations() []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	if o == nil || isNil(o.Locations) {
		var ret []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetLocationsOk() ([]ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel, bool) {
	if o == nil || isNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasLocations() bool {
	if o != nil && !isNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel and assigns it to the Locations field.
func (o *ModelsCertificateRetrievalResponse) SetLocations(v []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) {
	o.Locations = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetMetadata() map[string]string {
	if o == nil || isNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ModelsCertificateRetrievalResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetCertificateKeyId returns the CertificateKeyId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertificateKeyId() int32 {
	if o == nil || isNil(o.CertificateKeyId) {
		var ret int32
		return ret
	}
	return *o.CertificateKeyId
}

// GetCertificateKeyIdOk returns a tuple with the CertificateKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertificateKeyIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateKeyId) {
		return nil, false
	}
	return o.CertificateKeyId, true
}

// HasCertificateKeyId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertificateKeyId() bool {
	if o != nil && !isNil(o.CertificateKeyId) {
		return true
	}

	return false
}

// SetCertificateKeyId gets a reference to the given int32 and assigns it to the CertificateKeyId field.
func (o *ModelsCertificateRetrievalResponse) SetCertificateKeyId(v int32) {
	o.CertificateKeyId = &v
}

// GetCARowIndex returns the CARowIndex field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCARowIndex() int64 {
	if o == nil || isNil(o.CARowIndex) {
		var ret int64
		return ret
	}
	return *o.CARowIndex
}

// GetCARowIndexOk returns a tuple with the CARowIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCARowIndexOk() (*int64, bool) {
	if o == nil || isNil(o.CARowIndex) {
		return nil, false
	}
	return o.CARowIndex, true
}

// HasCARowIndex returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCARowIndex() bool {
	if o != nil && !isNil(o.CARowIndex) {
		return true
	}

	return false
}

// SetCARowIndex gets a reference to the given int64 and assigns it to the CARowIndex field.
func (o *ModelsCertificateRetrievalResponse) SetCARowIndex(v int64) {
	o.CARowIndex = &v
}

// GetCARecordId returns the CARecordId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCARecordId() string {
	if o == nil || isNil(o.CARecordId) {
		var ret string
		return ret
	}
	return *o.CARecordId
}

// GetCARecordIdOk returns a tuple with the CARecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCARecordIdOk() (*string, bool) {
	if o == nil || isNil(o.CARecordId) {
		return nil, false
	}
	return o.CARecordId, true
}

// HasCARecordId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCARecordId() bool {
	if o != nil && !isNil(o.CARecordId) {
		return true
	}

	return false
}

// SetCARecordId gets a reference to the given string and assigns it to the CARecordId field.
func (o *ModelsCertificateRetrievalResponse) SetCARecordId(v string) {
	o.CARecordId = &v
}

// GetDetailedKeyUsage returns the DetailedKeyUsage field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetDetailedKeyUsage() ModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	if o == nil || isNil(o.DetailedKeyUsage) {
		var ret ModelsCertificateRetrievalResponseDetailedKeyUsageModel
		return ret
	}
	return *o.DetailedKeyUsage
}

// GetDetailedKeyUsageOk returns a tuple with the DetailedKeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetDetailedKeyUsageOk() (*ModelsCertificateRetrievalResponseDetailedKeyUsageModel, bool) {
	if o == nil || isNil(o.DetailedKeyUsage) {
		return nil, false
	}
	return o.DetailedKeyUsage, true
}

// HasDetailedKeyUsage returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasDetailedKeyUsage() bool {
	if o != nil && !isNil(o.DetailedKeyUsage) {
		return true
	}

	return false
}

// SetDetailedKeyUsage gets a reference to the given ModelsCertificateRetrievalResponseDetailedKeyUsageModel and assigns it to the DetailedKeyUsage field.
func (o *ModelsCertificateRetrievalResponse) SetDetailedKeyUsage(v ModelsCertificateRetrievalResponseDetailedKeyUsageModel) {
	o.DetailedKeyUsage = &v
}

// GetKeyRecoverable returns the KeyRecoverable field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeyRecoverable() bool {
	if o == nil || isNil(o.KeyRecoverable) {
		var ret bool
		return ret
	}
	return *o.KeyRecoverable
}

// GetKeyRecoverableOk returns a tuple with the KeyRecoverable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeyRecoverableOk() (*bool, bool) {
	if o == nil || isNil(o.KeyRecoverable) {
		return nil, false
	}
	return o.KeyRecoverable, true
}

// HasKeyRecoverable returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyRecoverable() bool {
	if o != nil && !isNil(o.KeyRecoverable) {
		return true
	}

	return false
}

// SetKeyRecoverable gets a reference to the given bool and assigns it to the KeyRecoverable field.
func (o *ModelsCertificateRetrievalResponse) SetKeyRecoverable(v bool) {
	o.KeyRecoverable = &v
}

// GetCurve returns the Curve field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCurve() string {
	if o == nil || isNil(o.Curve.Get()) {
		var ret string
		return ret
	}
	return *o.Curve.Get()
}

// GetCurveOk returns a tuple with the Curve field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCurveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Curve.Get(), o.Curve.IsSet()
}

// HasCurve returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCurve() bool {
	if o != nil && o.Curve.IsSet() {
		return true
	}

	return false
}

// SetCurve gets a reference to the given NullableString and assigns it to the Curve field.
func (o *ModelsCertificateRetrievalResponse) SetCurve(v string) {
	o.Curve.Set(&v)
}
// SetCurveNil sets the value for Curve to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCurveNil() {
	o.Curve.Set(nil)
}

// UnsetCurve ensures that no value is present for Curve, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCurve() {
	o.Curve.Unset()
}

func (o ModelsCertificateRetrievalResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateRetrievalResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Thumbprint) {
		toSerialize["Thumbprint"] = o.Thumbprint
	}
	if !isNil(o.SerialNumber) {
		toSerialize["SerialNumber"] = o.SerialNumber
	}
	if o.IssuedDN.IsSet() {
		toSerialize["IssuedDN"] = o.IssuedDN.Get()
	}
	if o.IssuedCN.IsSet() {
		toSerialize["IssuedCN"] = o.IssuedCN.Get()
	}
	if !isNil(o.ImportDate) {
		toSerialize["ImportDate"] = o.ImportDate
	}
	if !isNil(o.NotBefore) {
		toSerialize["NotBefore"] = o.NotBefore
	}
	if !isNil(o.NotAfter) {
		toSerialize["NotAfter"] = o.NotAfter
	}
	if o.IssuerDN.IsSet() {
		toSerialize["IssuerDN"] = o.IssuerDN.Get()
	}
	if o.PrincipalId.IsSet() {
		toSerialize["PrincipalId"] = o.PrincipalId.Get()
	}
	if !isNil(o.TemplateId) {
		toSerialize["TemplateId"] = o.TemplateId
	}
	if !isNil(o.CertState) {
		toSerialize["CertState"] = o.CertState
	}
	if !isNil(o.KeySizeInBits) {
		toSerialize["KeySizeInBits"] = o.KeySizeInBits
	}
	if !isNil(o.KeyType) {
		toSerialize["KeyType"] = o.KeyType
	}
	if !isNil(o.RequesterId) {
		toSerialize["RequesterId"] = o.RequesterId
	}
	if o.IssuedOU.IsSet() {
		toSerialize["IssuedOU"] = o.IssuedOU.Get()
	}
	if o.IssuedEmail.IsSet() {
		toSerialize["IssuedEmail"] = o.IssuedEmail.Get()
	}
	if !isNil(o.KeyUsage) {
		toSerialize["KeyUsage"] = o.KeyUsage
	}
	if !isNil(o.SigningAlgorithm) {
		toSerialize["SigningAlgorithm"] = o.SigningAlgorithm
	}
	if !isNil(o.CertStateString) {
		toSerialize["CertStateString"] = o.CertStateString
	}
	if !isNil(o.KeyTypeString) {
		toSerialize["KeyTypeString"] = o.KeyTypeString
	}
	if o.RevocationEffDate.IsSet() {
		toSerialize["RevocationEffDate"] = o.RevocationEffDate.Get()
	}
	if o.RevocationReason.IsSet() {
		toSerialize["RevocationReason"] = o.RevocationReason.Get()
	}
	if o.RevocationComment.IsSet() {
		toSerialize["RevocationComment"] = o.RevocationComment.Get()
	}
	if !isNil(o.CertificateAuthorityId) {
		toSerialize["CertificateAuthorityId"] = o.CertificateAuthorityId
	}
	if !isNil(o.CertificateAuthorityName) {
		toSerialize["CertificateAuthorityName"] = o.CertificateAuthorityName
	}
	if !isNil(o.TemplateName) {
		toSerialize["TemplateName"] = o.TemplateName
	}
	if !isNil(o.ArchivedKey) {
		toSerialize["ArchivedKey"] = o.ArchivedKey
	}
	if !isNil(o.HasPrivateKey) {
		toSerialize["HasPrivateKey"] = o.HasPrivateKey
	}
	if o.PrincipalName.IsSet() {
		toSerialize["PrincipalName"] = o.PrincipalName.Get()
	}
	if !isNil(o.CertRequestId) {
		toSerialize["CertRequestId"] = o.CertRequestId
	}
	if !isNil(o.RequesterName) {
		toSerialize["RequesterName"] = o.RequesterName
	}
	if !isNil(o.ContentBytes) {
		toSerialize["ContentBytes"] = o.ContentBytes
	}
	if !isNil(o.ExtendedKeyUsages) {
		toSerialize["ExtendedKeyUsages"] = o.ExtendedKeyUsages
	}
	if !isNil(o.SubjectAltNameElements) {
		toSerialize["SubjectAltNameElements"] = o.SubjectAltNameElements
	}
	if !isNil(o.CRLDistributionPoints) {
		toSerialize["CRLDistributionPoints"] = o.CRLDistributionPoints
	}
	if !isNil(o.LocationsCount) {
		toSerialize["LocationsCount"] = o.LocationsCount
	}
	if !isNil(o.SSLLocations) {
		toSerialize["SSLLocations"] = o.SSLLocations
	}
	if !isNil(o.Locations) {
		toSerialize["Locations"] = o.Locations
	}
	if !isNil(o.Metadata) {
		toSerialize["Metadata"] = o.Metadata
	}
	if !isNil(o.CertificateKeyId) {
		toSerialize["CertificateKeyId"] = o.CertificateKeyId
	}
	// skip: CARowIndex is readOnly
	if !isNil(o.CARecordId) {
		toSerialize["CARecordId"] = o.CARecordId
	}
	if !isNil(o.DetailedKeyUsage) {
		toSerialize["DetailedKeyUsage"] = o.DetailedKeyUsage
	}
	if !isNil(o.KeyRecoverable) {
		toSerialize["KeyRecoverable"] = o.KeyRecoverable
	}
	if o.Curve.IsSet() {
		toSerialize["Curve"] = o.Curve.Get()
	}
	return toSerialize, nil
}

type NullableModelsCertificateRetrievalResponse struct {
	value *ModelsCertificateRetrievalResponse
	isSet bool
}

func (v NullableModelsCertificateRetrievalResponse) Get() *ModelsCertificateRetrievalResponse {
	return v.value
}

func (v *NullableModelsCertificateRetrievalResponse) Set(val *ModelsCertificateRetrievalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateRetrievalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateRetrievalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateRetrievalResponse(val *ModelsCertificateRetrievalResponse) *NullableModelsCertificateRetrievalResponse {
	return &NullableModelsCertificateRetrievalResponse{value: val, isSet: true}
}

func (v NullableModelsCertificateRetrievalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateRetrievalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


