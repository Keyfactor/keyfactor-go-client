/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse{}

// KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse struct for KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse
type KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse struct {
	Name *string `json:"Name,omitempty"`
	ShortName *string `json:"ShortName,omitempty"`
	Capability *string `json:"Capability,omitempty"`
	StoreType *int32 `json:"StoreType,omitempty"`
	ImportType *int32 `json:"ImportType,omitempty"`
	LocalStore *bool `json:"LocalStore,omitempty"`
	SupportedOperations *ModelsCertStoreTypeSupportedOperations `json:"SupportedOperations,omitempty"`
	Properties []ModelsCertificateStoreTypeProperty `json:"Properties,omitempty"`
	EntryParameters []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter `json:"EntryParameters,omitempty"`
	PasswordOptions *ModelsCertStoreTypePasswordOptions `json:"PasswordOptions,omitempty"`
	StorePathType *string `json:"StorePathType,omitempty"`
	StorePathValue *string `json:"StorePathValue,omitempty"`
	PrivateKeyAllowed *int32 `json:"PrivateKeyAllowed,omitempty"`
	JobProperties []string `json:"JobProperties,omitempty"`
	ServerRequired *bool `json:"ServerRequired,omitempty"`
	PowerShell *bool `json:"PowerShell,omitempty"`
	BlueprintAllowed *bool `json:"BlueprintAllowed,omitempty"`
	CustomAliasAllowed *int32 `json:"CustomAliasAllowed,omitempty"`
	ServerRegistration *int32 `json:"ServerRegistration,omitempty"`
	InventoryEndpoint *string `json:"InventoryEndpoint,omitempty"`
	InventoryJobType *string `json:"InventoryJobType,omitempty"`
	ManagementJobType *string `json:"ManagementJobType,omitempty"`
	DiscoveryJobType *string `json:"DiscoveryJobType,omitempty"`
	EnrollmentJobType *string `json:"EnrollmentJobType,omitempty"`
}

// NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse instantiates a new KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse() *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse {
	this := KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse{}
	return &this
}

// NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponseWithDefaults instantiates a new KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponseWithDefaults() *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse {
	this := KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetName(v string) {
	o.Name = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetShortName() string {
	if o == nil || isNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetShortNameOk() (*string, bool) {
	if o == nil || isNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasShortName() bool {
	if o != nil && !isNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetShortName(v string) {
	o.ShortName = &v
}

// GetCapability returns the Capability field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetCapability() string {
	if o == nil || isNil(o.Capability) {
		var ret string
		return ret
	}
	return *o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetCapabilityOk() (*string, bool) {
	if o == nil || isNil(o.Capability) {
		return nil, false
	}
	return o.Capability, true
}

// HasCapability returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasCapability() bool {
	if o != nil && !isNil(o.Capability) {
		return true
	}

	return false
}

// SetCapability gets a reference to the given string and assigns it to the Capability field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetCapability(v string) {
	o.Capability = &v
}

// GetStoreType returns the StoreType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetStoreType() int32 {
	if o == nil || isNil(o.StoreType) {
		var ret int32
		return ret
	}
	return *o.StoreType
}

// GetStoreTypeOk returns a tuple with the StoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetStoreTypeOk() (*int32, bool) {
	if o == nil || isNil(o.StoreType) {
		return nil, false
	}
	return o.StoreType, true
}

// HasStoreType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasStoreType() bool {
	if o != nil && !isNil(o.StoreType) {
		return true
	}

	return false
}

// SetStoreType gets a reference to the given int32 and assigns it to the StoreType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetStoreType(v int32) {
	o.StoreType = &v
}

// GetImportType returns the ImportType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetImportType() int32 {
	if o == nil || isNil(o.ImportType) {
		var ret int32
		return ret
	}
	return *o.ImportType
}

// GetImportTypeOk returns a tuple with the ImportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetImportTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ImportType) {
		return nil, false
	}
	return o.ImportType, true
}

// HasImportType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasImportType() bool {
	if o != nil && !isNil(o.ImportType) {
		return true
	}

	return false
}

// SetImportType gets a reference to the given int32 and assigns it to the ImportType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetImportType(v int32) {
	o.ImportType = &v
}

// GetLocalStore returns the LocalStore field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetLocalStore() bool {
	if o == nil || isNil(o.LocalStore) {
		var ret bool
		return ret
	}
	return *o.LocalStore
}

// GetLocalStoreOk returns a tuple with the LocalStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetLocalStoreOk() (*bool, bool) {
	if o == nil || isNil(o.LocalStore) {
		return nil, false
	}
	return o.LocalStore, true
}

// HasLocalStore returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasLocalStore() bool {
	if o != nil && !isNil(o.LocalStore) {
		return true
	}

	return false
}

// SetLocalStore gets a reference to the given bool and assigns it to the LocalStore field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetLocalStore(v bool) {
	o.LocalStore = &v
}

// GetSupportedOperations returns the SupportedOperations field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetSupportedOperations() ModelsCertStoreTypeSupportedOperations {
	if o == nil || isNil(o.SupportedOperations) {
		var ret ModelsCertStoreTypeSupportedOperations
		return ret
	}
	return *o.SupportedOperations
}

// GetSupportedOperationsOk returns a tuple with the SupportedOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetSupportedOperationsOk() (*ModelsCertStoreTypeSupportedOperations, bool) {
	if o == nil || isNil(o.SupportedOperations) {
		return nil, false
	}
	return o.SupportedOperations, true
}

// HasSupportedOperations returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasSupportedOperations() bool {
	if o != nil && !isNil(o.SupportedOperations) {
		return true
	}

	return false
}

// SetSupportedOperations gets a reference to the given ModelsCertStoreTypeSupportedOperations and assigns it to the SupportedOperations field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetSupportedOperations(v ModelsCertStoreTypeSupportedOperations) {
	o.SupportedOperations = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetProperties() []ModelsCertificateStoreTypeProperty {
	if o == nil || isNil(o.Properties) {
		var ret []ModelsCertificateStoreTypeProperty
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetPropertiesOk() ([]ModelsCertificateStoreTypeProperty, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []ModelsCertificateStoreTypeProperty and assigns it to the Properties field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetProperties(v []ModelsCertificateStoreTypeProperty) {
	o.Properties = v
}

// GetEntryParameters returns the EntryParameters field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetEntryParameters() []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter {
	if o == nil || isNil(o.EntryParameters) {
		var ret []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter
		return ret
	}
	return o.EntryParameters
}

// GetEntryParametersOk returns a tuple with the EntryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetEntryParametersOk() ([]ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter, bool) {
	if o == nil || isNil(o.EntryParameters) {
		return nil, false
	}
	return o.EntryParameters, true
}

// HasEntryParameters returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasEntryParameters() bool {
	if o != nil && !isNil(o.EntryParameters) {
		return true
	}

	return false
}

// SetEntryParameters gets a reference to the given []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter and assigns it to the EntryParameters field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetEntryParameters(v []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter) {
	o.EntryParameters = v
}

// GetPasswordOptions returns the PasswordOptions field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetPasswordOptions() ModelsCertStoreTypePasswordOptions {
	if o == nil || isNil(o.PasswordOptions) {
		var ret ModelsCertStoreTypePasswordOptions
		return ret
	}
	return *o.PasswordOptions
}

// GetPasswordOptionsOk returns a tuple with the PasswordOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetPasswordOptionsOk() (*ModelsCertStoreTypePasswordOptions, bool) {
	if o == nil || isNil(o.PasswordOptions) {
		return nil, false
	}
	return o.PasswordOptions, true
}

// HasPasswordOptions returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasPasswordOptions() bool {
	if o != nil && !isNil(o.PasswordOptions) {
		return true
	}

	return false
}

// SetPasswordOptions gets a reference to the given ModelsCertStoreTypePasswordOptions and assigns it to the PasswordOptions field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetPasswordOptions(v ModelsCertStoreTypePasswordOptions) {
	o.PasswordOptions = &v
}

// GetStorePathType returns the StorePathType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetStorePathType() string {
	if o == nil || isNil(o.StorePathType) {
		var ret string
		return ret
	}
	return *o.StorePathType
}

// GetStorePathTypeOk returns a tuple with the StorePathType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetStorePathTypeOk() (*string, bool) {
	if o == nil || isNil(o.StorePathType) {
		return nil, false
	}
	return o.StorePathType, true
}

// HasStorePathType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasStorePathType() bool {
	if o != nil && !isNil(o.StorePathType) {
		return true
	}

	return false
}

// SetStorePathType gets a reference to the given string and assigns it to the StorePathType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetStorePathType(v string) {
	o.StorePathType = &v
}

// GetStorePathValue returns the StorePathValue field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetStorePathValue() string {
	if o == nil || isNil(o.StorePathValue) {
		var ret string
		return ret
	}
	return *o.StorePathValue
}

// GetStorePathValueOk returns a tuple with the StorePathValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetStorePathValueOk() (*string, bool) {
	if o == nil || isNil(o.StorePathValue) {
		return nil, false
	}
	return o.StorePathValue, true
}

// HasStorePathValue returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasStorePathValue() bool {
	if o != nil && !isNil(o.StorePathValue) {
		return true
	}

	return false
}

// SetStorePathValue gets a reference to the given string and assigns it to the StorePathValue field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetStorePathValue(v string) {
	o.StorePathValue = &v
}

// GetPrivateKeyAllowed returns the PrivateKeyAllowed field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetPrivateKeyAllowed() int32 {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		var ret int32
		return ret
	}
	return *o.PrivateKeyAllowed
}

// GetPrivateKeyAllowedOk returns a tuple with the PrivateKeyAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetPrivateKeyAllowedOk() (*int32, bool) {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		return nil, false
	}
	return o.PrivateKeyAllowed, true
}

// HasPrivateKeyAllowed returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasPrivateKeyAllowed() bool {
	if o != nil && !isNil(o.PrivateKeyAllowed) {
		return true
	}

	return false
}

// SetPrivateKeyAllowed gets a reference to the given int32 and assigns it to the PrivateKeyAllowed field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetPrivateKeyAllowed(v int32) {
	o.PrivateKeyAllowed = &v
}

// GetJobProperties returns the JobProperties field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetJobProperties() []string {
	if o == nil || isNil(o.JobProperties) {
		var ret []string
		return ret
	}
	return o.JobProperties
}

// GetJobPropertiesOk returns a tuple with the JobProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetJobPropertiesOk() ([]string, bool) {
	if o == nil || isNil(o.JobProperties) {
		return nil, false
	}
	return o.JobProperties, true
}

// HasJobProperties returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasJobProperties() bool {
	if o != nil && !isNil(o.JobProperties) {
		return true
	}

	return false
}

// SetJobProperties gets a reference to the given []string and assigns it to the JobProperties field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetJobProperties(v []string) {
	o.JobProperties = v
}

// GetServerRequired returns the ServerRequired field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetServerRequired() bool {
	if o == nil || isNil(o.ServerRequired) {
		var ret bool
		return ret
	}
	return *o.ServerRequired
}

// GetServerRequiredOk returns a tuple with the ServerRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetServerRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.ServerRequired) {
		return nil, false
	}
	return o.ServerRequired, true
}

// HasServerRequired returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasServerRequired() bool {
	if o != nil && !isNil(o.ServerRequired) {
		return true
	}

	return false
}

// SetServerRequired gets a reference to the given bool and assigns it to the ServerRequired field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetServerRequired(v bool) {
	o.ServerRequired = &v
}

// GetPowerShell returns the PowerShell field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetPowerShell() bool {
	if o == nil || isNil(o.PowerShell) {
		var ret bool
		return ret
	}
	return *o.PowerShell
}

// GetPowerShellOk returns a tuple with the PowerShell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetPowerShellOk() (*bool, bool) {
	if o == nil || isNil(o.PowerShell) {
		return nil, false
	}
	return o.PowerShell, true
}

// HasPowerShell returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasPowerShell() bool {
	if o != nil && !isNil(o.PowerShell) {
		return true
	}

	return false
}

// SetPowerShell gets a reference to the given bool and assigns it to the PowerShell field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetPowerShell(v bool) {
	o.PowerShell = &v
}

// GetBlueprintAllowed returns the BlueprintAllowed field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetBlueprintAllowed() bool {
	if o == nil || isNil(o.BlueprintAllowed) {
		var ret bool
		return ret
	}
	return *o.BlueprintAllowed
}

// GetBlueprintAllowedOk returns a tuple with the BlueprintAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetBlueprintAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.BlueprintAllowed) {
		return nil, false
	}
	return o.BlueprintAllowed, true
}

// HasBlueprintAllowed returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasBlueprintAllowed() bool {
	if o != nil && !isNil(o.BlueprintAllowed) {
		return true
	}

	return false
}

// SetBlueprintAllowed gets a reference to the given bool and assigns it to the BlueprintAllowed field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetBlueprintAllowed(v bool) {
	o.BlueprintAllowed = &v
}

// GetCustomAliasAllowed returns the CustomAliasAllowed field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetCustomAliasAllowed() int32 {
	if o == nil || isNil(o.CustomAliasAllowed) {
		var ret int32
		return ret
	}
	return *o.CustomAliasAllowed
}

// GetCustomAliasAllowedOk returns a tuple with the CustomAliasAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetCustomAliasAllowedOk() (*int32, bool) {
	if o == nil || isNil(o.CustomAliasAllowed) {
		return nil, false
	}
	return o.CustomAliasAllowed, true
}

// HasCustomAliasAllowed returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasCustomAliasAllowed() bool {
	if o != nil && !isNil(o.CustomAliasAllowed) {
		return true
	}

	return false
}

// SetCustomAliasAllowed gets a reference to the given int32 and assigns it to the CustomAliasAllowed field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetCustomAliasAllowed(v int32) {
	o.CustomAliasAllowed = &v
}

// GetServerRegistration returns the ServerRegistration field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetServerRegistration() int32 {
	if o == nil || isNil(o.ServerRegistration) {
		var ret int32
		return ret
	}
	return *o.ServerRegistration
}

// GetServerRegistrationOk returns a tuple with the ServerRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetServerRegistrationOk() (*int32, bool) {
	if o == nil || isNil(o.ServerRegistration) {
		return nil, false
	}
	return o.ServerRegistration, true
}

// HasServerRegistration returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasServerRegistration() bool {
	if o != nil && !isNil(o.ServerRegistration) {
		return true
	}

	return false
}

// SetServerRegistration gets a reference to the given int32 and assigns it to the ServerRegistration field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetServerRegistration(v int32) {
	o.ServerRegistration = &v
}

// GetInventoryEndpoint returns the InventoryEndpoint field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetInventoryEndpoint() string {
	if o == nil || isNil(o.InventoryEndpoint) {
		var ret string
		return ret
	}
	return *o.InventoryEndpoint
}

// GetInventoryEndpointOk returns a tuple with the InventoryEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetInventoryEndpointOk() (*string, bool) {
	if o == nil || isNil(o.InventoryEndpoint) {
		return nil, false
	}
	return o.InventoryEndpoint, true
}

// HasInventoryEndpoint returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasInventoryEndpoint() bool {
	if o != nil && !isNil(o.InventoryEndpoint) {
		return true
	}

	return false
}

// SetInventoryEndpoint gets a reference to the given string and assigns it to the InventoryEndpoint field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetInventoryEndpoint(v string) {
	o.InventoryEndpoint = &v
}

// GetInventoryJobType returns the InventoryJobType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetInventoryJobType() string {
	if o == nil || isNil(o.InventoryJobType) {
		var ret string
		return ret
	}
	return *o.InventoryJobType
}

// GetInventoryJobTypeOk returns a tuple with the InventoryJobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetInventoryJobTypeOk() (*string, bool) {
	if o == nil || isNil(o.InventoryJobType) {
		return nil, false
	}
	return o.InventoryJobType, true
}

// HasInventoryJobType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasInventoryJobType() bool {
	if o != nil && !isNil(o.InventoryJobType) {
		return true
	}

	return false
}

// SetInventoryJobType gets a reference to the given string and assigns it to the InventoryJobType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetInventoryJobType(v string) {
	o.InventoryJobType = &v
}

// GetManagementJobType returns the ManagementJobType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetManagementJobType() string {
	if o == nil || isNil(o.ManagementJobType) {
		var ret string
		return ret
	}
	return *o.ManagementJobType
}

// GetManagementJobTypeOk returns a tuple with the ManagementJobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetManagementJobTypeOk() (*string, bool) {
	if o == nil || isNil(o.ManagementJobType) {
		return nil, false
	}
	return o.ManagementJobType, true
}

// HasManagementJobType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasManagementJobType() bool {
	if o != nil && !isNil(o.ManagementJobType) {
		return true
	}

	return false
}

// SetManagementJobType gets a reference to the given string and assigns it to the ManagementJobType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetManagementJobType(v string) {
	o.ManagementJobType = &v
}

// GetDiscoveryJobType returns the DiscoveryJobType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetDiscoveryJobType() string {
	if o == nil || isNil(o.DiscoveryJobType) {
		var ret string
		return ret
	}
	return *o.DiscoveryJobType
}

// GetDiscoveryJobTypeOk returns a tuple with the DiscoveryJobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetDiscoveryJobTypeOk() (*string, bool) {
	if o == nil || isNil(o.DiscoveryJobType) {
		return nil, false
	}
	return o.DiscoveryJobType, true
}

// HasDiscoveryJobType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasDiscoveryJobType() bool {
	if o != nil && !isNil(o.DiscoveryJobType) {
		return true
	}

	return false
}

// SetDiscoveryJobType gets a reference to the given string and assigns it to the DiscoveryJobType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetDiscoveryJobType(v string) {
	o.DiscoveryJobType = &v
}

// GetEnrollmentJobType returns the EnrollmentJobType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetEnrollmentJobType() string {
	if o == nil || isNil(o.EnrollmentJobType) {
		var ret string
		return ret
	}
	return *o.EnrollmentJobType
}

// GetEnrollmentJobTypeOk returns a tuple with the EnrollmentJobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) GetEnrollmentJobTypeOk() (*string, bool) {
	if o == nil || isNil(o.EnrollmentJobType) {
		return nil, false
	}
	return o.EnrollmentJobType, true
}

// HasEnrollmentJobType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) HasEnrollmentJobType() bool {
	if o != nil && !isNil(o.EnrollmentJobType) {
		return true
	}

	return false
}

// SetEnrollmentJobType gets a reference to the given string and assigns it to the EnrollmentJobType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) SetEnrollmentJobType(v string) {
	o.EnrollmentJobType = &v
}

func (o KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.ShortName) {
		toSerialize["ShortName"] = o.ShortName
	}
	if !isNil(o.Capability) {
		toSerialize["Capability"] = o.Capability
	}
	if !isNil(o.StoreType) {
		toSerialize["StoreType"] = o.StoreType
	}
	if !isNil(o.ImportType) {
		toSerialize["ImportType"] = o.ImportType
	}
	if !isNil(o.LocalStore) {
		toSerialize["LocalStore"] = o.LocalStore
	}
	if !isNil(o.SupportedOperations) {
		toSerialize["SupportedOperations"] = o.SupportedOperations
	}
	if !isNil(o.Properties) {
		toSerialize["Properties"] = o.Properties
	}
	if !isNil(o.EntryParameters) {
		toSerialize["EntryParameters"] = o.EntryParameters
	}
	if !isNil(o.PasswordOptions) {
		toSerialize["PasswordOptions"] = o.PasswordOptions
	}
	if !isNil(o.StorePathType) {
		toSerialize["StorePathType"] = o.StorePathType
	}
	if !isNil(o.StorePathValue) {
		toSerialize["StorePathValue"] = o.StorePathValue
	}
	if !isNil(o.PrivateKeyAllowed) {
		toSerialize["PrivateKeyAllowed"] = o.PrivateKeyAllowed
	}
	// skip: JobProperties is readOnly
	if !isNil(o.ServerRequired) {
		toSerialize["ServerRequired"] = o.ServerRequired
	}
	if !isNil(o.PowerShell) {
		toSerialize["PowerShell"] = o.PowerShell
	}
	if !isNil(o.BlueprintAllowed) {
		toSerialize["BlueprintAllowed"] = o.BlueprintAllowed
	}
	if !isNil(o.CustomAliasAllowed) {
		toSerialize["CustomAliasAllowed"] = o.CustomAliasAllowed
	}
	if !isNil(o.ServerRegistration) {
		toSerialize["ServerRegistration"] = o.ServerRegistration
	}
	if !isNil(o.InventoryEndpoint) {
		toSerialize["InventoryEndpoint"] = o.InventoryEndpoint
	}
	if !isNil(o.InventoryJobType) {
		toSerialize["InventoryJobType"] = o.InventoryJobType
	}
	if !isNil(o.ManagementJobType) {
		toSerialize["ManagementJobType"] = o.ManagementJobType
	}
	if !isNil(o.DiscoveryJobType) {
		toSerialize["DiscoveryJobType"] = o.DiscoveryJobType
	}
	if !isNil(o.EnrollmentJobType) {
		toSerialize["EnrollmentJobType"] = o.EnrollmentJobType
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse struct {
	value *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) Get() *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) Set(val *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse(val *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse {
	return &NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


