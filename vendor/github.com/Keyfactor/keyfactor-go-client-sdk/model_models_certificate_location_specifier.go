/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateLocationSpecifier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateLocationSpecifier{}

// ModelsCertificateLocationSpecifier struct for ModelsCertificateLocationSpecifier
type ModelsCertificateLocationSpecifier struct {
	Alias *string `json:"Alias,omitempty"`
	CertificateStoreId *string `json:"CertificateStoreId,omitempty"`
	JobFields map[string]map[string]interface{} `json:"JobFields,omitempty"`
}

// NewModelsCertificateLocationSpecifier instantiates a new ModelsCertificateLocationSpecifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateLocationSpecifier() *ModelsCertificateLocationSpecifier {
	this := ModelsCertificateLocationSpecifier{}
	return &this
}

// NewModelsCertificateLocationSpecifierWithDefaults instantiates a new ModelsCertificateLocationSpecifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateLocationSpecifierWithDefaults() *ModelsCertificateLocationSpecifier {
	this := ModelsCertificateLocationSpecifier{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *ModelsCertificateLocationSpecifier) GetAlias() string {
	if o == nil || isNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateLocationSpecifier) GetAliasOk() (*string, bool) {
	if o == nil || isNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *ModelsCertificateLocationSpecifier) HasAlias() bool {
	if o != nil && !isNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *ModelsCertificateLocationSpecifier) SetAlias(v string) {
	o.Alias = &v
}

// GetCertificateStoreId returns the CertificateStoreId field value if set, zero value otherwise.
func (o *ModelsCertificateLocationSpecifier) GetCertificateStoreId() string {
	if o == nil || isNil(o.CertificateStoreId) {
		var ret string
		return ret
	}
	return *o.CertificateStoreId
}

// GetCertificateStoreIdOk returns a tuple with the CertificateStoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateLocationSpecifier) GetCertificateStoreIdOk() (*string, bool) {
	if o == nil || isNil(o.CertificateStoreId) {
		return nil, false
	}
	return o.CertificateStoreId, true
}

// HasCertificateStoreId returns a boolean if a field has been set.
func (o *ModelsCertificateLocationSpecifier) HasCertificateStoreId() bool {
	if o != nil && !isNil(o.CertificateStoreId) {
		return true
	}

	return false
}

// SetCertificateStoreId gets a reference to the given string and assigns it to the CertificateStoreId field.
func (o *ModelsCertificateLocationSpecifier) SetCertificateStoreId(v string) {
	o.CertificateStoreId = &v
}

// GetJobFields returns the JobFields field value if set, zero value otherwise.
func (o *ModelsCertificateLocationSpecifier) GetJobFields() map[string]map[string]interface{} {
	if o == nil || isNil(o.JobFields) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.JobFields
}

// GetJobFieldsOk returns a tuple with the JobFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateLocationSpecifier) GetJobFieldsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.JobFields) {
		return map[string]map[string]interface{}{}, false
	}
	return o.JobFields, true
}

// HasJobFields returns a boolean if a field has been set.
func (o *ModelsCertificateLocationSpecifier) HasJobFields() bool {
	if o != nil && !isNil(o.JobFields) {
		return true
	}

	return false
}

// SetJobFields gets a reference to the given map[string]map[string]interface{} and assigns it to the JobFields field.
func (o *ModelsCertificateLocationSpecifier) SetJobFields(v map[string]map[string]interface{}) {
	o.JobFields = v
}

func (o ModelsCertificateLocationSpecifier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateLocationSpecifier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Alias) {
		toSerialize["Alias"] = o.Alias
	}
	if !isNil(o.CertificateStoreId) {
		toSerialize["CertificateStoreId"] = o.CertificateStoreId
	}
	if !isNil(o.JobFields) {
		toSerialize["JobFields"] = o.JobFields
	}
	return toSerialize, nil
}

type NullableModelsCertificateLocationSpecifier struct {
	value *ModelsCertificateLocationSpecifier
	isSet bool
}

func (v NullableModelsCertificateLocationSpecifier) Get() *ModelsCertificateLocationSpecifier {
	return v.value
}

func (v *NullableModelsCertificateLocationSpecifier) Set(val *ModelsCertificateLocationSpecifier) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateLocationSpecifier) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateLocationSpecifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateLocationSpecifier(val *ModelsCertificateLocationSpecifier) *NullableModelsCertificateLocationSpecifier {
	return &NullableModelsCertificateLocationSpecifier{value: val, isSet: true}
}

func (v NullableModelsCertificateLocationSpecifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateLocationSpecifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


