/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsWorkflowsSignalDefinitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsWorkflowsSignalDefinitionResponse{}

// KeyfactorApiModelsWorkflowsSignalDefinitionResponse struct for KeyfactorApiModelsWorkflowsSignalDefinitionResponse
type KeyfactorApiModelsWorkflowsSignalDefinitionResponse struct {
	InputParameters *map[string]KeyfactorApiModelsWorkflowsParameterDefinitionResponse `json:"InputParameters,omitempty"`
}

// NewKeyfactorApiModelsWorkflowsSignalDefinitionResponse instantiates a new KeyfactorApiModelsWorkflowsSignalDefinitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsWorkflowsSignalDefinitionResponse() *KeyfactorApiModelsWorkflowsSignalDefinitionResponse {
	this := KeyfactorApiModelsWorkflowsSignalDefinitionResponse{}
	return &this
}

// NewKeyfactorApiModelsWorkflowsSignalDefinitionResponseWithDefaults instantiates a new KeyfactorApiModelsWorkflowsSignalDefinitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsWorkflowsSignalDefinitionResponseWithDefaults() *KeyfactorApiModelsWorkflowsSignalDefinitionResponse {
	this := KeyfactorApiModelsWorkflowsSignalDefinitionResponse{}
	return &this
}

// GetInputParameters returns the InputParameters field value if set, zero value otherwise.
func (o *KeyfactorApiModelsWorkflowsSignalDefinitionResponse) GetInputParameters() map[string]KeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	if o == nil || isNil(o.InputParameters) {
		var ret map[string]KeyfactorApiModelsWorkflowsParameterDefinitionResponse
		return ret
	}
	return *o.InputParameters
}

// GetInputParametersOk returns a tuple with the InputParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsWorkflowsSignalDefinitionResponse) GetInputParametersOk() (*map[string]KeyfactorApiModelsWorkflowsParameterDefinitionResponse, bool) {
	if o == nil || isNil(o.InputParameters) {
		return nil, false
	}
	return o.InputParameters, true
}

// HasInputParameters returns a boolean if a field has been set.
func (o *KeyfactorApiModelsWorkflowsSignalDefinitionResponse) HasInputParameters() bool {
	if o != nil && !isNil(o.InputParameters) {
		return true
	}

	return false
}

// SetInputParameters gets a reference to the given map[string]KeyfactorApiModelsWorkflowsParameterDefinitionResponse and assigns it to the InputParameters field.
func (o *KeyfactorApiModelsWorkflowsSignalDefinitionResponse) SetInputParameters(v map[string]KeyfactorApiModelsWorkflowsParameterDefinitionResponse) {
	o.InputParameters = &v
}

func (o KeyfactorApiModelsWorkflowsSignalDefinitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsWorkflowsSignalDefinitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.InputParameters) {
		toSerialize["InputParameters"] = o.InputParameters
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse struct {
	value *KeyfactorApiModelsWorkflowsSignalDefinitionResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse) Get() *KeyfactorApiModelsWorkflowsSignalDefinitionResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse) Set(val *KeyfactorApiModelsWorkflowsSignalDefinitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse(val *KeyfactorApiModelsWorkflowsSignalDefinitionResponse) *NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse {
	return &NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsWorkflowsSignalDefinitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


