/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{}

// KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel struct for KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel
type KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel struct {
	Id *int32 `json:"Id,omitempty"`
	Enabled *bool `json:"Enabled,omitempty"`
	Interval *int32 `json:"Interval,omitempty"`
	UseMetadata *bool `json:"UseMetadata,omitempty"`
	MetadataField *string `json:"MetadataField,omitempty"`
	MetadataValue *string `json:"MetadataValue,omitempty"`
}

// NewKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel instantiates a new KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel() *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	this := KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{}
	return &this
}

// NewKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModelWithDefaults instantiates a new KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModelWithDefaults() *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	this := KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetId(v int32) {
	o.Id = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetInterval() int32 {
	if o == nil || isNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetIntervalOk() (*int32, bool) {
	if o == nil || isNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasInterval() bool {
	if o != nil && !isNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetInterval(v int32) {
	o.Interval = &v
}

// GetUseMetadata returns the UseMetadata field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetUseMetadata() bool {
	if o == nil || isNil(o.UseMetadata) {
		var ret bool
		return ret
	}
	return *o.UseMetadata
}

// GetUseMetadataOk returns a tuple with the UseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetUseMetadataOk() (*bool, bool) {
	if o == nil || isNil(o.UseMetadata) {
		return nil, false
	}
	return o.UseMetadata, true
}

// HasUseMetadata returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasUseMetadata() bool {
	if o != nil && !isNil(o.UseMetadata) {
		return true
	}

	return false
}

// SetUseMetadata gets a reference to the given bool and assigns it to the UseMetadata field.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetUseMetadata(v bool) {
	o.UseMetadata = &v
}

// GetMetadataField returns the MetadataField field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataField() string {
	if o == nil || isNil(o.MetadataField) {
		var ret string
		return ret
	}
	return *o.MetadataField
}

// GetMetadataFieldOk returns a tuple with the MetadataField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataFieldOk() (*string, bool) {
	if o == nil || isNil(o.MetadataField) {
		return nil, false
	}
	return o.MetadataField, true
}

// HasMetadataField returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasMetadataField() bool {
	if o != nil && !isNil(o.MetadataField) {
		return true
	}

	return false
}

// SetMetadataField gets a reference to the given string and assigns it to the MetadataField field.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetMetadataField(v string) {
	o.MetadataField = &v
}

// GetMetadataValue returns the MetadataValue field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataValue() string {
	if o == nil || isNil(o.MetadataValue) {
		var ret string
		return ret
	}
	return *o.MetadataValue
}

// GetMetadataValueOk returns a tuple with the MetadataValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataValueOk() (*string, bool) {
	if o == nil || isNil(o.MetadataValue) {
		return nil, false
	}
	return o.MetadataValue, true
}

// HasMetadataValue returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasMetadataValue() bool {
	if o != nil && !isNil(o.MetadataValue) {
		return true
	}

	return false
}

// SetMetadataValue gets a reference to the given string and assigns it to the MetadataValue field.
func (o *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetMetadataValue(v string) {
	o.MetadataValue = &v
}

func (o KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	if !isNil(o.Interval) {
		toSerialize["Interval"] = o.Interval
	}
	if !isNil(o.UseMetadata) {
		toSerialize["UseMetadata"] = o.UseMetadata
	}
	if !isNil(o.MetadataField) {
		toSerialize["MetadataField"] = o.MetadataField
	}
	if !isNil(o.MetadataValue) {
		toSerialize["MetadataValue"] = o.MetadataValue
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel struct {
	value *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel
	isSet bool
}

func (v NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) Get() *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	return v.value
}

func (v *NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) Set(val *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel(val *KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) *NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	return &NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


