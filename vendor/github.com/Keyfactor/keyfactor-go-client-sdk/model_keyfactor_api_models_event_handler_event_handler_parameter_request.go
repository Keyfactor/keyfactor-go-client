/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsEventHandlerEventHandlerParameterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsEventHandlerEventHandlerParameterRequest{}

// KeyfactorApiModelsEventHandlerEventHandlerParameterRequest struct for KeyfactorApiModelsEventHandlerEventHandlerParameterRequest
type KeyfactorApiModelsEventHandlerEventHandlerParameterRequest struct {
	Key string `json:"Key"`
	DefaultValue string `json:"DefaultValue"`
	ParameterType string `json:"ParameterType"`
}

// NewKeyfactorApiModelsEventHandlerEventHandlerParameterRequest instantiates a new KeyfactorApiModelsEventHandlerEventHandlerParameterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsEventHandlerEventHandlerParameterRequest(key string, defaultValue string, parameterType string) *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	this := KeyfactorApiModelsEventHandlerEventHandlerParameterRequest{}
	this.Key = key
	this.DefaultValue = defaultValue
	this.ParameterType = parameterType
	return &this
}

// NewKeyfactorApiModelsEventHandlerEventHandlerParameterRequestWithDefaults instantiates a new KeyfactorApiModelsEventHandlerEventHandlerParameterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsEventHandlerEventHandlerParameterRequestWithDefaults() *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	this := KeyfactorApiModelsEventHandlerEventHandlerParameterRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) SetKey(v string) {
	o.Key = v
}

// GetDefaultValue returns the DefaultValue field value
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetDefaultValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetDefaultValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultValue, true
}

// SetDefaultValue sets field value
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) SetDefaultValue(v string) {
	o.DefaultValue = v
}

// GetParameterType returns the ParameterType field value
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetParameterType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParameterType
}

// GetParameterTypeOk returns a tuple with the ParameterType field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetParameterTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParameterType, true
}

// SetParameterType sets field value
func (o *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) SetParameterType(v string) {
	o.ParameterType = v
}

func (o KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Key"] = o.Key
	toSerialize["DefaultValue"] = o.DefaultValue
	toSerialize["ParameterType"] = o.ParameterType
	return toSerialize, nil
}

type NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest struct {
	value *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) Get() *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) Set(val *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest(val *KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) *NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	return &NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


