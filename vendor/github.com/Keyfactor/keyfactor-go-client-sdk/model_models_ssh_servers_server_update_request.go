/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSHServersServerUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHServersServerUpdateRequest{}

// ModelsSSHServersServerUpdateRequest struct for ModelsSSHServersServerUpdateRequest
type ModelsSSHServersServerUpdateRequest struct {
	Id int32 `json:"Id"`
	UnderManagement *bool `json:"UnderManagement,omitempty"`
	Port *int32 `json:"Port,omitempty"`
}

// NewModelsSSHServersServerUpdateRequest instantiates a new ModelsSSHServersServerUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHServersServerUpdateRequest(id int32) *ModelsSSHServersServerUpdateRequest {
	this := ModelsSSHServersServerUpdateRequest{}
	this.Id = id
	return &this
}

// NewModelsSSHServersServerUpdateRequestWithDefaults instantiates a new ModelsSSHServersServerUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHServersServerUpdateRequestWithDefaults() *ModelsSSHServersServerUpdateRequest {
	this := ModelsSSHServersServerUpdateRequest{}
	return &this
}

// GetId returns the Id field value
func (o *ModelsSSHServersServerUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHServersServerUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModelsSSHServersServerUpdateRequest) SetId(v int32) {
	o.Id = v
}

// GetUnderManagement returns the UnderManagement field value if set, zero value otherwise.
func (o *ModelsSSHServersServerUpdateRequest) GetUnderManagement() bool {
	if o == nil || isNil(o.UnderManagement) {
		var ret bool
		return ret
	}
	return *o.UnderManagement
}

// GetUnderManagementOk returns a tuple with the UnderManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHServersServerUpdateRequest) GetUnderManagementOk() (*bool, bool) {
	if o == nil || isNil(o.UnderManagement) {
		return nil, false
	}
	return o.UnderManagement, true
}

// HasUnderManagement returns a boolean if a field has been set.
func (o *ModelsSSHServersServerUpdateRequest) HasUnderManagement() bool {
	if o != nil && !isNil(o.UnderManagement) {
		return true
	}

	return false
}

// SetUnderManagement gets a reference to the given bool and assigns it to the UnderManagement field.
func (o *ModelsSSHServersServerUpdateRequest) SetUnderManagement(v bool) {
	o.UnderManagement = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ModelsSSHServersServerUpdateRequest) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHServersServerUpdateRequest) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ModelsSSHServersServerUpdateRequest) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ModelsSSHServersServerUpdateRequest) SetPort(v int32) {
	o.Port = &v
}

func (o ModelsSSHServersServerUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHServersServerUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	if !isNil(o.UnderManagement) {
		toSerialize["UnderManagement"] = o.UnderManagement
	}
	if !isNil(o.Port) {
		toSerialize["Port"] = o.Port
	}
	return toSerialize, nil
}

type NullableModelsSSHServersServerUpdateRequest struct {
	value *ModelsSSHServersServerUpdateRequest
	isSet bool
}

func (v NullableModelsSSHServersServerUpdateRequest) Get() *ModelsSSHServersServerUpdateRequest {
	return v.value
}

func (v *NullableModelsSSHServersServerUpdateRequest) Set(val *ModelsSSHServersServerUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHServersServerUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHServersServerUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHServersServerUpdateRequest(val *ModelsSSHServersServerUpdateRequest) *NullableModelsSSHServersServerUpdateRequest {
	return &NullableModelsSSHServersServerUpdateRequest{value: val, isSet: true}
}

func (v NullableModelsSSHServersServerUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHServersServerUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


