/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{}

// KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest struct for KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest
type KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest struct {
	StoreType int32 `json:"StoreType"`
	Name string `json:"Name"`
	ShortName string `json:"ShortName"`
	Capability *string `json:"Capability,omitempty"`
	LocalStore *bool `json:"LocalStore,omitempty"`
	SupportedOperations *ModelsCertStoreTypeSupportedOperations `json:"SupportedOperations,omitempty"`
	Properties []ModelsCertificateStoreTypeProperty `json:"Properties,omitempty"`
	PasswordOptions *ModelsCertStoreTypePasswordOptions `json:"PasswordOptions,omitempty"`
	StorePathType *string `json:"StorePathType,omitempty"`
	StorePathValue *string `json:"StorePathValue,omitempty"`
	PrivateKeyAllowed *int32 `json:"PrivateKeyAllowed,omitempty"`
	ServerRequired *bool `json:"ServerRequired,omitempty"`
	PowerShell *bool `json:"PowerShell,omitempty"`
	BlueprintAllowed *bool `json:"BlueprintAllowed,omitempty"`
	CustomAliasAllowed *int32 `json:"CustomAliasAllowed,omitempty"`
	EntryParameters []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter `json:"EntryParameters,omitempty"`
}

// NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest instantiates a new KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest(storeType int32, name string, shortName string) *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	this := KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{}
	this.StoreType = storeType
	this.Name = name
	this.ShortName = shortName
	return &this
}

// NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequestWithDefaults instantiates a new KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequestWithDefaults() *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	this := KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{}
	return &this
}

// GetStoreType returns the StoreType field value
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStoreType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StoreType
}

// GetStoreTypeOk returns a tuple with the StoreType field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStoreTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoreType, true
}

// SetStoreType sets field value
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStoreType(v int32) {
	o.StoreType = v
}

// GetName returns the Name field value
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetShortName returns the ShortName field value
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetShortName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetShortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShortName, true
}

// SetShortName sets field value
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetShortName(v string) {
	o.ShortName = v
}

// GetCapability returns the Capability field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCapability() string {
	if o == nil || isNil(o.Capability) {
		var ret string
		return ret
	}
	return *o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCapabilityOk() (*string, bool) {
	if o == nil || isNil(o.Capability) {
		return nil, false
	}
	return o.Capability, true
}

// HasCapability returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasCapability() bool {
	if o != nil && !isNil(o.Capability) {
		return true
	}

	return false
}

// SetCapability gets a reference to the given string and assigns it to the Capability field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetCapability(v string) {
	o.Capability = &v
}

// GetLocalStore returns the LocalStore field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetLocalStore() bool {
	if o == nil || isNil(o.LocalStore) {
		var ret bool
		return ret
	}
	return *o.LocalStore
}

// GetLocalStoreOk returns a tuple with the LocalStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetLocalStoreOk() (*bool, bool) {
	if o == nil || isNil(o.LocalStore) {
		return nil, false
	}
	return o.LocalStore, true
}

// HasLocalStore returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasLocalStore() bool {
	if o != nil && !isNil(o.LocalStore) {
		return true
	}

	return false
}

// SetLocalStore gets a reference to the given bool and assigns it to the LocalStore field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetLocalStore(v bool) {
	o.LocalStore = &v
}

// GetSupportedOperations returns the SupportedOperations field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetSupportedOperations() ModelsCertStoreTypeSupportedOperations {
	if o == nil || isNil(o.SupportedOperations) {
		var ret ModelsCertStoreTypeSupportedOperations
		return ret
	}
	return *o.SupportedOperations
}

// GetSupportedOperationsOk returns a tuple with the SupportedOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetSupportedOperationsOk() (*ModelsCertStoreTypeSupportedOperations, bool) {
	if o == nil || isNil(o.SupportedOperations) {
		return nil, false
	}
	return o.SupportedOperations, true
}

// HasSupportedOperations returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasSupportedOperations() bool {
	if o != nil && !isNil(o.SupportedOperations) {
		return true
	}

	return false
}

// SetSupportedOperations gets a reference to the given ModelsCertStoreTypeSupportedOperations and assigns it to the SupportedOperations field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetSupportedOperations(v ModelsCertStoreTypeSupportedOperations) {
	o.SupportedOperations = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetProperties() []ModelsCertificateStoreTypeProperty {
	if o == nil || isNil(o.Properties) {
		var ret []ModelsCertificateStoreTypeProperty
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPropertiesOk() ([]ModelsCertificateStoreTypeProperty, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []ModelsCertificateStoreTypeProperty and assigns it to the Properties field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetProperties(v []ModelsCertificateStoreTypeProperty) {
	o.Properties = v
}

// GetPasswordOptions returns the PasswordOptions field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPasswordOptions() ModelsCertStoreTypePasswordOptions {
	if o == nil || isNil(o.PasswordOptions) {
		var ret ModelsCertStoreTypePasswordOptions
		return ret
	}
	return *o.PasswordOptions
}

// GetPasswordOptionsOk returns a tuple with the PasswordOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPasswordOptionsOk() (*ModelsCertStoreTypePasswordOptions, bool) {
	if o == nil || isNil(o.PasswordOptions) {
		return nil, false
	}
	return o.PasswordOptions, true
}

// HasPasswordOptions returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasPasswordOptions() bool {
	if o != nil && !isNil(o.PasswordOptions) {
		return true
	}

	return false
}

// SetPasswordOptions gets a reference to the given ModelsCertStoreTypePasswordOptions and assigns it to the PasswordOptions field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetPasswordOptions(v ModelsCertStoreTypePasswordOptions) {
	o.PasswordOptions = &v
}

// GetStorePathType returns the StorePathType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathType() string {
	if o == nil || isNil(o.StorePathType) {
		var ret string
		return ret
	}
	return *o.StorePathType
}

// GetStorePathTypeOk returns a tuple with the StorePathType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathTypeOk() (*string, bool) {
	if o == nil || isNil(o.StorePathType) {
		return nil, false
	}
	return o.StorePathType, true
}

// HasStorePathType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasStorePathType() bool {
	if o != nil && !isNil(o.StorePathType) {
		return true
	}

	return false
}

// SetStorePathType gets a reference to the given string and assigns it to the StorePathType field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStorePathType(v string) {
	o.StorePathType = &v
}

// GetStorePathValue returns the StorePathValue field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathValue() string {
	if o == nil || isNil(o.StorePathValue) {
		var ret string
		return ret
	}
	return *o.StorePathValue
}

// GetStorePathValueOk returns a tuple with the StorePathValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathValueOk() (*string, bool) {
	if o == nil || isNil(o.StorePathValue) {
		return nil, false
	}
	return o.StorePathValue, true
}

// HasStorePathValue returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasStorePathValue() bool {
	if o != nil && !isNil(o.StorePathValue) {
		return true
	}

	return false
}

// SetStorePathValue gets a reference to the given string and assigns it to the StorePathValue field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStorePathValue(v string) {
	o.StorePathValue = &v
}

// GetPrivateKeyAllowed returns the PrivateKeyAllowed field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPrivateKeyAllowed() int32 {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		var ret int32
		return ret
	}
	return *o.PrivateKeyAllowed
}

// GetPrivateKeyAllowedOk returns a tuple with the PrivateKeyAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPrivateKeyAllowedOk() (*int32, bool) {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		return nil, false
	}
	return o.PrivateKeyAllowed, true
}

// HasPrivateKeyAllowed returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasPrivateKeyAllowed() bool {
	if o != nil && !isNil(o.PrivateKeyAllowed) {
		return true
	}

	return false
}

// SetPrivateKeyAllowed gets a reference to the given int32 and assigns it to the PrivateKeyAllowed field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetPrivateKeyAllowed(v int32) {
	o.PrivateKeyAllowed = &v
}

// GetServerRequired returns the ServerRequired field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetServerRequired() bool {
	if o == nil || isNil(o.ServerRequired) {
		var ret bool
		return ret
	}
	return *o.ServerRequired
}

// GetServerRequiredOk returns a tuple with the ServerRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetServerRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.ServerRequired) {
		return nil, false
	}
	return o.ServerRequired, true
}

// HasServerRequired returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasServerRequired() bool {
	if o != nil && !isNil(o.ServerRequired) {
		return true
	}

	return false
}

// SetServerRequired gets a reference to the given bool and assigns it to the ServerRequired field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetServerRequired(v bool) {
	o.ServerRequired = &v
}

// GetPowerShell returns the PowerShell field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPowerShell() bool {
	if o == nil || isNil(o.PowerShell) {
		var ret bool
		return ret
	}
	return *o.PowerShell
}

// GetPowerShellOk returns a tuple with the PowerShell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPowerShellOk() (*bool, bool) {
	if o == nil || isNil(o.PowerShell) {
		return nil, false
	}
	return o.PowerShell, true
}

// HasPowerShell returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasPowerShell() bool {
	if o != nil && !isNil(o.PowerShell) {
		return true
	}

	return false
}

// SetPowerShell gets a reference to the given bool and assigns it to the PowerShell field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetPowerShell(v bool) {
	o.PowerShell = &v
}

// GetBlueprintAllowed returns the BlueprintAllowed field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetBlueprintAllowed() bool {
	if o == nil || isNil(o.BlueprintAllowed) {
		var ret bool
		return ret
	}
	return *o.BlueprintAllowed
}

// GetBlueprintAllowedOk returns a tuple with the BlueprintAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetBlueprintAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.BlueprintAllowed) {
		return nil, false
	}
	return o.BlueprintAllowed, true
}

// HasBlueprintAllowed returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasBlueprintAllowed() bool {
	if o != nil && !isNil(o.BlueprintAllowed) {
		return true
	}

	return false
}

// SetBlueprintAllowed gets a reference to the given bool and assigns it to the BlueprintAllowed field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetBlueprintAllowed(v bool) {
	o.BlueprintAllowed = &v
}

// GetCustomAliasAllowed returns the CustomAliasAllowed field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCustomAliasAllowed() int32 {
	if o == nil || isNil(o.CustomAliasAllowed) {
		var ret int32
		return ret
	}
	return *o.CustomAliasAllowed
}

// GetCustomAliasAllowedOk returns a tuple with the CustomAliasAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCustomAliasAllowedOk() (*int32, bool) {
	if o == nil || isNil(o.CustomAliasAllowed) {
		return nil, false
	}
	return o.CustomAliasAllowed, true
}

// HasCustomAliasAllowed returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasCustomAliasAllowed() bool {
	if o != nil && !isNil(o.CustomAliasAllowed) {
		return true
	}

	return false
}

// SetCustomAliasAllowed gets a reference to the given int32 and assigns it to the CustomAliasAllowed field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetCustomAliasAllowed(v int32) {
	o.CustomAliasAllowed = &v
}

// GetEntryParameters returns the EntryParameters field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetEntryParameters() []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter {
	if o == nil || isNil(o.EntryParameters) {
		var ret []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter
		return ret
	}
	return o.EntryParameters
}

// GetEntryParametersOk returns a tuple with the EntryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetEntryParametersOk() ([]ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter, bool) {
	if o == nil || isNil(o.EntryParameters) {
		return nil, false
	}
	return o.EntryParameters, true
}

// HasEntryParameters returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasEntryParameters() bool {
	if o != nil && !isNil(o.EntryParameters) {
		return true
	}

	return false
}

// SetEntryParameters gets a reference to the given []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter and assigns it to the EntryParameters field.
func (o *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetEntryParameters(v []ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter) {
	o.EntryParameters = v
}

func (o KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["StoreType"] = o.StoreType
	toSerialize["Name"] = o.Name
	toSerialize["ShortName"] = o.ShortName
	if !isNil(o.Capability) {
		toSerialize["Capability"] = o.Capability
	}
	if !isNil(o.LocalStore) {
		toSerialize["LocalStore"] = o.LocalStore
	}
	if !isNil(o.SupportedOperations) {
		toSerialize["SupportedOperations"] = o.SupportedOperations
	}
	if !isNil(o.Properties) {
		toSerialize["Properties"] = o.Properties
	}
	if !isNil(o.PasswordOptions) {
		toSerialize["PasswordOptions"] = o.PasswordOptions
	}
	if !isNil(o.StorePathType) {
		toSerialize["StorePathType"] = o.StorePathType
	}
	if !isNil(o.StorePathValue) {
		toSerialize["StorePathValue"] = o.StorePathValue
	}
	if !isNil(o.PrivateKeyAllowed) {
		toSerialize["PrivateKeyAllowed"] = o.PrivateKeyAllowed
	}
	if !isNil(o.ServerRequired) {
		toSerialize["ServerRequired"] = o.ServerRequired
	}
	if !isNil(o.PowerShell) {
		toSerialize["PowerShell"] = o.PowerShell
	}
	if !isNil(o.BlueprintAllowed) {
		toSerialize["BlueprintAllowed"] = o.BlueprintAllowed
	}
	if !isNil(o.CustomAliasAllowed) {
		toSerialize["CustomAliasAllowed"] = o.CustomAliasAllowed
	}
	if !isNil(o.EntryParameters) {
		toSerialize["EntryParameters"] = o.EntryParameters
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest struct {
	value *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) Get() *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) Set(val *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest(val *KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	return &NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


