/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsEnrollmentCSREnrollmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsEnrollmentCSREnrollmentRequest{}

// ModelsEnrollmentCSREnrollmentRequest struct for ModelsEnrollmentCSREnrollmentRequest
type ModelsEnrollmentCSREnrollmentRequest struct {
	CSR string `json:"CSR"`
	CertificateAuthority *string `json:"CertificateAuthority,omitempty"`
	IncludeChain *bool `json:"IncludeChain,omitempty"`
	Metadata map[string]interface{} `json:"Metadata,omitempty"`
	AdditionalEnrollmentFields map[string]map[string]interface{} `json:"AdditionalEnrollmentFields,omitempty"`
	Timestamp *time.Time `json:"Timestamp,omitempty"`
	Template *string `json:"Template,omitempty"`
	SANs *map[string][]string `json:"SANs,omitempty"`
}

// NewModelsEnrollmentCSREnrollmentRequest instantiates a new ModelsEnrollmentCSREnrollmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsEnrollmentCSREnrollmentRequest(cSR string) *ModelsEnrollmentCSREnrollmentRequest {
	this := ModelsEnrollmentCSREnrollmentRequest{}
	this.CSR = cSR
	return &this
}

// NewModelsEnrollmentCSREnrollmentRequestWithDefaults instantiates a new ModelsEnrollmentCSREnrollmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsEnrollmentCSREnrollmentRequestWithDefaults() *ModelsEnrollmentCSREnrollmentRequest {
	this := ModelsEnrollmentCSREnrollmentRequest{}
	return &this
}

// GetCSR returns the CSR field value
func (o *ModelsEnrollmentCSREnrollmentRequest) GetCSR() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CSR
}

// GetCSROk returns a tuple with the CSR field value
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetCSROk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CSR, true
}

// SetCSR sets field value
func (o *ModelsEnrollmentCSREnrollmentRequest) SetCSR(v string) {
	o.CSR = v
}

// GetCertificateAuthority returns the CertificateAuthority field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetCertificateAuthority() string {
	if o == nil || isNil(o.CertificateAuthority) {
		var ret string
		return ret
	}
	return *o.CertificateAuthority
}

// GetCertificateAuthorityOk returns a tuple with the CertificateAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetCertificateAuthorityOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthority) {
		return nil, false
	}
	return o.CertificateAuthority, true
}

// HasCertificateAuthority returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) HasCertificateAuthority() bool {
	if o != nil && !isNil(o.CertificateAuthority) {
		return true
	}

	return false
}

// SetCertificateAuthority gets a reference to the given string and assigns it to the CertificateAuthority field.
func (o *ModelsEnrollmentCSREnrollmentRequest) SetCertificateAuthority(v string) {
	o.CertificateAuthority = &v
}

// GetIncludeChain returns the IncludeChain field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetIncludeChain() bool {
	if o == nil || isNil(o.IncludeChain) {
		var ret bool
		return ret
	}
	return *o.IncludeChain
}

// GetIncludeChainOk returns a tuple with the IncludeChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetIncludeChainOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeChain) {
		return nil, false
	}
	return o.IncludeChain, true
}

// HasIncludeChain returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) HasIncludeChain() bool {
	if o != nil && !isNil(o.IncludeChain) {
		return true
	}

	return false
}

// SetIncludeChain gets a reference to the given bool and assigns it to the IncludeChain field.
func (o *ModelsEnrollmentCSREnrollmentRequest) SetIncludeChain(v bool) {
	o.IncludeChain = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetMetadata() map[string]interface{} {
	if o == nil || isNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ModelsEnrollmentCSREnrollmentRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetAdditionalEnrollmentFields returns the AdditionalEnrollmentFields field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetAdditionalEnrollmentFields() map[string]map[string]interface{} {
	if o == nil || isNil(o.AdditionalEnrollmentFields) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.AdditionalEnrollmentFields
}

// GetAdditionalEnrollmentFieldsOk returns a tuple with the AdditionalEnrollmentFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetAdditionalEnrollmentFieldsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.AdditionalEnrollmentFields) {
		return map[string]map[string]interface{}{}, false
	}
	return o.AdditionalEnrollmentFields, true
}

// HasAdditionalEnrollmentFields returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) HasAdditionalEnrollmentFields() bool {
	if o != nil && !isNil(o.AdditionalEnrollmentFields) {
		return true
	}

	return false
}

// SetAdditionalEnrollmentFields gets a reference to the given map[string]map[string]interface{} and assigns it to the AdditionalEnrollmentFields field.
func (o *ModelsEnrollmentCSREnrollmentRequest) SetAdditionalEnrollmentFields(v map[string]map[string]interface{}) {
	o.AdditionalEnrollmentFields = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetTimestamp() time.Time {
	if o == nil || isNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ModelsEnrollmentCSREnrollmentRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetTemplate() string {
	if o == nil || isNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetTemplateOk() (*string, bool) {
	if o == nil || isNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) HasTemplate() bool {
	if o != nil && !isNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *ModelsEnrollmentCSREnrollmentRequest) SetTemplate(v string) {
	o.Template = &v
}

// GetSANs returns the SANs field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetSANs() map[string][]string {
	if o == nil || isNil(o.SANs) {
		var ret map[string][]string
		return ret
	}
	return *o.SANs
}

// GetSANsOk returns a tuple with the SANs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) GetSANsOk() (*map[string][]string, bool) {
	if o == nil || isNil(o.SANs) {
		return nil, false
	}
	return o.SANs, true
}

// HasSANs returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSREnrollmentRequest) HasSANs() bool {
	if o != nil && !isNil(o.SANs) {
		return true
	}

	return false
}

// SetSANs gets a reference to the given map[string][]string and assigns it to the SANs field.
func (o *ModelsEnrollmentCSREnrollmentRequest) SetSANs(v map[string][]string) {
	o.SANs = &v
}

func (o ModelsEnrollmentCSREnrollmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsEnrollmentCSREnrollmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CSR"] = o.CSR
	if !isNil(o.CertificateAuthority) {
		toSerialize["CertificateAuthority"] = o.CertificateAuthority
	}
	if !isNil(o.IncludeChain) {
		toSerialize["IncludeChain"] = o.IncludeChain
	}
	if !isNil(o.Metadata) {
		toSerialize["Metadata"] = o.Metadata
	}
	if !isNil(o.AdditionalEnrollmentFields) {
		toSerialize["AdditionalEnrollmentFields"] = o.AdditionalEnrollmentFields
	}
	if !isNil(o.Timestamp) {
		toSerialize["Timestamp"] = o.Timestamp
	}
	if !isNil(o.Template) {
		toSerialize["Template"] = o.Template
	}
	if !isNil(o.SANs) {
		toSerialize["SANs"] = o.SANs
	}
	return toSerialize, nil
}

type NullableModelsEnrollmentCSREnrollmentRequest struct {
	value *ModelsEnrollmentCSREnrollmentRequest
	isSet bool
}

func (v NullableModelsEnrollmentCSREnrollmentRequest) Get() *ModelsEnrollmentCSREnrollmentRequest {
	return v.value
}

func (v *NullableModelsEnrollmentCSREnrollmentRequest) Set(val *ModelsEnrollmentCSREnrollmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsEnrollmentCSREnrollmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsEnrollmentCSREnrollmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsEnrollmentCSREnrollmentRequest(val *ModelsEnrollmentCSREnrollmentRequest) *NullableModelsEnrollmentCSREnrollmentRequest {
	return &NullableModelsEnrollmentCSREnrollmentRequest{value: val, isSet: true}
}

func (v NullableModelsEnrollmentCSREnrollmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsEnrollmentCSREnrollmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


