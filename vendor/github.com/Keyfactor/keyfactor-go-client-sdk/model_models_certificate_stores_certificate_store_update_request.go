/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateStoresCertificateStoreUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateStoresCertificateStoreUpdateRequest{}

// ModelsCertificateStoresCertificateStoreUpdateRequest struct for ModelsCertificateStoresCertificateStoreUpdateRequest
type ModelsCertificateStoresCertificateStoreUpdateRequest struct {
	Id *string `json:"Id,omitempty"`
	ContainerId *int32 `json:"ContainerId,omitempty"`
	CreateIfMissing *bool `json:"CreateIfMissing,omitempty"`
	Properties *string `json:"Properties,omitempty"`
	AgentId *string `json:"AgentId,omitempty"`
	InventorySchedule *KeyfactorCommonSchedulingKeyfactorSchedule `json:"InventorySchedule,omitempty"`
	Password *ModelsKeyfactorAPISecret `json:"Password,omitempty"`
}

// NewModelsCertificateStoresCertificateStoreUpdateRequest instantiates a new ModelsCertificateStoresCertificateStoreUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateStoresCertificateStoreUpdateRequest() *ModelsCertificateStoresCertificateStoreUpdateRequest {
	this := ModelsCertificateStoresCertificateStoreUpdateRequest{}
	return &this
}

// NewModelsCertificateStoresCertificateStoreUpdateRequestWithDefaults instantiates a new ModelsCertificateStoresCertificateStoreUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateStoresCertificateStoreUpdateRequestWithDefaults() *ModelsCertificateStoresCertificateStoreUpdateRequest {
	this := ModelsCertificateStoresCertificateStoreUpdateRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) SetId(v string) {
	o.Id = &v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetContainerId() int32 {
	if o == nil || isNil(o.ContainerId) {
		var ret int32
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetContainerIdOk() (*int32, bool) {
	if o == nil || isNil(o.ContainerId) {
		return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) HasContainerId() bool {
	if o != nil && !isNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given int32 and assigns it to the ContainerId field.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) SetContainerId(v int32) {
	o.ContainerId = &v
}

// GetCreateIfMissing returns the CreateIfMissing field value if set, zero value otherwise.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetCreateIfMissing() bool {
	if o == nil || isNil(o.CreateIfMissing) {
		var ret bool
		return ret
	}
	return *o.CreateIfMissing
}

// GetCreateIfMissingOk returns a tuple with the CreateIfMissing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetCreateIfMissingOk() (*bool, bool) {
	if o == nil || isNil(o.CreateIfMissing) {
		return nil, false
	}
	return o.CreateIfMissing, true
}

// HasCreateIfMissing returns a boolean if a field has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) HasCreateIfMissing() bool {
	if o != nil && !isNil(o.CreateIfMissing) {
		return true
	}

	return false
}

// SetCreateIfMissing gets a reference to the given bool and assigns it to the CreateIfMissing field.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) SetCreateIfMissing(v bool) {
	o.CreateIfMissing = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetProperties() string {
	if o == nil || isNil(o.Properties) {
		var ret string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetPropertiesOk() (*string, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given string and assigns it to the Properties field.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) SetProperties(v string) {
	o.Properties = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetAgentId() string {
	if o == nil || isNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetAgentIdOk() (*string, bool) {
	if o == nil || isNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) HasAgentId() bool {
	if o != nil && !isNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) SetAgentId(v string) {
	o.AgentId = &v
}

// GetInventorySchedule returns the InventorySchedule field value if set, zero value otherwise.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetInventorySchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.InventorySchedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.InventorySchedule
}

// GetInventoryScheduleOk returns a tuple with the InventorySchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetInventoryScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.InventorySchedule) {
		return nil, false
	}
	return o.InventorySchedule, true
}

// HasInventorySchedule returns a boolean if a field has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) HasInventorySchedule() bool {
	if o != nil && !isNil(o.InventorySchedule) {
		return true
	}

	return false
}

// SetInventorySchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the InventorySchedule field.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) SetInventorySchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.InventorySchedule = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetPassword() ModelsKeyfactorAPISecret {
	if o == nil || isNil(o.Password) {
		var ret ModelsKeyfactorAPISecret
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) GetPasswordOk() (*ModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given ModelsKeyfactorAPISecret and assigns it to the Password field.
func (o *ModelsCertificateStoresCertificateStoreUpdateRequest) SetPassword(v ModelsKeyfactorAPISecret) {
	o.Password = &v
}

func (o ModelsCertificateStoresCertificateStoreUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateStoresCertificateStoreUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.ContainerId) {
		toSerialize["ContainerId"] = o.ContainerId
	}
	if !isNil(o.CreateIfMissing) {
		toSerialize["CreateIfMissing"] = o.CreateIfMissing
	}
	if !isNil(o.Properties) {
		toSerialize["Properties"] = o.Properties
	}
	if !isNil(o.AgentId) {
		toSerialize["AgentId"] = o.AgentId
	}
	if !isNil(o.InventorySchedule) {
		toSerialize["InventorySchedule"] = o.InventorySchedule
	}
	if !isNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	return toSerialize, nil
}

type NullableModelsCertificateStoresCertificateStoreUpdateRequest struct {
	value *ModelsCertificateStoresCertificateStoreUpdateRequest
	isSet bool
}

func (v NullableModelsCertificateStoresCertificateStoreUpdateRequest) Get() *ModelsCertificateStoresCertificateStoreUpdateRequest {
	return v.value
}

func (v *NullableModelsCertificateStoresCertificateStoreUpdateRequest) Set(val *ModelsCertificateStoresCertificateStoreUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateStoresCertificateStoreUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateStoresCertificateStoreUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateStoresCertificateStoreUpdateRequest(val *ModelsCertificateStoresCertificateStoreUpdateRequest) *NullableModelsCertificateStoresCertificateStoreUpdateRequest {
	return &NullableModelsCertificateStoresCertificateStoreUpdateRequest{value: val, isSet: true}
}

func (v NullableModelsCertificateStoresCertificateStoreUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateStoresCertificateStoreUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


