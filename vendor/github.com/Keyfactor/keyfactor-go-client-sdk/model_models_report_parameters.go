/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsReportParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsReportParameters{}

// ModelsReportParameters struct for ModelsReportParameters
type ModelsReportParameters struct {
	Id *int32 `json:"Id,omitempty"`
	ParameterName *string `json:"ParameterName,omitempty"`
	ParameterType *int32 `json:"ParameterType,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	Description *string `json:"Description,omitempty"`
	DefaultValue *string `json:"DefaultValue,omitempty"`
	DisplayOrder *int32 `json:"DisplayOrder,omitempty"`
	ParameterVisibility *int32 `json:"ParameterVisibility,omitempty"`
}

// NewModelsReportParameters instantiates a new ModelsReportParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsReportParameters() *ModelsReportParameters {
	this := ModelsReportParameters{}
	return &this
}

// NewModelsReportParametersWithDefaults instantiates a new ModelsReportParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsReportParametersWithDefaults() *ModelsReportParameters {
	this := ModelsReportParameters{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsReportParameters) SetId(v int32) {
	o.Id = &v
}

// GetParameterName returns the ParameterName field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetParameterName() string {
	if o == nil || isNil(o.ParameterName) {
		var ret string
		return ret
	}
	return *o.ParameterName
}

// GetParameterNameOk returns a tuple with the ParameterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetParameterNameOk() (*string, bool) {
	if o == nil || isNil(o.ParameterName) {
		return nil, false
	}
	return o.ParameterName, true
}

// HasParameterName returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasParameterName() bool {
	if o != nil && !isNil(o.ParameterName) {
		return true
	}

	return false
}

// SetParameterName gets a reference to the given string and assigns it to the ParameterName field.
func (o *ModelsReportParameters) SetParameterName(v string) {
	o.ParameterName = &v
}

// GetParameterType returns the ParameterType field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetParameterType() int32 {
	if o == nil || isNil(o.ParameterType) {
		var ret int32
		return ret
	}
	return *o.ParameterType
}

// GetParameterTypeOk returns a tuple with the ParameterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetParameterTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ParameterType) {
		return nil, false
	}
	return o.ParameterType, true
}

// HasParameterType returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasParameterType() bool {
	if o != nil && !isNil(o.ParameterType) {
		return true
	}

	return false
}

// SetParameterType gets a reference to the given int32 and assigns it to the ParameterType field.
func (o *ModelsReportParameters) SetParameterType(v int32) {
	o.ParameterType = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelsReportParameters) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsReportParameters) SetDescription(v string) {
	o.Description = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetDefaultValue() string {
	if o == nil || isNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetDefaultValueOk() (*string, bool) {
	if o == nil || isNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasDefaultValue() bool {
	if o != nil && !isNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *ModelsReportParameters) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetDisplayOrder() int32 {
	if o == nil || isNil(o.DisplayOrder) {
		var ret int32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetDisplayOrderOk() (*int32, bool) {
	if o == nil || isNil(o.DisplayOrder) {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasDisplayOrder() bool {
	if o != nil && !isNil(o.DisplayOrder) {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int32 and assigns it to the DisplayOrder field.
func (o *ModelsReportParameters) SetDisplayOrder(v int32) {
	o.DisplayOrder = &v
}

// GetParameterVisibility returns the ParameterVisibility field value if set, zero value otherwise.
func (o *ModelsReportParameters) GetParameterVisibility() int32 {
	if o == nil || isNil(o.ParameterVisibility) {
		var ret int32
		return ret
	}
	return *o.ParameterVisibility
}

// GetParameterVisibilityOk returns a tuple with the ParameterVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParameters) GetParameterVisibilityOk() (*int32, bool) {
	if o == nil || isNil(o.ParameterVisibility) {
		return nil, false
	}
	return o.ParameterVisibility, true
}

// HasParameterVisibility returns a boolean if a field has been set.
func (o *ModelsReportParameters) HasParameterVisibility() bool {
	if o != nil && !isNil(o.ParameterVisibility) {
		return true
	}

	return false
}

// SetParameterVisibility gets a reference to the given int32 and assigns it to the ParameterVisibility field.
func (o *ModelsReportParameters) SetParameterVisibility(v int32) {
	o.ParameterVisibility = &v
}

func (o ModelsReportParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsReportParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.ParameterName) {
		toSerialize["ParameterName"] = o.ParameterName
	}
	if !isNil(o.ParameterType) {
		toSerialize["ParameterType"] = o.ParameterType
	}
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !isNil(o.DefaultValue) {
		toSerialize["DefaultValue"] = o.DefaultValue
	}
	if !isNil(o.DisplayOrder) {
		toSerialize["DisplayOrder"] = o.DisplayOrder
	}
	if !isNil(o.ParameterVisibility) {
		toSerialize["ParameterVisibility"] = o.ParameterVisibility
	}
	return toSerialize, nil
}

type NullableModelsReportParameters struct {
	value *ModelsReportParameters
	isSet bool
}

func (v NullableModelsReportParameters) Get() *ModelsReportParameters {
	return v.value
}

func (v *NullableModelsReportParameters) Set(val *ModelsReportParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsReportParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsReportParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsReportParameters(val *ModelsReportParameters) *NullableModelsReportParameters {
	return &NullableModelsReportParameters{value: val, isSet: true}
}

func (v NullableModelsReportParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsReportParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


