/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorAPIModelsSMTPSMTPResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorAPIModelsSMTPSMTPResponse{}

// KeyfactorAPIModelsSMTPSMTPResponse struct for KeyfactorAPIModelsSMTPSMTPResponse
type KeyfactorAPIModelsSMTPSMTPResponse struct {
	Host *string `json:"Host,omitempty"`
	Id *int32 `json:"Id,omitempty"`
	Port *int32 `json:"Port,omitempty"`
	RelayAuthenticationType *int32 `json:"RelayAuthenticationType,omitempty"`
	RelayUsername *string `json:"RelayUsername,omitempty"`
	SenderAccount *string `json:"SenderAccount,omitempty"`
	SenderName *string `json:"SenderName,omitempty"`
	UseSSL *bool `json:"UseSSL,omitempty"`
}

// NewKeyfactorAPIModelsSMTPSMTPResponse instantiates a new KeyfactorAPIModelsSMTPSMTPResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorAPIModelsSMTPSMTPResponse() *KeyfactorAPIModelsSMTPSMTPResponse {
	this := KeyfactorAPIModelsSMTPSMTPResponse{}
	return &this
}

// NewKeyfactorAPIModelsSMTPSMTPResponseWithDefaults instantiates a new KeyfactorAPIModelsSMTPSMTPResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorAPIModelsSMTPSMTPResponseWithDefaults() *KeyfactorAPIModelsSMTPSMTPResponse {
	this := KeyfactorAPIModelsSMTPSMTPResponse{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetHost() string {
	if o == nil || isNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetHostOk() (*string, bool) {
	if o == nil || isNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasHost() bool {
	if o != nil && !isNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetHost(v string) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetId(v int32) {
	o.Id = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetPort(v int32) {
	o.Port = &v
}

// GetRelayAuthenticationType returns the RelayAuthenticationType field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetRelayAuthenticationType() int32 {
	if o == nil || isNil(o.RelayAuthenticationType) {
		var ret int32
		return ret
	}
	return *o.RelayAuthenticationType
}

// GetRelayAuthenticationTypeOk returns a tuple with the RelayAuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetRelayAuthenticationTypeOk() (*int32, bool) {
	if o == nil || isNil(o.RelayAuthenticationType) {
		return nil, false
	}
	return o.RelayAuthenticationType, true
}

// HasRelayAuthenticationType returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasRelayAuthenticationType() bool {
	if o != nil && !isNil(o.RelayAuthenticationType) {
		return true
	}

	return false
}

// SetRelayAuthenticationType gets a reference to the given int32 and assigns it to the RelayAuthenticationType field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetRelayAuthenticationType(v int32) {
	o.RelayAuthenticationType = &v
}

// GetRelayUsername returns the RelayUsername field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetRelayUsername() string {
	if o == nil || isNil(o.RelayUsername) {
		var ret string
		return ret
	}
	return *o.RelayUsername
}

// GetRelayUsernameOk returns a tuple with the RelayUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetRelayUsernameOk() (*string, bool) {
	if o == nil || isNil(o.RelayUsername) {
		return nil, false
	}
	return o.RelayUsername, true
}

// HasRelayUsername returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasRelayUsername() bool {
	if o != nil && !isNil(o.RelayUsername) {
		return true
	}

	return false
}

// SetRelayUsername gets a reference to the given string and assigns it to the RelayUsername field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetRelayUsername(v string) {
	o.RelayUsername = &v
}

// GetSenderAccount returns the SenderAccount field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetSenderAccount() string {
	if o == nil || isNil(o.SenderAccount) {
		var ret string
		return ret
	}
	return *o.SenderAccount
}

// GetSenderAccountOk returns a tuple with the SenderAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetSenderAccountOk() (*string, bool) {
	if o == nil || isNil(o.SenderAccount) {
		return nil, false
	}
	return o.SenderAccount, true
}

// HasSenderAccount returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasSenderAccount() bool {
	if o != nil && !isNil(o.SenderAccount) {
		return true
	}

	return false
}

// SetSenderAccount gets a reference to the given string and assigns it to the SenderAccount field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetSenderAccount(v string) {
	o.SenderAccount = &v
}

// GetSenderName returns the SenderName field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetSenderName() string {
	if o == nil || isNil(o.SenderName) {
		var ret string
		return ret
	}
	return *o.SenderName
}

// GetSenderNameOk returns a tuple with the SenderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetSenderNameOk() (*string, bool) {
	if o == nil || isNil(o.SenderName) {
		return nil, false
	}
	return o.SenderName, true
}

// HasSenderName returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasSenderName() bool {
	if o != nil && !isNil(o.SenderName) {
		return true
	}

	return false
}

// SetSenderName gets a reference to the given string and assigns it to the SenderName field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetSenderName(v string) {
	o.SenderName = &v
}

// GetUseSSL returns the UseSSL field value if set, zero value otherwise.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetUseSSL() bool {
	if o == nil || isNil(o.UseSSL) {
		var ret bool
		return ret
	}
	return *o.UseSSL
}

// GetUseSSLOk returns a tuple with the UseSSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) GetUseSSLOk() (*bool, bool) {
	if o == nil || isNil(o.UseSSL) {
		return nil, false
	}
	return o.UseSSL, true
}

// HasUseSSL returns a boolean if a field has been set.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) HasUseSSL() bool {
	if o != nil && !isNil(o.UseSSL) {
		return true
	}

	return false
}

// SetUseSSL gets a reference to the given bool and assigns it to the UseSSL field.
func (o *KeyfactorAPIModelsSMTPSMTPResponse) SetUseSSL(v bool) {
	o.UseSSL = &v
}

func (o KeyfactorAPIModelsSMTPSMTPResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorAPIModelsSMTPSMTPResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Host) {
		toSerialize["Host"] = o.Host
	}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Port) {
		toSerialize["Port"] = o.Port
	}
	if !isNil(o.RelayAuthenticationType) {
		toSerialize["RelayAuthenticationType"] = o.RelayAuthenticationType
	}
	if !isNil(o.RelayUsername) {
		toSerialize["RelayUsername"] = o.RelayUsername
	}
	if !isNil(o.SenderAccount) {
		toSerialize["SenderAccount"] = o.SenderAccount
	}
	if !isNil(o.SenderName) {
		toSerialize["SenderName"] = o.SenderName
	}
	if !isNil(o.UseSSL) {
		toSerialize["UseSSL"] = o.UseSSL
	}
	return toSerialize, nil
}

type NullableKeyfactorAPIModelsSMTPSMTPResponse struct {
	value *KeyfactorAPIModelsSMTPSMTPResponse
	isSet bool
}

func (v NullableKeyfactorAPIModelsSMTPSMTPResponse) Get() *KeyfactorAPIModelsSMTPSMTPResponse {
	return v.value
}

func (v *NullableKeyfactorAPIModelsSMTPSMTPResponse) Set(val *KeyfactorAPIModelsSMTPSMTPResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorAPIModelsSMTPSMTPResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorAPIModelsSMTPSMTPResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorAPIModelsSMTPSMTPResponse(val *KeyfactorAPIModelsSMTPSMTPResponse) *NullableKeyfactorAPIModelsSMTPSMTPResponse {
	return &NullableKeyfactorAPIModelsSMTPSMTPResponse{value: val, isSet: true}
}

func (v NullableKeyfactorAPIModelsSMTPSMTPResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorAPIModelsSMTPSMTPResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


