/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSHAccessLogonUserAccessRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHAccessLogonUserAccessRequest{}

// ModelsSSHAccessLogonUserAccessRequest struct for ModelsSSHAccessLogonUserAccessRequest
type ModelsSSHAccessLogonUserAccessRequest struct {
	LogonName *string `json:"LogonName,omitempty"`
	Users []string `json:"Users,omitempty"`
}

// NewModelsSSHAccessLogonUserAccessRequest instantiates a new ModelsSSHAccessLogonUserAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHAccessLogonUserAccessRequest() *ModelsSSHAccessLogonUserAccessRequest {
	this := ModelsSSHAccessLogonUserAccessRequest{}
	return &this
}

// NewModelsSSHAccessLogonUserAccessRequestWithDefaults instantiates a new ModelsSSHAccessLogonUserAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHAccessLogonUserAccessRequestWithDefaults() *ModelsSSHAccessLogonUserAccessRequest {
	this := ModelsSSHAccessLogonUserAccessRequest{}
	return &this
}

// GetLogonName returns the LogonName field value if set, zero value otherwise.
func (o *ModelsSSHAccessLogonUserAccessRequest) GetLogonName() string {
	if o == nil || isNil(o.LogonName) {
		var ret string
		return ret
	}
	return *o.LogonName
}

// GetLogonNameOk returns a tuple with the LogonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessLogonUserAccessRequest) GetLogonNameOk() (*string, bool) {
	if o == nil || isNil(o.LogonName) {
		return nil, false
	}
	return o.LogonName, true
}

// HasLogonName returns a boolean if a field has been set.
func (o *ModelsSSHAccessLogonUserAccessRequest) HasLogonName() bool {
	if o != nil && !isNil(o.LogonName) {
		return true
	}

	return false
}

// SetLogonName gets a reference to the given string and assigns it to the LogonName field.
func (o *ModelsSSHAccessLogonUserAccessRequest) SetLogonName(v string) {
	o.LogonName = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ModelsSSHAccessLogonUserAccessRequest) GetUsers() []string {
	if o == nil || isNil(o.Users) {
		var ret []string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessLogonUserAccessRequest) GetUsersOk() ([]string, bool) {
	if o == nil || isNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ModelsSSHAccessLogonUserAccessRequest) HasUsers() bool {
	if o != nil && !isNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *ModelsSSHAccessLogonUserAccessRequest) SetUsers(v []string) {
	o.Users = v
}

func (o ModelsSSHAccessLogonUserAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHAccessLogonUserAccessRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LogonName) {
		toSerialize["LogonName"] = o.LogonName
	}
	if !isNil(o.Users) {
		toSerialize["Users"] = o.Users
	}
	return toSerialize, nil
}

type NullableModelsSSHAccessLogonUserAccessRequest struct {
	value *ModelsSSHAccessLogonUserAccessRequest
	isSet bool
}

func (v NullableModelsSSHAccessLogonUserAccessRequest) Get() *ModelsSSHAccessLogonUserAccessRequest {
	return v.value
}

func (v *NullableModelsSSHAccessLogonUserAccessRequest) Set(val *ModelsSSHAccessLogonUserAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHAccessLogonUserAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHAccessLogonUserAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHAccessLogonUserAccessRequest(val *ModelsSSHAccessLogonUserAccessRequest) *NullableModelsSSHAccessLogonUserAccessRequest {
	return &NullableModelsSSHAccessLogonUserAccessRequest{value: val, isSet: true}
}

func (v NullableModelsSSHAccessLogonUserAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHAccessLogonUserAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


