/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsTemplateRetrievalResponseTemplatePolicyModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTemplateRetrievalResponseTemplatePolicyModel{}

// ModelsTemplateRetrievalResponseTemplatePolicyModel struct for ModelsTemplateRetrievalResponseTemplatePolicyModel
type ModelsTemplateRetrievalResponseTemplatePolicyModel struct {
	TemplateId *int32 `json:"TemplateId,omitempty"`
	RSAValidKeySizes []int32 `json:"RSAValidKeySizes,omitempty"`
	ECCValidCurves []string `json:"ECCValidCurves,omitempty"`
	AllowKeyReuse *bool `json:"AllowKeyReuse,omitempty"`
	AllowWildcards *bool `json:"AllowWildcards,omitempty"`
	RFCEnforcement *bool `json:"RFCEnforcement,omitempty"`
}

// NewModelsTemplateRetrievalResponseTemplatePolicyModel instantiates a new ModelsTemplateRetrievalResponseTemplatePolicyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTemplateRetrievalResponseTemplatePolicyModel() *ModelsTemplateRetrievalResponseTemplatePolicyModel {
	this := ModelsTemplateRetrievalResponseTemplatePolicyModel{}
	return &this
}

// NewModelsTemplateRetrievalResponseTemplatePolicyModelWithDefaults instantiates a new ModelsTemplateRetrievalResponseTemplatePolicyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTemplateRetrievalResponseTemplatePolicyModelWithDefaults() *ModelsTemplateRetrievalResponseTemplatePolicyModel {
	this := ModelsTemplateRetrievalResponseTemplatePolicyModel{}
	return &this
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetTemplateId() int32 {
	if o == nil || isNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetTemplateIdOk() (*int32, bool) {
	if o == nil || isNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) HasTemplateId() bool {
	if o != nil && !isNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetRSAValidKeySizes returns the RSAValidKeySizes field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetRSAValidKeySizes() []int32 {
	if o == nil || isNil(o.RSAValidKeySizes) {
		var ret []int32
		return ret
	}
	return o.RSAValidKeySizes
}

// GetRSAValidKeySizesOk returns a tuple with the RSAValidKeySizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetRSAValidKeySizesOk() ([]int32, bool) {
	if o == nil || isNil(o.RSAValidKeySizes) {
		return nil, false
	}
	return o.RSAValidKeySizes, true
}

// HasRSAValidKeySizes returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) HasRSAValidKeySizes() bool {
	if o != nil && !isNil(o.RSAValidKeySizes) {
		return true
	}

	return false
}

// SetRSAValidKeySizes gets a reference to the given []int32 and assigns it to the RSAValidKeySizes field.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) SetRSAValidKeySizes(v []int32) {
	o.RSAValidKeySizes = v
}

// GetECCValidCurves returns the ECCValidCurves field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetECCValidCurves() []string {
	if o == nil || isNil(o.ECCValidCurves) {
		var ret []string
		return ret
	}
	return o.ECCValidCurves
}

// GetECCValidCurvesOk returns a tuple with the ECCValidCurves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetECCValidCurvesOk() ([]string, bool) {
	if o == nil || isNil(o.ECCValidCurves) {
		return nil, false
	}
	return o.ECCValidCurves, true
}

// HasECCValidCurves returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) HasECCValidCurves() bool {
	if o != nil && !isNil(o.ECCValidCurves) {
		return true
	}

	return false
}

// SetECCValidCurves gets a reference to the given []string and assigns it to the ECCValidCurves field.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) SetECCValidCurves(v []string) {
	o.ECCValidCurves = v
}

// GetAllowKeyReuse returns the AllowKeyReuse field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetAllowKeyReuse() bool {
	if o == nil || isNil(o.AllowKeyReuse) {
		var ret bool
		return ret
	}
	return *o.AllowKeyReuse
}

// GetAllowKeyReuseOk returns a tuple with the AllowKeyReuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetAllowKeyReuseOk() (*bool, bool) {
	if o == nil || isNil(o.AllowKeyReuse) {
		return nil, false
	}
	return o.AllowKeyReuse, true
}

// HasAllowKeyReuse returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) HasAllowKeyReuse() bool {
	if o != nil && !isNil(o.AllowKeyReuse) {
		return true
	}

	return false
}

// SetAllowKeyReuse gets a reference to the given bool and assigns it to the AllowKeyReuse field.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) SetAllowKeyReuse(v bool) {
	o.AllowKeyReuse = &v
}

// GetAllowWildcards returns the AllowWildcards field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetAllowWildcards() bool {
	if o == nil || isNil(o.AllowWildcards) {
		var ret bool
		return ret
	}
	return *o.AllowWildcards
}

// GetAllowWildcardsOk returns a tuple with the AllowWildcards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetAllowWildcardsOk() (*bool, bool) {
	if o == nil || isNil(o.AllowWildcards) {
		return nil, false
	}
	return o.AllowWildcards, true
}

// HasAllowWildcards returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) HasAllowWildcards() bool {
	if o != nil && !isNil(o.AllowWildcards) {
		return true
	}

	return false
}

// SetAllowWildcards gets a reference to the given bool and assigns it to the AllowWildcards field.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) SetAllowWildcards(v bool) {
	o.AllowWildcards = &v
}

// GetRFCEnforcement returns the RFCEnforcement field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetRFCEnforcement() bool {
	if o == nil || isNil(o.RFCEnforcement) {
		var ret bool
		return ret
	}
	return *o.RFCEnforcement
}

// GetRFCEnforcementOk returns a tuple with the RFCEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) GetRFCEnforcementOk() (*bool, bool) {
	if o == nil || isNil(o.RFCEnforcement) {
		return nil, false
	}
	return o.RFCEnforcement, true
}

// HasRFCEnforcement returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) HasRFCEnforcement() bool {
	if o != nil && !isNil(o.RFCEnforcement) {
		return true
	}

	return false
}

// SetRFCEnforcement gets a reference to the given bool and assigns it to the RFCEnforcement field.
func (o *ModelsTemplateRetrievalResponseTemplatePolicyModel) SetRFCEnforcement(v bool) {
	o.RFCEnforcement = &v
}

func (o ModelsTemplateRetrievalResponseTemplatePolicyModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTemplateRetrievalResponseTemplatePolicyModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TemplateId) {
		toSerialize["TemplateId"] = o.TemplateId
	}
	if !isNil(o.RSAValidKeySizes) {
		toSerialize["RSAValidKeySizes"] = o.RSAValidKeySizes
	}
	if !isNil(o.ECCValidCurves) {
		toSerialize["ECCValidCurves"] = o.ECCValidCurves
	}
	if !isNil(o.AllowKeyReuse) {
		toSerialize["AllowKeyReuse"] = o.AllowKeyReuse
	}
	if !isNil(o.AllowWildcards) {
		toSerialize["AllowWildcards"] = o.AllowWildcards
	}
	if !isNil(o.RFCEnforcement) {
		toSerialize["RFCEnforcement"] = o.RFCEnforcement
	}
	return toSerialize, nil
}

type NullableModelsTemplateRetrievalResponseTemplatePolicyModel struct {
	value *ModelsTemplateRetrievalResponseTemplatePolicyModel
	isSet bool
}

func (v NullableModelsTemplateRetrievalResponseTemplatePolicyModel) Get() *ModelsTemplateRetrievalResponseTemplatePolicyModel {
	return v.value
}

func (v *NullableModelsTemplateRetrievalResponseTemplatePolicyModel) Set(val *ModelsTemplateRetrievalResponseTemplatePolicyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTemplateRetrievalResponseTemplatePolicyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTemplateRetrievalResponseTemplatePolicyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTemplateRetrievalResponseTemplatePolicyModel(val *ModelsTemplateRetrievalResponseTemplatePolicyModel) *NullableModelsTemplateRetrievalResponseTemplatePolicyModel {
	return &NullableModelsTemplateRetrievalResponseTemplatePolicyModel{value: val, isSet: true}
}

func (v NullableModelsTemplateRetrievalResponseTemplatePolicyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTemplateRetrievalResponseTemplatePolicyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


