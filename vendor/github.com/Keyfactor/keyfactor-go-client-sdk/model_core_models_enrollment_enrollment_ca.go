/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the CoreModelsEnrollmentEnrollmentCA type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CoreModelsEnrollmentEnrollmentCA{}

// CoreModelsEnrollmentEnrollmentCA struct for CoreModelsEnrollmentEnrollmentCA
type CoreModelsEnrollmentEnrollmentCA struct {
	Name *string `json:"Name,omitempty"`
	RFCEnforcement *bool `json:"RFCEnforcement,omitempty"`
	SubscriberTerms *bool `json:"SubscriberTerms,omitempty"`
}

// NewCoreModelsEnrollmentEnrollmentCA instantiates a new CoreModelsEnrollmentEnrollmentCA object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCoreModelsEnrollmentEnrollmentCA() *CoreModelsEnrollmentEnrollmentCA {
	this := CoreModelsEnrollmentEnrollmentCA{}
	return &this
}

// NewCoreModelsEnrollmentEnrollmentCAWithDefaults instantiates a new CoreModelsEnrollmentEnrollmentCA object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCoreModelsEnrollmentEnrollmentCAWithDefaults() *CoreModelsEnrollmentEnrollmentCA {
	this := CoreModelsEnrollmentEnrollmentCA{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CoreModelsEnrollmentEnrollmentCA) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreModelsEnrollmentEnrollmentCA) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CoreModelsEnrollmentEnrollmentCA) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CoreModelsEnrollmentEnrollmentCA) SetName(v string) {
	o.Name = &v
}

// GetRFCEnforcement returns the RFCEnforcement field value if set, zero value otherwise.
func (o *CoreModelsEnrollmentEnrollmentCA) GetRFCEnforcement() bool {
	if o == nil || isNil(o.RFCEnforcement) {
		var ret bool
		return ret
	}
	return *o.RFCEnforcement
}

// GetRFCEnforcementOk returns a tuple with the RFCEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreModelsEnrollmentEnrollmentCA) GetRFCEnforcementOk() (*bool, bool) {
	if o == nil || isNil(o.RFCEnforcement) {
		return nil, false
	}
	return o.RFCEnforcement, true
}

// HasRFCEnforcement returns a boolean if a field has been set.
func (o *CoreModelsEnrollmentEnrollmentCA) HasRFCEnforcement() bool {
	if o != nil && !isNil(o.RFCEnforcement) {
		return true
	}

	return false
}

// SetRFCEnforcement gets a reference to the given bool and assigns it to the RFCEnforcement field.
func (o *CoreModelsEnrollmentEnrollmentCA) SetRFCEnforcement(v bool) {
	o.RFCEnforcement = &v
}

// GetSubscriberTerms returns the SubscriberTerms field value if set, zero value otherwise.
func (o *CoreModelsEnrollmentEnrollmentCA) GetSubscriberTerms() bool {
	if o == nil || isNil(o.SubscriberTerms) {
		var ret bool
		return ret
	}
	return *o.SubscriberTerms
}

// GetSubscriberTermsOk returns a tuple with the SubscriberTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CoreModelsEnrollmentEnrollmentCA) GetSubscriberTermsOk() (*bool, bool) {
	if o == nil || isNil(o.SubscriberTerms) {
		return nil, false
	}
	return o.SubscriberTerms, true
}

// HasSubscriberTerms returns a boolean if a field has been set.
func (o *CoreModelsEnrollmentEnrollmentCA) HasSubscriberTerms() bool {
	if o != nil && !isNil(o.SubscriberTerms) {
		return true
	}

	return false
}

// SetSubscriberTerms gets a reference to the given bool and assigns it to the SubscriberTerms field.
func (o *CoreModelsEnrollmentEnrollmentCA) SetSubscriberTerms(v bool) {
	o.SubscriberTerms = &v
}

func (o CoreModelsEnrollmentEnrollmentCA) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CoreModelsEnrollmentEnrollmentCA) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.RFCEnforcement) {
		toSerialize["RFCEnforcement"] = o.RFCEnforcement
	}
	if !isNil(o.SubscriberTerms) {
		toSerialize["SubscriberTerms"] = o.SubscriberTerms
	}
	return toSerialize, nil
}

type NullableCoreModelsEnrollmentEnrollmentCA struct {
	value *CoreModelsEnrollmentEnrollmentCA
	isSet bool
}

func (v NullableCoreModelsEnrollmentEnrollmentCA) Get() *CoreModelsEnrollmentEnrollmentCA {
	return v.value
}

func (v *NullableCoreModelsEnrollmentEnrollmentCA) Set(val *CoreModelsEnrollmentEnrollmentCA) {
	v.value = val
	v.isSet = true
}

func (v NullableCoreModelsEnrollmentEnrollmentCA) IsSet() bool {
	return v.isSet
}

func (v *NullableCoreModelsEnrollmentEnrollmentCA) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCoreModelsEnrollmentEnrollmentCA(val *CoreModelsEnrollmentEnrollmentCA) *NullableCoreModelsEnrollmentEnrollmentCA {
	return &NullableCoreModelsEnrollmentEnrollmentCA{value: val, isSet: true}
}

func (v NullableCoreModelsEnrollmentEnrollmentCA) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCoreModelsEnrollmentEnrollmentCA) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


