/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsRevocationSuspendedRevocationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsRevocationSuspendedRevocationResponse{}

// ModelsRevocationSuspendedRevocationResponse struct for ModelsRevocationSuspendedRevocationResponse
type ModelsRevocationSuspendedRevocationResponse struct {
	CertId *int32 `json:"CertId,omitempty"`
	WorkflowId *string `json:"WorkflowId,omitempty"`
	Message *string `json:"Message,omitempty"`
}

// NewModelsRevocationSuspendedRevocationResponse instantiates a new ModelsRevocationSuspendedRevocationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsRevocationSuspendedRevocationResponse() *ModelsRevocationSuspendedRevocationResponse {
	this := ModelsRevocationSuspendedRevocationResponse{}
	return &this
}

// NewModelsRevocationSuspendedRevocationResponseWithDefaults instantiates a new ModelsRevocationSuspendedRevocationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsRevocationSuspendedRevocationResponseWithDefaults() *ModelsRevocationSuspendedRevocationResponse {
	this := ModelsRevocationSuspendedRevocationResponse{}
	return &this
}

// GetCertId returns the CertId field value if set, zero value otherwise.
func (o *ModelsRevocationSuspendedRevocationResponse) GetCertId() int32 {
	if o == nil || isNil(o.CertId) {
		var ret int32
		return ret
	}
	return *o.CertId
}

// GetCertIdOk returns a tuple with the CertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRevocationSuspendedRevocationResponse) GetCertIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertId) {
		return nil, false
	}
	return o.CertId, true
}

// HasCertId returns a boolean if a field has been set.
func (o *ModelsRevocationSuspendedRevocationResponse) HasCertId() bool {
	if o != nil && !isNil(o.CertId) {
		return true
	}

	return false
}

// SetCertId gets a reference to the given int32 and assigns it to the CertId field.
func (o *ModelsRevocationSuspendedRevocationResponse) SetCertId(v int32) {
	o.CertId = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *ModelsRevocationSuspendedRevocationResponse) GetWorkflowId() string {
	if o == nil || isNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRevocationSuspendedRevocationResponse) GetWorkflowIdOk() (*string, bool) {
	if o == nil || isNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *ModelsRevocationSuspendedRevocationResponse) HasWorkflowId() bool {
	if o != nil && !isNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *ModelsRevocationSuspendedRevocationResponse) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModelsRevocationSuspendedRevocationResponse) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRevocationSuspendedRevocationResponse) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelsRevocationSuspendedRevocationResponse) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModelsRevocationSuspendedRevocationResponse) SetMessage(v string) {
	o.Message = &v
}

func (o ModelsRevocationSuspendedRevocationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsRevocationSuspendedRevocationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertId) {
		toSerialize["CertId"] = o.CertId
	}
	if !isNil(o.WorkflowId) {
		toSerialize["WorkflowId"] = o.WorkflowId
	}
	if !isNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	return toSerialize, nil
}

type NullableModelsRevocationSuspendedRevocationResponse struct {
	value *ModelsRevocationSuspendedRevocationResponse
	isSet bool
}

func (v NullableModelsRevocationSuspendedRevocationResponse) Get() *ModelsRevocationSuspendedRevocationResponse {
	return v.value
}

func (v *NullableModelsRevocationSuspendedRevocationResponse) Set(val *ModelsRevocationSuspendedRevocationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsRevocationSuspendedRevocationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsRevocationSuspendedRevocationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsRevocationSuspendedRevocationResponse(val *ModelsRevocationSuspendedRevocationResponse) *NullableModelsRevocationSuspendedRevocationResponse {
	return &NullableModelsRevocationSuspendedRevocationResponse{value: val, isSet: true}
}

func (v NullableModelsRevocationSuspendedRevocationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsRevocationSuspendedRevocationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


