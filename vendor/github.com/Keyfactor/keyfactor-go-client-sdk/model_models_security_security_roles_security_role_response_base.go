/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSecuritySecurityRolesSecurityRoleResponseBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSecuritySecurityRolesSecurityRoleResponseBase{}

// ModelsSecuritySecurityRolesSecurityRoleResponseBase struct for ModelsSecuritySecurityRolesSecurityRoleResponseBase
type ModelsSecuritySecurityRolesSecurityRoleResponseBase struct {
	// The name of the created role
	Name *string `json:"Name,omitempty"`
	// The permissions included in the created security role
	Permissions []string `json:"Permissions,omitempty"`
}

// NewModelsSecuritySecurityRolesSecurityRoleResponseBase instantiates a new ModelsSecuritySecurityRolesSecurityRoleResponseBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSecuritySecurityRolesSecurityRoleResponseBase() *ModelsSecuritySecurityRolesSecurityRoleResponseBase {
	this := ModelsSecuritySecurityRolesSecurityRoleResponseBase{}
	return &this
}

// NewModelsSecuritySecurityRolesSecurityRoleResponseBaseWithDefaults instantiates a new ModelsSecuritySecurityRolesSecurityRoleResponseBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSecuritySecurityRolesSecurityRoleResponseBaseWithDefaults() *ModelsSecuritySecurityRolesSecurityRoleResponseBase {
	this := ModelsSecuritySecurityRolesSecurityRoleResponseBase{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) GetPermissions() []string {
	if o == nil || isNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) GetPermissionsOk() ([]string, bool) {
	if o == nil || isNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) HasPermissions() bool {
	if o != nil && !isNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *ModelsSecuritySecurityRolesSecurityRoleResponseBase) SetPermissions(v []string) {
	o.Permissions = v
}

func (o ModelsSecuritySecurityRolesSecurityRoleResponseBase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSecuritySecurityRolesSecurityRoleResponseBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.Permissions) {
		toSerialize["Permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableModelsSecuritySecurityRolesSecurityRoleResponseBase struct {
	value *ModelsSecuritySecurityRolesSecurityRoleResponseBase
	isSet bool
}

func (v NullableModelsSecuritySecurityRolesSecurityRoleResponseBase) Get() *ModelsSecuritySecurityRolesSecurityRoleResponseBase {
	return v.value
}

func (v *NullableModelsSecuritySecurityRolesSecurityRoleResponseBase) Set(val *ModelsSecuritySecurityRolesSecurityRoleResponseBase) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSecuritySecurityRolesSecurityRoleResponseBase) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSecuritySecurityRolesSecurityRoleResponseBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSecuritySecurityRolesSecurityRoleResponseBase(val *ModelsSecuritySecurityRolesSecurityRoleResponseBase) *NullableModelsSecuritySecurityRolesSecurityRoleResponseBase {
	return &NullableModelsSecuritySecurityRolesSecurityRoleResponseBase{value: val, isSet: true}
}

func (v NullableModelsSecuritySecurityRolesSecurityRoleResponseBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSecuritySecurityRolesSecurityRoleResponseBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


