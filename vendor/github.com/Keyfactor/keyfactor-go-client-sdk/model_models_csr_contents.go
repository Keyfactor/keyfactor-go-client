/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCSRContents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCSRContents{}

// ModelsCSRContents struct for ModelsCSRContents
type ModelsCSRContents struct {
	CSR string `json:"CSR"`
}

// NewModelsCSRContents instantiates a new ModelsCSRContents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCSRContents(cSR string) *ModelsCSRContents {
	this := ModelsCSRContents{}
	this.CSR = cSR
	return &this
}

// NewModelsCSRContentsWithDefaults instantiates a new ModelsCSRContents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCSRContentsWithDefaults() *ModelsCSRContents {
	this := ModelsCSRContents{}
	return &this
}

// GetCSR returns the CSR field value
func (o *ModelsCSRContents) GetCSR() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CSR
}

// GetCSROk returns a tuple with the CSR field value
// and a boolean to check if the value has been set.
func (o *ModelsCSRContents) GetCSROk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CSR, true
}

// SetCSR sets field value
func (o *ModelsCSRContents) SetCSR(v string) {
	o.CSR = v
}

func (o ModelsCSRContents) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCSRContents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CSR"] = o.CSR
	return toSerialize, nil
}

type NullableModelsCSRContents struct {
	value *ModelsCSRContents
	isSet bool
}

func (v NullableModelsCSRContents) Get() *ModelsCSRContents {
	return v.value
}

func (v *NullableModelsCSRContents) Set(val *ModelsCSRContents) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCSRContents) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCSRContents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCSRContents(val *ModelsCSRContents) *NullableModelsCSRContents {
	return &NullableModelsCSRContents{value: val, isSet: true}
}

func (v NullableModelsCSRContents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCSRContents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


