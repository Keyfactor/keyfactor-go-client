/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsSSLEndpointHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSLEndpointHistoryResponse{}

// ModelsSSLEndpointHistoryResponse struct for ModelsSSLEndpointHistoryResponse
type ModelsSSLEndpointHistoryResponse struct {
	HistoryId *string `json:"HistoryId,omitempty"`
	EndpointId *string `json:"EndpointId,omitempty"`
	AuditId *int64 `json:"AuditId,omitempty"`
	Timestamp *time.Time `json:"Timestamp,omitempty"`
	Status *int32 `json:"Status,omitempty"`
	JobType *int32 `json:"JobType,omitempty"`
	ProbeType *int32 `json:"ProbeType,omitempty"`
	ReverseDNS *string `json:"ReverseDNS,omitempty"`
	HistoryCertificates []ModelsSSLEndpointHistoryResponseCertificateModel `json:"HistoryCertificates,omitempty"`
}

// NewModelsSSLEndpointHistoryResponse instantiates a new ModelsSSLEndpointHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSLEndpointHistoryResponse() *ModelsSSLEndpointHistoryResponse {
	this := ModelsSSLEndpointHistoryResponse{}
	return &this
}

// NewModelsSSLEndpointHistoryResponseWithDefaults instantiates a new ModelsSSLEndpointHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSLEndpointHistoryResponseWithDefaults() *ModelsSSLEndpointHistoryResponse {
	this := ModelsSSLEndpointHistoryResponse{}
	return &this
}

// GetHistoryId returns the HistoryId field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetHistoryId() string {
	if o == nil || isNil(o.HistoryId) {
		var ret string
		return ret
	}
	return *o.HistoryId
}

// GetHistoryIdOk returns a tuple with the HistoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetHistoryIdOk() (*string, bool) {
	if o == nil || isNil(o.HistoryId) {
		return nil, false
	}
	return o.HistoryId, true
}

// HasHistoryId returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasHistoryId() bool {
	if o != nil && !isNil(o.HistoryId) {
		return true
	}

	return false
}

// SetHistoryId gets a reference to the given string and assigns it to the HistoryId field.
func (o *ModelsSSLEndpointHistoryResponse) SetHistoryId(v string) {
	o.HistoryId = &v
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetEndpointId() string {
	if o == nil || isNil(o.EndpointId) {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetEndpointIdOk() (*string, bool) {
	if o == nil || isNil(o.EndpointId) {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasEndpointId() bool {
	if o != nil && !isNil(o.EndpointId) {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *ModelsSSLEndpointHistoryResponse) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetAuditId returns the AuditId field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetAuditId() int64 {
	if o == nil || isNil(o.AuditId) {
		var ret int64
		return ret
	}
	return *o.AuditId
}

// GetAuditIdOk returns a tuple with the AuditId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetAuditIdOk() (*int64, bool) {
	if o == nil || isNil(o.AuditId) {
		return nil, false
	}
	return o.AuditId, true
}

// HasAuditId returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasAuditId() bool {
	if o != nil && !isNil(o.AuditId) {
		return true
	}

	return false
}

// SetAuditId gets a reference to the given int64 and assigns it to the AuditId field.
func (o *ModelsSSLEndpointHistoryResponse) SetAuditId(v int64) {
	o.AuditId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetTimestamp() time.Time {
	if o == nil || isNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ModelsSSLEndpointHistoryResponse) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetStatus() int32 {
	if o == nil || isNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetStatusOk() (*int32, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *ModelsSSLEndpointHistoryResponse) SetStatus(v int32) {
	o.Status = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetJobType() int32 {
	if o == nil || isNil(o.JobType) {
		var ret int32
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetJobTypeOk() (*int32, bool) {
	if o == nil || isNil(o.JobType) {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasJobType() bool {
	if o != nil && !isNil(o.JobType) {
		return true
	}

	return false
}

// SetJobType gets a reference to the given int32 and assigns it to the JobType field.
func (o *ModelsSSLEndpointHistoryResponse) SetJobType(v int32) {
	o.JobType = &v
}

// GetProbeType returns the ProbeType field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetProbeType() int32 {
	if o == nil || isNil(o.ProbeType) {
		var ret int32
		return ret
	}
	return *o.ProbeType
}

// GetProbeTypeOk returns a tuple with the ProbeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetProbeTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ProbeType) {
		return nil, false
	}
	return o.ProbeType, true
}

// HasProbeType returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasProbeType() bool {
	if o != nil && !isNil(o.ProbeType) {
		return true
	}

	return false
}

// SetProbeType gets a reference to the given int32 and assigns it to the ProbeType field.
func (o *ModelsSSLEndpointHistoryResponse) SetProbeType(v int32) {
	o.ProbeType = &v
}

// GetReverseDNS returns the ReverseDNS field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetReverseDNS() string {
	if o == nil || isNil(o.ReverseDNS) {
		var ret string
		return ret
	}
	return *o.ReverseDNS
}

// GetReverseDNSOk returns a tuple with the ReverseDNS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetReverseDNSOk() (*string, bool) {
	if o == nil || isNil(o.ReverseDNS) {
		return nil, false
	}
	return o.ReverseDNS, true
}

// HasReverseDNS returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasReverseDNS() bool {
	if o != nil && !isNil(o.ReverseDNS) {
		return true
	}

	return false
}

// SetReverseDNS gets a reference to the given string and assigns it to the ReverseDNS field.
func (o *ModelsSSLEndpointHistoryResponse) SetReverseDNS(v string) {
	o.ReverseDNS = &v
}

// GetHistoryCertificates returns the HistoryCertificates field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponse) GetHistoryCertificates() []ModelsSSLEndpointHistoryResponseCertificateModel {
	if o == nil || isNil(o.HistoryCertificates) {
		var ret []ModelsSSLEndpointHistoryResponseCertificateModel
		return ret
	}
	return o.HistoryCertificates
}

// GetHistoryCertificatesOk returns a tuple with the HistoryCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponse) GetHistoryCertificatesOk() ([]ModelsSSLEndpointHistoryResponseCertificateModel, bool) {
	if o == nil || isNil(o.HistoryCertificates) {
		return nil, false
	}
	return o.HistoryCertificates, true
}

// HasHistoryCertificates returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponse) HasHistoryCertificates() bool {
	if o != nil && !isNil(o.HistoryCertificates) {
		return true
	}

	return false
}

// SetHistoryCertificates gets a reference to the given []ModelsSSLEndpointHistoryResponseCertificateModel and assigns it to the HistoryCertificates field.
func (o *ModelsSSLEndpointHistoryResponse) SetHistoryCertificates(v []ModelsSSLEndpointHistoryResponseCertificateModel) {
	o.HistoryCertificates = v
}

func (o ModelsSSLEndpointHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSLEndpointHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HistoryId) {
		toSerialize["HistoryId"] = o.HistoryId
	}
	if !isNil(o.EndpointId) {
		toSerialize["EndpointId"] = o.EndpointId
	}
	if !isNil(o.AuditId) {
		toSerialize["AuditId"] = o.AuditId
	}
	if !isNil(o.Timestamp) {
		toSerialize["Timestamp"] = o.Timestamp
	}
	if !isNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !isNil(o.JobType) {
		toSerialize["JobType"] = o.JobType
	}
	if !isNil(o.ProbeType) {
		toSerialize["ProbeType"] = o.ProbeType
	}
	if !isNil(o.ReverseDNS) {
		toSerialize["ReverseDNS"] = o.ReverseDNS
	}
	if !isNil(o.HistoryCertificates) {
		toSerialize["HistoryCertificates"] = o.HistoryCertificates
	}
	return toSerialize, nil
}

type NullableModelsSSLEndpointHistoryResponse struct {
	value *ModelsSSLEndpointHistoryResponse
	isSet bool
}

func (v NullableModelsSSLEndpointHistoryResponse) Get() *ModelsSSLEndpointHistoryResponse {
	return v.value
}

func (v *NullableModelsSSLEndpointHistoryResponse) Set(val *ModelsSSLEndpointHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSLEndpointHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSLEndpointHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSLEndpointHistoryResponse(val *ModelsSSLEndpointHistoryResponse) *NullableModelsSSLEndpointHistoryResponse {
	return &NullableModelsSSLEndpointHistoryResponse{value: val, isSet: true}
}

func (v NullableModelsSSLEndpointHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSLEndpointHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


