/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsMonitoringDashboardResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsMonitoringDashboardResponse{}

// KeyfactorApiModelsMonitoringDashboardResponse struct for KeyfactorApiModelsMonitoringDashboardResponse
type KeyfactorApiModelsMonitoringDashboardResponse struct {
	Show *bool `json:"Show,omitempty"`
	WarningHours *int32 `json:"WarningHours,omitempty"`
}

// NewKeyfactorApiModelsMonitoringDashboardResponse instantiates a new KeyfactorApiModelsMonitoringDashboardResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsMonitoringDashboardResponse() *KeyfactorApiModelsMonitoringDashboardResponse {
	this := KeyfactorApiModelsMonitoringDashboardResponse{}
	return &this
}

// NewKeyfactorApiModelsMonitoringDashboardResponseWithDefaults instantiates a new KeyfactorApiModelsMonitoringDashboardResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsMonitoringDashboardResponseWithDefaults() *KeyfactorApiModelsMonitoringDashboardResponse {
	this := KeyfactorApiModelsMonitoringDashboardResponse{}
	return &this
}

// GetShow returns the Show field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) GetShow() bool {
	if o == nil || isNil(o.Show) {
		var ret bool
		return ret
	}
	return *o.Show
}

// GetShowOk returns a tuple with the Show field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) GetShowOk() (*bool, bool) {
	if o == nil || isNil(o.Show) {
		return nil, false
	}
	return o.Show, true
}

// HasShow returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) HasShow() bool {
	if o != nil && !isNil(o.Show) {
		return true
	}

	return false
}

// SetShow gets a reference to the given bool and assigns it to the Show field.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) SetShow(v bool) {
	o.Show = &v
}

// GetWarningHours returns the WarningHours field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) GetWarningHours() int32 {
	if o == nil || isNil(o.WarningHours) {
		var ret int32
		return ret
	}
	return *o.WarningHours
}

// GetWarningHoursOk returns a tuple with the WarningHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) GetWarningHoursOk() (*int32, bool) {
	if o == nil || isNil(o.WarningHours) {
		return nil, false
	}
	return o.WarningHours, true
}

// HasWarningHours returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) HasWarningHours() bool {
	if o != nil && !isNil(o.WarningHours) {
		return true
	}

	return false
}

// SetWarningHours gets a reference to the given int32 and assigns it to the WarningHours field.
func (o *KeyfactorApiModelsMonitoringDashboardResponse) SetWarningHours(v int32) {
	o.WarningHours = &v
}

func (o KeyfactorApiModelsMonitoringDashboardResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsMonitoringDashboardResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Show) {
		toSerialize["Show"] = o.Show
	}
	if !isNil(o.WarningHours) {
		toSerialize["WarningHours"] = o.WarningHours
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsMonitoringDashboardResponse struct {
	value *KeyfactorApiModelsMonitoringDashboardResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsMonitoringDashboardResponse) Get() *KeyfactorApiModelsMonitoringDashboardResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsMonitoringDashboardResponse) Set(val *KeyfactorApiModelsMonitoringDashboardResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsMonitoringDashboardResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsMonitoringDashboardResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsMonitoringDashboardResponse(val *KeyfactorApiModelsMonitoringDashboardResponse) *NullableKeyfactorApiModelsMonitoringDashboardResponse {
	return &NullableKeyfactorApiModelsMonitoringDashboardResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsMonitoringDashboardResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsMonitoringDashboardResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


