/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsTemplateRetrievalResponseTemplateDefaultModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTemplateRetrievalResponseTemplateDefaultModel{}

// ModelsTemplateRetrievalResponseTemplateDefaultModel struct for ModelsTemplateRetrievalResponseTemplateDefaultModel
type ModelsTemplateRetrievalResponseTemplateDefaultModel struct {
	SubjectPart *string `json:"SubjectPart,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// NewModelsTemplateRetrievalResponseTemplateDefaultModel instantiates a new ModelsTemplateRetrievalResponseTemplateDefaultModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTemplateRetrievalResponseTemplateDefaultModel() *ModelsTemplateRetrievalResponseTemplateDefaultModel {
	this := ModelsTemplateRetrievalResponseTemplateDefaultModel{}
	return &this
}

// NewModelsTemplateRetrievalResponseTemplateDefaultModelWithDefaults instantiates a new ModelsTemplateRetrievalResponseTemplateDefaultModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTemplateRetrievalResponseTemplateDefaultModelWithDefaults() *ModelsTemplateRetrievalResponseTemplateDefaultModel {
	this := ModelsTemplateRetrievalResponseTemplateDefaultModel{}
	return &this
}

// GetSubjectPart returns the SubjectPart field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) GetSubjectPart() string {
	if o == nil || isNil(o.SubjectPart) {
		var ret string
		return ret
	}
	return *o.SubjectPart
}

// GetSubjectPartOk returns a tuple with the SubjectPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) GetSubjectPartOk() (*string, bool) {
	if o == nil || isNil(o.SubjectPart) {
		return nil, false
	}
	return o.SubjectPart, true
}

// HasSubjectPart returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) HasSubjectPart() bool {
	if o != nil && !isNil(o.SubjectPart) {
		return true
	}

	return false
}

// SetSubjectPart gets a reference to the given string and assigns it to the SubjectPart field.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) SetSubjectPart(v string) {
	o.SubjectPart = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ModelsTemplateRetrievalResponseTemplateDefaultModel) SetValue(v string) {
	o.Value = &v
}

func (o ModelsTemplateRetrievalResponseTemplateDefaultModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTemplateRetrievalResponseTemplateDefaultModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SubjectPart) {
		toSerialize["SubjectPart"] = o.SubjectPart
	}
	if !isNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	return toSerialize, nil
}

type NullableModelsTemplateRetrievalResponseTemplateDefaultModel struct {
	value *ModelsTemplateRetrievalResponseTemplateDefaultModel
	isSet bool
}

func (v NullableModelsTemplateRetrievalResponseTemplateDefaultModel) Get() *ModelsTemplateRetrievalResponseTemplateDefaultModel {
	return v.value
}

func (v *NullableModelsTemplateRetrievalResponseTemplateDefaultModel) Set(val *ModelsTemplateRetrievalResponseTemplateDefaultModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTemplateRetrievalResponseTemplateDefaultModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTemplateRetrievalResponseTemplateDefaultModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTemplateRetrievalResponseTemplateDefaultModel(val *ModelsTemplateRetrievalResponseTemplateDefaultModel) *NullableModelsTemplateRetrievalResponseTemplateDefaultModel {
	return &NullableModelsTemplateRetrievalResponseTemplateDefaultModel{value: val, isSet: true}
}

func (v NullableModelsTemplateRetrievalResponseTemplateDefaultModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTemplateRetrievalResponseTemplateDefaultModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


