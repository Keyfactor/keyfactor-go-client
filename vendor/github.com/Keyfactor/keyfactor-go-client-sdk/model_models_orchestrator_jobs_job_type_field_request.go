/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsOrchestratorJobsJobTypeFieldRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsOrchestratorJobsJobTypeFieldRequest{}

// ModelsOrchestratorJobsJobTypeFieldRequest struct for ModelsOrchestratorJobsJobTypeFieldRequest
type ModelsOrchestratorJobsJobTypeFieldRequest struct {
	Name string `json:"Name"`
	Type int32 `json:"Type"`
	DefaultValue *string `json:"DefaultValue,omitempty"`
	Required *bool `json:"Required,omitempty"`
}

// NewModelsOrchestratorJobsJobTypeFieldRequest instantiates a new ModelsOrchestratorJobsJobTypeFieldRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsOrchestratorJobsJobTypeFieldRequest(name string, type_ int32) *ModelsOrchestratorJobsJobTypeFieldRequest {
	this := ModelsOrchestratorJobsJobTypeFieldRequest{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewModelsOrchestratorJobsJobTypeFieldRequestWithDefaults instantiates a new ModelsOrchestratorJobsJobTypeFieldRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsOrchestratorJobsJobTypeFieldRequestWithDefaults() *ModelsOrchestratorJobsJobTypeFieldRequest {
	this := ModelsOrchestratorJobsJobTypeFieldRequest{}
	return &this
}

// GetName returns the Name field value
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) SetType(v int32) {
	o.Type = v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetDefaultValue() string {
	if o == nil || isNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetDefaultValueOk() (*string, bool) {
	if o == nil || isNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) HasDefaultValue() bool {
	if o != nil && !isNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetRequired() bool {
	if o == nil || isNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) GetRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) HasRequired() bool {
	if o != nil && !isNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *ModelsOrchestratorJobsJobTypeFieldRequest) SetRequired(v bool) {
	o.Required = &v
}

func (o ModelsOrchestratorJobsJobTypeFieldRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsOrchestratorJobsJobTypeFieldRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Name"] = o.Name
	toSerialize["Type"] = o.Type
	if !isNil(o.DefaultValue) {
		toSerialize["DefaultValue"] = o.DefaultValue
	}
	if !isNil(o.Required) {
		toSerialize["Required"] = o.Required
	}
	return toSerialize, nil
}

type NullableModelsOrchestratorJobsJobTypeFieldRequest struct {
	value *ModelsOrchestratorJobsJobTypeFieldRequest
	isSet bool
}

func (v NullableModelsOrchestratorJobsJobTypeFieldRequest) Get() *ModelsOrchestratorJobsJobTypeFieldRequest {
	return v.value
}

func (v *NullableModelsOrchestratorJobsJobTypeFieldRequest) Set(val *ModelsOrchestratorJobsJobTypeFieldRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsOrchestratorJobsJobTypeFieldRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsOrchestratorJobsJobTypeFieldRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsOrchestratorJobsJobTypeFieldRequest(val *ModelsOrchestratorJobsJobTypeFieldRequest) *NullableModelsOrchestratorJobsJobTypeFieldRequest {
	return &NullableModelsOrchestratorJobsJobTypeFieldRequest{value: val, isSet: true}
}

func (v NullableModelsOrchestratorJobsJobTypeFieldRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsOrchestratorJobsJobTypeFieldRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


