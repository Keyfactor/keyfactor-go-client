/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateStore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateStore{}

// ModelsCertificateStore struct for ModelsCertificateStore
type ModelsCertificateStore struct {
	Id *string `json:"Id,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	ContainerId *int32 `json:"ContainerId,omitempty"`
	ClientMachine *string `json:"ClientMachine,omitempty"`
	Storepath *string `json:"Storepath,omitempty"`
	CertStoreInventoryJobId *string `json:"CertStoreInventoryJobId,omitempty"`
	CertStoreType *int32 `json:"CertStoreType,omitempty"`
	Approved *bool `json:"Approved,omitempty"`
	CreateIfMissing *bool `json:"CreateIfMissing,omitempty"`
	Properties *string `json:"Properties,omitempty"`
	AgentId *string `json:"AgentId,omitempty"`
	AgentAssigned *bool `json:"AgentAssigned,omitempty"`
	ContainerName *string `json:"ContainerName,omitempty"`
	InventorySchedule *KeyfactorCommonSchedulingKeyfactorSchedule `json:"InventorySchedule,omitempty"`
	ReenrollmentStatus *ModelsReenrollmentStatus `json:"ReenrollmentStatus,omitempty"`
	SetNewPasswordAllowed *bool `json:"SetNewPasswordAllowed,omitempty"`
	Password *string `json:"Password,omitempty"`
}

// NewModelsCertificateStore instantiates a new ModelsCertificateStore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateStore() *ModelsCertificateStore {
	this := ModelsCertificateStore{}
	return &this
}

// NewModelsCertificateStoreWithDefaults instantiates a new ModelsCertificateStore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateStoreWithDefaults() *ModelsCertificateStore {
	this := ModelsCertificateStore{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsCertificateStore) SetId(v string) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelsCertificateStore) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetContainerId() int32 {
	if o == nil || isNil(o.ContainerId) {
		var ret int32
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetContainerIdOk() (*int32, bool) {
	if o == nil || isNil(o.ContainerId) {
		return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasContainerId() bool {
	if o != nil && !isNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given int32 and assigns it to the ContainerId field.
func (o *ModelsCertificateStore) SetContainerId(v int32) {
	o.ContainerId = &v
}

// GetClientMachine returns the ClientMachine field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetClientMachine() string {
	if o == nil || isNil(o.ClientMachine) {
		var ret string
		return ret
	}
	return *o.ClientMachine
}

// GetClientMachineOk returns a tuple with the ClientMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetClientMachineOk() (*string, bool) {
	if o == nil || isNil(o.ClientMachine) {
		return nil, false
	}
	return o.ClientMachine, true
}

// HasClientMachine returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasClientMachine() bool {
	if o != nil && !isNil(o.ClientMachine) {
		return true
	}

	return false
}

// SetClientMachine gets a reference to the given string and assigns it to the ClientMachine field.
func (o *ModelsCertificateStore) SetClientMachine(v string) {
	o.ClientMachine = &v
}

// GetStorepath returns the Storepath field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetStorepath() string {
	if o == nil || isNil(o.Storepath) {
		var ret string
		return ret
	}
	return *o.Storepath
}

// GetStorepathOk returns a tuple with the Storepath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetStorepathOk() (*string, bool) {
	if o == nil || isNil(o.Storepath) {
		return nil, false
	}
	return o.Storepath, true
}

// HasStorepath returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasStorepath() bool {
	if o != nil && !isNil(o.Storepath) {
		return true
	}

	return false
}

// SetStorepath gets a reference to the given string and assigns it to the Storepath field.
func (o *ModelsCertificateStore) SetStorepath(v string) {
	o.Storepath = &v
}

// GetCertStoreInventoryJobId returns the CertStoreInventoryJobId field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetCertStoreInventoryJobId() string {
	if o == nil || isNil(o.CertStoreInventoryJobId) {
		var ret string
		return ret
	}
	return *o.CertStoreInventoryJobId
}

// GetCertStoreInventoryJobIdOk returns a tuple with the CertStoreInventoryJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetCertStoreInventoryJobIdOk() (*string, bool) {
	if o == nil || isNil(o.CertStoreInventoryJobId) {
		return nil, false
	}
	return o.CertStoreInventoryJobId, true
}

// HasCertStoreInventoryJobId returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasCertStoreInventoryJobId() bool {
	if o != nil && !isNil(o.CertStoreInventoryJobId) {
		return true
	}

	return false
}

// SetCertStoreInventoryJobId gets a reference to the given string and assigns it to the CertStoreInventoryJobId field.
func (o *ModelsCertificateStore) SetCertStoreInventoryJobId(v string) {
	o.CertStoreInventoryJobId = &v
}

// GetCertStoreType returns the CertStoreType field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetCertStoreType() int32 {
	if o == nil || isNil(o.CertStoreType) {
		var ret int32
		return ret
	}
	return *o.CertStoreType
}

// GetCertStoreTypeOk returns a tuple with the CertStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetCertStoreTypeOk() (*int32, bool) {
	if o == nil || isNil(o.CertStoreType) {
		return nil, false
	}
	return o.CertStoreType, true
}

// HasCertStoreType returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasCertStoreType() bool {
	if o != nil && !isNil(o.CertStoreType) {
		return true
	}

	return false
}

// SetCertStoreType gets a reference to the given int32 and assigns it to the CertStoreType field.
func (o *ModelsCertificateStore) SetCertStoreType(v int32) {
	o.CertStoreType = &v
}

// GetApproved returns the Approved field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetApproved() bool {
	if o == nil || isNil(o.Approved) {
		var ret bool
		return ret
	}
	return *o.Approved
}

// GetApprovedOk returns a tuple with the Approved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetApprovedOk() (*bool, bool) {
	if o == nil || isNil(o.Approved) {
		return nil, false
	}
	return o.Approved, true
}

// HasApproved returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasApproved() bool {
	if o != nil && !isNil(o.Approved) {
		return true
	}

	return false
}

// SetApproved gets a reference to the given bool and assigns it to the Approved field.
func (o *ModelsCertificateStore) SetApproved(v bool) {
	o.Approved = &v
}

// GetCreateIfMissing returns the CreateIfMissing field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetCreateIfMissing() bool {
	if o == nil || isNil(o.CreateIfMissing) {
		var ret bool
		return ret
	}
	return *o.CreateIfMissing
}

// GetCreateIfMissingOk returns a tuple with the CreateIfMissing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetCreateIfMissingOk() (*bool, bool) {
	if o == nil || isNil(o.CreateIfMissing) {
		return nil, false
	}
	return o.CreateIfMissing, true
}

// HasCreateIfMissing returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasCreateIfMissing() bool {
	if o != nil && !isNil(o.CreateIfMissing) {
		return true
	}

	return false
}

// SetCreateIfMissing gets a reference to the given bool and assigns it to the CreateIfMissing field.
func (o *ModelsCertificateStore) SetCreateIfMissing(v bool) {
	o.CreateIfMissing = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetProperties() string {
	if o == nil || isNil(o.Properties) {
		var ret string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetPropertiesOk() (*string, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given string and assigns it to the Properties field.
func (o *ModelsCertificateStore) SetProperties(v string) {
	o.Properties = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetAgentId() string {
	if o == nil || isNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetAgentIdOk() (*string, bool) {
	if o == nil || isNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasAgentId() bool {
	if o != nil && !isNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *ModelsCertificateStore) SetAgentId(v string) {
	o.AgentId = &v
}

// GetAgentAssigned returns the AgentAssigned field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetAgentAssigned() bool {
	if o == nil || isNil(o.AgentAssigned) {
		var ret bool
		return ret
	}
	return *o.AgentAssigned
}

// GetAgentAssignedOk returns a tuple with the AgentAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetAgentAssignedOk() (*bool, bool) {
	if o == nil || isNil(o.AgentAssigned) {
		return nil, false
	}
	return o.AgentAssigned, true
}

// HasAgentAssigned returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasAgentAssigned() bool {
	if o != nil && !isNil(o.AgentAssigned) {
		return true
	}

	return false
}

// SetAgentAssigned gets a reference to the given bool and assigns it to the AgentAssigned field.
func (o *ModelsCertificateStore) SetAgentAssigned(v bool) {
	o.AgentAssigned = &v
}

// GetContainerName returns the ContainerName field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetContainerName() string {
	if o == nil || isNil(o.ContainerName) {
		var ret string
		return ret
	}
	return *o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetContainerNameOk() (*string, bool) {
	if o == nil || isNil(o.ContainerName) {
		return nil, false
	}
	return o.ContainerName, true
}

// HasContainerName returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasContainerName() bool {
	if o != nil && !isNil(o.ContainerName) {
		return true
	}

	return false
}

// SetContainerName gets a reference to the given string and assigns it to the ContainerName field.
func (o *ModelsCertificateStore) SetContainerName(v string) {
	o.ContainerName = &v
}

// GetInventorySchedule returns the InventorySchedule field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetInventorySchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.InventorySchedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.InventorySchedule
}

// GetInventoryScheduleOk returns a tuple with the InventorySchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetInventoryScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.InventorySchedule) {
		return nil, false
	}
	return o.InventorySchedule, true
}

// HasInventorySchedule returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasInventorySchedule() bool {
	if o != nil && !isNil(o.InventorySchedule) {
		return true
	}

	return false
}

// SetInventorySchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the InventorySchedule field.
func (o *ModelsCertificateStore) SetInventorySchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.InventorySchedule = &v
}

// GetReenrollmentStatus returns the ReenrollmentStatus field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetReenrollmentStatus() ModelsReenrollmentStatus {
	if o == nil || isNil(o.ReenrollmentStatus) {
		var ret ModelsReenrollmentStatus
		return ret
	}
	return *o.ReenrollmentStatus
}

// GetReenrollmentStatusOk returns a tuple with the ReenrollmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetReenrollmentStatusOk() (*ModelsReenrollmentStatus, bool) {
	if o == nil || isNil(o.ReenrollmentStatus) {
		return nil, false
	}
	return o.ReenrollmentStatus, true
}

// HasReenrollmentStatus returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasReenrollmentStatus() bool {
	if o != nil && !isNil(o.ReenrollmentStatus) {
		return true
	}

	return false
}

// SetReenrollmentStatus gets a reference to the given ModelsReenrollmentStatus and assigns it to the ReenrollmentStatus field.
func (o *ModelsCertificateStore) SetReenrollmentStatus(v ModelsReenrollmentStatus) {
	o.ReenrollmentStatus = &v
}

// GetSetNewPasswordAllowed returns the SetNewPasswordAllowed field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetSetNewPasswordAllowed() bool {
	if o == nil || isNil(o.SetNewPasswordAllowed) {
		var ret bool
		return ret
	}
	return *o.SetNewPasswordAllowed
}

// GetSetNewPasswordAllowedOk returns a tuple with the SetNewPasswordAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetSetNewPasswordAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.SetNewPasswordAllowed) {
		return nil, false
	}
	return o.SetNewPasswordAllowed, true
}

// HasSetNewPasswordAllowed returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasSetNewPasswordAllowed() bool {
	if o != nil && !isNil(o.SetNewPasswordAllowed) {
		return true
	}

	return false
}

// SetSetNewPasswordAllowed gets a reference to the given bool and assigns it to the SetNewPasswordAllowed field.
func (o *ModelsCertificateStore) SetSetNewPasswordAllowed(v bool) {
	o.SetNewPasswordAllowed = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModelsCertificateStore) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateStore) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModelsCertificateStore) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModelsCertificateStore) SetPassword(v string) {
	o.Password = &v
}

func (o ModelsCertificateStore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateStore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	// skip: DisplayName is readOnly
	if !isNil(o.ContainerId) {
		toSerialize["ContainerId"] = o.ContainerId
	}
	if !isNil(o.ClientMachine) {
		toSerialize["ClientMachine"] = o.ClientMachine
	}
	if !isNil(o.Storepath) {
		toSerialize["Storepath"] = o.Storepath
	}
	if !isNil(o.CertStoreInventoryJobId) {
		toSerialize["CertStoreInventoryJobId"] = o.CertStoreInventoryJobId
	}
	if !isNil(o.CertStoreType) {
		toSerialize["CertStoreType"] = o.CertStoreType
	}
	if !isNil(o.Approved) {
		toSerialize["Approved"] = o.Approved
	}
	if !isNil(o.CreateIfMissing) {
		toSerialize["CreateIfMissing"] = o.CreateIfMissing
	}
	if !isNil(o.Properties) {
		toSerialize["Properties"] = o.Properties
	}
	if !isNil(o.AgentId) {
		toSerialize["AgentId"] = o.AgentId
	}
	if !isNil(o.AgentAssigned) {
		toSerialize["AgentAssigned"] = o.AgentAssigned
	}
	if !isNil(o.ContainerName) {
		toSerialize["ContainerName"] = o.ContainerName
	}
	if !isNil(o.InventorySchedule) {
		toSerialize["InventorySchedule"] = o.InventorySchedule
	}
	if !isNil(o.ReenrollmentStatus) {
		toSerialize["ReenrollmentStatus"] = o.ReenrollmentStatus
	}
	if !isNil(o.SetNewPasswordAllowed) {
		toSerialize["SetNewPasswordAllowed"] = o.SetNewPasswordAllowed
	}
	if !isNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	return toSerialize, nil
}

type NullableModelsCertificateStore struct {
	value *ModelsCertificateStore
	isSet bool
}

func (v NullableModelsCertificateStore) Get() *ModelsCertificateStore {
	return v.value
}

func (v *NullableModelsCertificateStore) Set(val *ModelsCertificateStore) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateStore) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateStore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateStore(val *ModelsCertificateStore) *NullableModelsCertificateStore {
	return &NullableModelsCertificateStore{value: val, isSet: true}
}

func (v NullableModelsCertificateStore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateStore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


