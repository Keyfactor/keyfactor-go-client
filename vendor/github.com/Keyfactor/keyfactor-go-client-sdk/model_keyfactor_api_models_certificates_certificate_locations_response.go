/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsCertificatesCertificateLocationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsCertificatesCertificateLocationsResponse{}

// KeyfactorApiModelsCertificatesCertificateLocationsResponse struct for KeyfactorApiModelsCertificatesCertificateLocationsResponse
type KeyfactorApiModelsCertificatesCertificateLocationsResponse struct {
	Details []ModelsCertStoreLocationsCertificateLocationsGroup `json:"Details,omitempty"`
}

// NewKeyfactorApiModelsCertificatesCertificateLocationsResponse instantiates a new KeyfactorApiModelsCertificatesCertificateLocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsCertificatesCertificateLocationsResponse() *KeyfactorApiModelsCertificatesCertificateLocationsResponse {
	this := KeyfactorApiModelsCertificatesCertificateLocationsResponse{}
	return &this
}

// NewKeyfactorApiModelsCertificatesCertificateLocationsResponseWithDefaults instantiates a new KeyfactorApiModelsCertificatesCertificateLocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsCertificatesCertificateLocationsResponseWithDefaults() *KeyfactorApiModelsCertificatesCertificateLocationsResponse {
	this := KeyfactorApiModelsCertificatesCertificateLocationsResponse{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateLocationsResponse) GetDetails() []ModelsCertStoreLocationsCertificateLocationsGroup {
	if o == nil || isNil(o.Details) {
		var ret []ModelsCertStoreLocationsCertificateLocationsGroup
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateLocationsResponse) GetDetailsOk() ([]ModelsCertStoreLocationsCertificateLocationsGroup, bool) {
	if o == nil || isNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateLocationsResponse) HasDetails() bool {
	if o != nil && !isNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []ModelsCertStoreLocationsCertificateLocationsGroup and assigns it to the Details field.
func (o *KeyfactorApiModelsCertificatesCertificateLocationsResponse) SetDetails(v []ModelsCertStoreLocationsCertificateLocationsGroup) {
	o.Details = v
}

func (o KeyfactorApiModelsCertificatesCertificateLocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsCertificatesCertificateLocationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Details) {
		toSerialize["Details"] = o.Details
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse struct {
	value *KeyfactorApiModelsCertificatesCertificateLocationsResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse) Get() *KeyfactorApiModelsCertificatesCertificateLocationsResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse) Set(val *KeyfactorApiModelsCertificatesCertificateLocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsCertificatesCertificateLocationsResponse(val *KeyfactorApiModelsCertificatesCertificateLocationsResponse) *NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse {
	return &NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateLocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


