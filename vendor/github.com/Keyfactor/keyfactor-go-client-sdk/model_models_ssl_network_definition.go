/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSLNetworkDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSLNetworkDefinition{}

// ModelsSSLNetworkDefinition struct for ModelsSSLNetworkDefinition
type ModelsSSLNetworkDefinition struct {
	ItemType *int32 `json:"ItemType,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// NewModelsSSLNetworkDefinition instantiates a new ModelsSSLNetworkDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSLNetworkDefinition() *ModelsSSLNetworkDefinition {
	this := ModelsSSLNetworkDefinition{}
	return &this
}

// NewModelsSSLNetworkDefinitionWithDefaults instantiates a new ModelsSSLNetworkDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSLNetworkDefinitionWithDefaults() *ModelsSSLNetworkDefinition {
	this := ModelsSSLNetworkDefinition{}
	return &this
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *ModelsSSLNetworkDefinition) GetItemType() int32 {
	if o == nil || isNil(o.ItemType) {
		var ret int32
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLNetworkDefinition) GetItemTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ItemType) {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *ModelsSSLNetworkDefinition) HasItemType() bool {
	if o != nil && !isNil(o.ItemType) {
		return true
	}

	return false
}

// SetItemType gets a reference to the given int32 and assigns it to the ItemType field.
func (o *ModelsSSLNetworkDefinition) SetItemType(v int32) {
	o.ItemType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModelsSSLNetworkDefinition) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLNetworkDefinition) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModelsSSLNetworkDefinition) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ModelsSSLNetworkDefinition) SetValue(v string) {
	o.Value = &v
}

func (o ModelsSSLNetworkDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSLNetworkDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ItemType) {
		toSerialize["ItemType"] = o.ItemType
	}
	if !isNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	return toSerialize, nil
}

type NullableModelsSSLNetworkDefinition struct {
	value *ModelsSSLNetworkDefinition
	isSet bool
}

func (v NullableModelsSSLNetworkDefinition) Get() *ModelsSSLNetworkDefinition {
	return v.value
}

func (v *NullableModelsSSLNetworkDefinition) Set(val *ModelsSSLNetworkDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSLNetworkDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSLNetworkDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSLNetworkDefinition(val *ModelsSSLNetworkDefinition) *NullableModelsSSLNetworkDefinition {
	return &NullableModelsSSLNetworkDefinition{value: val, isSet: true}
}

func (v NullableModelsSSLNetworkDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSLNetworkDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


