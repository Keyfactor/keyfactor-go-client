/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateAuthoritiesCertificateAuthorityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateAuthoritiesCertificateAuthorityResponse{}

// ModelsCertificateAuthoritiesCertificateAuthorityResponse struct for ModelsCertificateAuthoritiesCertificateAuthorityResponse
type ModelsCertificateAuthoritiesCertificateAuthorityResponse struct {
	Id *int32 `json:"Id,omitempty"`
	LogicalName *string `json:"LogicalName,omitempty"`
	HostName *string `json:"HostName,omitempty"`
	Delegate *bool `json:"Delegate,omitempty"`
	DelegateEnrollment *bool `json:"DelegateEnrollment,omitempty"`
	ForestRoot *string `json:"ForestRoot,omitempty"`
	ConfigurationTenant *string `json:"ConfigurationTenant,omitempty"`
	Remote *bool `json:"Remote,omitempty"`
	Agent *string `json:"Agent,omitempty"`
	Standalone *bool `json:"Standalone,omitempty"`
	MonitorThresholds *bool `json:"MonitorThresholds,omitempty"`
	IssuanceMax *int32 `json:"IssuanceMax,omitempty"`
	IssuanceMin *int32 `json:"IssuanceMin,omitempty"`
	DenialMax *int32 `json:"DenialMax,omitempty"`
	FailureMax *int32 `json:"FailureMax,omitempty"`
	RFCEnforcement *bool `json:"RFCEnforcement,omitempty"`
	Properties *string `json:"Properties,omitempty"`
	AllowedEnrollmentTypes *int32 `json:"AllowedEnrollmentTypes,omitempty"`
	KeyRetention *int32 `json:"KeyRetention,omitempty"`
	KeyRetentionDays *int32 `json:"KeyRetentionDays,omitempty"`
	ExplicitCredentials *bool `json:"ExplicitCredentials,omitempty"`
	SubscriberTerms *bool `json:"SubscriberTerms,omitempty"`
	ExplicitUser *string `json:"ExplicitUser,omitempty"`
	ExplicitPassword *ModelsKeyfactorAPISecret `json:"ExplicitPassword,omitempty"`
	UseAllowedRequesters *bool `json:"UseAllowedRequesters,omitempty"`
	AllowedRequesters []string `json:"AllowedRequesters,omitempty"`
	FullScan *KeyfactorCommonSchedulingKeyfactorSchedule `json:"FullScan,omitempty"`
	IncrementalScan *KeyfactorCommonSchedulingKeyfactorSchedule `json:"IncrementalScan,omitempty"`
	ThresholdCheck *KeyfactorCommonSchedulingKeyfactorSchedule `json:"ThresholdCheck,omitempty"`
	CAType *int32 `json:"CAType,omitempty"`
	AuthCertificate *ModelsCertificateAuthoritiesCertificateAuthorityAuthCertificate `json:"AuthCertificate,omitempty"`
	EnforceUniqueDN *bool `json:"EnforceUniqueDN,omitempty"`
	LastScan *string `json:"LastScan,omitempty"`
}

// NewModelsCertificateAuthoritiesCertificateAuthorityResponse instantiates a new ModelsCertificateAuthoritiesCertificateAuthorityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateAuthoritiesCertificateAuthorityResponse() *ModelsCertificateAuthoritiesCertificateAuthorityResponse {
	this := ModelsCertificateAuthoritiesCertificateAuthorityResponse{}
	return &this
}

// NewModelsCertificateAuthoritiesCertificateAuthorityResponseWithDefaults instantiates a new ModelsCertificateAuthoritiesCertificateAuthorityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateAuthoritiesCertificateAuthorityResponseWithDefaults() *ModelsCertificateAuthoritiesCertificateAuthorityResponse {
	this := ModelsCertificateAuthoritiesCertificateAuthorityResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetId(v int32) {
	o.Id = &v
}

// GetLogicalName returns the LogicalName field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetLogicalName() string {
	if o == nil || isNil(o.LogicalName) {
		var ret string
		return ret
	}
	return *o.LogicalName
}

// GetLogicalNameOk returns a tuple with the LogicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetLogicalNameOk() (*string, bool) {
	if o == nil || isNil(o.LogicalName) {
		return nil, false
	}
	return o.LogicalName, true
}

// HasLogicalName returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasLogicalName() bool {
	if o != nil && !isNil(o.LogicalName) {
		return true
	}

	return false
}

// SetLogicalName gets a reference to the given string and assigns it to the LogicalName field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetLogicalName(v string) {
	o.LogicalName = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetHostName() string {
	if o == nil || isNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetHostNameOk() (*string, bool) {
	if o == nil || isNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasHostName() bool {
	if o != nil && !isNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetHostName(v string) {
	o.HostName = &v
}

// GetDelegate returns the Delegate field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetDelegate() bool {
	if o == nil || isNil(o.Delegate) {
		var ret bool
		return ret
	}
	return *o.Delegate
}

// GetDelegateOk returns a tuple with the Delegate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetDelegateOk() (*bool, bool) {
	if o == nil || isNil(o.Delegate) {
		return nil, false
	}
	return o.Delegate, true
}

// HasDelegate returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasDelegate() bool {
	if o != nil && !isNil(o.Delegate) {
		return true
	}

	return false
}

// SetDelegate gets a reference to the given bool and assigns it to the Delegate field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetDelegate(v bool) {
	o.Delegate = &v
}

// GetDelegateEnrollment returns the DelegateEnrollment field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetDelegateEnrollment() bool {
	if o == nil || isNil(o.DelegateEnrollment) {
		var ret bool
		return ret
	}
	return *o.DelegateEnrollment
}

// GetDelegateEnrollmentOk returns a tuple with the DelegateEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetDelegateEnrollmentOk() (*bool, bool) {
	if o == nil || isNil(o.DelegateEnrollment) {
		return nil, false
	}
	return o.DelegateEnrollment, true
}

// HasDelegateEnrollment returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasDelegateEnrollment() bool {
	if o != nil && !isNil(o.DelegateEnrollment) {
		return true
	}

	return false
}

// SetDelegateEnrollment gets a reference to the given bool and assigns it to the DelegateEnrollment field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetDelegateEnrollment(v bool) {
	o.DelegateEnrollment = &v
}

// GetForestRoot returns the ForestRoot field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetForestRoot() string {
	if o == nil || isNil(o.ForestRoot) {
		var ret string
		return ret
	}
	return *o.ForestRoot
}

// GetForestRootOk returns a tuple with the ForestRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetForestRootOk() (*string, bool) {
	if o == nil || isNil(o.ForestRoot) {
		return nil, false
	}
	return o.ForestRoot, true
}

// HasForestRoot returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasForestRoot() bool {
	if o != nil && !isNil(o.ForestRoot) {
		return true
	}

	return false
}

// SetForestRoot gets a reference to the given string and assigns it to the ForestRoot field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetForestRoot(v string) {
	o.ForestRoot = &v
}

// GetConfigurationTenant returns the ConfigurationTenant field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetConfigurationTenant() string {
	if o == nil || isNil(o.ConfigurationTenant) {
		var ret string
		return ret
	}
	return *o.ConfigurationTenant
}

// GetConfigurationTenantOk returns a tuple with the ConfigurationTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetConfigurationTenantOk() (*string, bool) {
	if o == nil || isNil(o.ConfigurationTenant) {
		return nil, false
	}
	return o.ConfigurationTenant, true
}

// HasConfigurationTenant returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasConfigurationTenant() bool {
	if o != nil && !isNil(o.ConfigurationTenant) {
		return true
	}

	return false
}

// SetConfigurationTenant gets a reference to the given string and assigns it to the ConfigurationTenant field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetConfigurationTenant(v string) {
	o.ConfigurationTenant = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetRemote() bool {
	if o == nil || isNil(o.Remote) {
		var ret bool
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasRemote() bool {
	if o != nil && !isNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given bool and assigns it to the Remote field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetRemote(v bool) {
	o.Remote = &v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAgent() string {
	if o == nil || isNil(o.Agent) {
		var ret string
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAgentOk() (*string, bool) {
	if o == nil || isNil(o.Agent) {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasAgent() bool {
	if o != nil && !isNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given string and assigns it to the Agent field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetAgent(v string) {
	o.Agent = &v
}

// GetStandalone returns the Standalone field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetStandalone() bool {
	if o == nil || isNil(o.Standalone) {
		var ret bool
		return ret
	}
	return *o.Standalone
}

// GetStandaloneOk returns a tuple with the Standalone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetStandaloneOk() (*bool, bool) {
	if o == nil || isNil(o.Standalone) {
		return nil, false
	}
	return o.Standalone, true
}

// HasStandalone returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasStandalone() bool {
	if o != nil && !isNil(o.Standalone) {
		return true
	}

	return false
}

// SetStandalone gets a reference to the given bool and assigns it to the Standalone field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetStandalone(v bool) {
	o.Standalone = &v
}

// GetMonitorThresholds returns the MonitorThresholds field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetMonitorThresholds() bool {
	if o == nil || isNil(o.MonitorThresholds) {
		var ret bool
		return ret
	}
	return *o.MonitorThresholds
}

// GetMonitorThresholdsOk returns a tuple with the MonitorThresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetMonitorThresholdsOk() (*bool, bool) {
	if o == nil || isNil(o.MonitorThresholds) {
		return nil, false
	}
	return o.MonitorThresholds, true
}

// HasMonitorThresholds returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasMonitorThresholds() bool {
	if o != nil && !isNil(o.MonitorThresholds) {
		return true
	}

	return false
}

// SetMonitorThresholds gets a reference to the given bool and assigns it to the MonitorThresholds field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetMonitorThresholds(v bool) {
	o.MonitorThresholds = &v
}

// GetIssuanceMax returns the IssuanceMax field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetIssuanceMax() int32 {
	if o == nil || isNil(o.IssuanceMax) {
		var ret int32
		return ret
	}
	return *o.IssuanceMax
}

// GetIssuanceMaxOk returns a tuple with the IssuanceMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetIssuanceMaxOk() (*int32, bool) {
	if o == nil || isNil(o.IssuanceMax) {
		return nil, false
	}
	return o.IssuanceMax, true
}

// HasIssuanceMax returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasIssuanceMax() bool {
	if o != nil && !isNil(o.IssuanceMax) {
		return true
	}

	return false
}

// SetIssuanceMax gets a reference to the given int32 and assigns it to the IssuanceMax field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetIssuanceMax(v int32) {
	o.IssuanceMax = &v
}

// GetIssuanceMin returns the IssuanceMin field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetIssuanceMin() int32 {
	if o == nil || isNil(o.IssuanceMin) {
		var ret int32
		return ret
	}
	return *o.IssuanceMin
}

// GetIssuanceMinOk returns a tuple with the IssuanceMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetIssuanceMinOk() (*int32, bool) {
	if o == nil || isNil(o.IssuanceMin) {
		return nil, false
	}
	return o.IssuanceMin, true
}

// HasIssuanceMin returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasIssuanceMin() bool {
	if o != nil && !isNil(o.IssuanceMin) {
		return true
	}

	return false
}

// SetIssuanceMin gets a reference to the given int32 and assigns it to the IssuanceMin field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetIssuanceMin(v int32) {
	o.IssuanceMin = &v
}

// GetDenialMax returns the DenialMax field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetDenialMax() int32 {
	if o == nil || isNil(o.DenialMax) {
		var ret int32
		return ret
	}
	return *o.DenialMax
}

// GetDenialMaxOk returns a tuple with the DenialMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetDenialMaxOk() (*int32, bool) {
	if o == nil || isNil(o.DenialMax) {
		return nil, false
	}
	return o.DenialMax, true
}

// HasDenialMax returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasDenialMax() bool {
	if o != nil && !isNil(o.DenialMax) {
		return true
	}

	return false
}

// SetDenialMax gets a reference to the given int32 and assigns it to the DenialMax field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetDenialMax(v int32) {
	o.DenialMax = &v
}

// GetFailureMax returns the FailureMax field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetFailureMax() int32 {
	if o == nil || isNil(o.FailureMax) {
		var ret int32
		return ret
	}
	return *o.FailureMax
}

// GetFailureMaxOk returns a tuple with the FailureMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetFailureMaxOk() (*int32, bool) {
	if o == nil || isNil(o.FailureMax) {
		return nil, false
	}
	return o.FailureMax, true
}

// HasFailureMax returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasFailureMax() bool {
	if o != nil && !isNil(o.FailureMax) {
		return true
	}

	return false
}

// SetFailureMax gets a reference to the given int32 and assigns it to the FailureMax field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetFailureMax(v int32) {
	o.FailureMax = &v
}

// GetRFCEnforcement returns the RFCEnforcement field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetRFCEnforcement() bool {
	if o == nil || isNil(o.RFCEnforcement) {
		var ret bool
		return ret
	}
	return *o.RFCEnforcement
}

// GetRFCEnforcementOk returns a tuple with the RFCEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetRFCEnforcementOk() (*bool, bool) {
	if o == nil || isNil(o.RFCEnforcement) {
		return nil, false
	}
	return o.RFCEnforcement, true
}

// HasRFCEnforcement returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasRFCEnforcement() bool {
	if o != nil && !isNil(o.RFCEnforcement) {
		return true
	}

	return false
}

// SetRFCEnforcement gets a reference to the given bool and assigns it to the RFCEnforcement field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetRFCEnforcement(v bool) {
	o.RFCEnforcement = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetProperties() string {
	if o == nil || isNil(o.Properties) {
		var ret string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetPropertiesOk() (*string, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given string and assigns it to the Properties field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetProperties(v string) {
	o.Properties = &v
}

// GetAllowedEnrollmentTypes returns the AllowedEnrollmentTypes field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAllowedEnrollmentTypes() int32 {
	if o == nil || isNil(o.AllowedEnrollmentTypes) {
		var ret int32
		return ret
	}
	return *o.AllowedEnrollmentTypes
}

// GetAllowedEnrollmentTypesOk returns a tuple with the AllowedEnrollmentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAllowedEnrollmentTypesOk() (*int32, bool) {
	if o == nil || isNil(o.AllowedEnrollmentTypes) {
		return nil, false
	}
	return o.AllowedEnrollmentTypes, true
}

// HasAllowedEnrollmentTypes returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasAllowedEnrollmentTypes() bool {
	if o != nil && !isNil(o.AllowedEnrollmentTypes) {
		return true
	}

	return false
}

// SetAllowedEnrollmentTypes gets a reference to the given int32 and assigns it to the AllowedEnrollmentTypes field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetAllowedEnrollmentTypes(v int32) {
	o.AllowedEnrollmentTypes = &v
}

// GetKeyRetention returns the KeyRetention field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetKeyRetention() int32 {
	if o == nil || isNil(o.KeyRetention) {
		var ret int32
		return ret
	}
	return *o.KeyRetention
}

// GetKeyRetentionOk returns a tuple with the KeyRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetKeyRetentionOk() (*int32, bool) {
	if o == nil || isNil(o.KeyRetention) {
		return nil, false
	}
	return o.KeyRetention, true
}

// HasKeyRetention returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasKeyRetention() bool {
	if o != nil && !isNil(o.KeyRetention) {
		return true
	}

	return false
}

// SetKeyRetention gets a reference to the given int32 and assigns it to the KeyRetention field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetKeyRetention(v int32) {
	o.KeyRetention = &v
}

// GetKeyRetentionDays returns the KeyRetentionDays field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetKeyRetentionDays() int32 {
	if o == nil || isNil(o.KeyRetentionDays) {
		var ret int32
		return ret
	}
	return *o.KeyRetentionDays
}

// GetKeyRetentionDaysOk returns a tuple with the KeyRetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetKeyRetentionDaysOk() (*int32, bool) {
	if o == nil || isNil(o.KeyRetentionDays) {
		return nil, false
	}
	return o.KeyRetentionDays, true
}

// HasKeyRetentionDays returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasKeyRetentionDays() bool {
	if o != nil && !isNil(o.KeyRetentionDays) {
		return true
	}

	return false
}

// SetKeyRetentionDays gets a reference to the given int32 and assigns it to the KeyRetentionDays field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetKeyRetentionDays(v int32) {
	o.KeyRetentionDays = &v
}

// GetExplicitCredentials returns the ExplicitCredentials field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetExplicitCredentials() bool {
	if o == nil || isNil(o.ExplicitCredentials) {
		var ret bool
		return ret
	}
	return *o.ExplicitCredentials
}

// GetExplicitCredentialsOk returns a tuple with the ExplicitCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetExplicitCredentialsOk() (*bool, bool) {
	if o == nil || isNil(o.ExplicitCredentials) {
		return nil, false
	}
	return o.ExplicitCredentials, true
}

// HasExplicitCredentials returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasExplicitCredentials() bool {
	if o != nil && !isNil(o.ExplicitCredentials) {
		return true
	}

	return false
}

// SetExplicitCredentials gets a reference to the given bool and assigns it to the ExplicitCredentials field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetExplicitCredentials(v bool) {
	o.ExplicitCredentials = &v
}

// GetSubscriberTerms returns the SubscriberTerms field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetSubscriberTerms() bool {
	if o == nil || isNil(o.SubscriberTerms) {
		var ret bool
		return ret
	}
	return *o.SubscriberTerms
}

// GetSubscriberTermsOk returns a tuple with the SubscriberTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetSubscriberTermsOk() (*bool, bool) {
	if o == nil || isNil(o.SubscriberTerms) {
		return nil, false
	}
	return o.SubscriberTerms, true
}

// HasSubscriberTerms returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasSubscriberTerms() bool {
	if o != nil && !isNil(o.SubscriberTerms) {
		return true
	}

	return false
}

// SetSubscriberTerms gets a reference to the given bool and assigns it to the SubscriberTerms field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetSubscriberTerms(v bool) {
	o.SubscriberTerms = &v
}

// GetExplicitUser returns the ExplicitUser field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetExplicitUser() string {
	if o == nil || isNil(o.ExplicitUser) {
		var ret string
		return ret
	}
	return *o.ExplicitUser
}

// GetExplicitUserOk returns a tuple with the ExplicitUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetExplicitUserOk() (*string, bool) {
	if o == nil || isNil(o.ExplicitUser) {
		return nil, false
	}
	return o.ExplicitUser, true
}

// HasExplicitUser returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasExplicitUser() bool {
	if o != nil && !isNil(o.ExplicitUser) {
		return true
	}

	return false
}

// SetExplicitUser gets a reference to the given string and assigns it to the ExplicitUser field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetExplicitUser(v string) {
	o.ExplicitUser = &v
}

// GetExplicitPassword returns the ExplicitPassword field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetExplicitPassword() ModelsKeyfactorAPISecret {
	if o == nil || isNil(o.ExplicitPassword) {
		var ret ModelsKeyfactorAPISecret
		return ret
	}
	return *o.ExplicitPassword
}

// GetExplicitPasswordOk returns a tuple with the ExplicitPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetExplicitPasswordOk() (*ModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.ExplicitPassword) {
		return nil, false
	}
	return o.ExplicitPassword, true
}

// HasExplicitPassword returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasExplicitPassword() bool {
	if o != nil && !isNil(o.ExplicitPassword) {
		return true
	}

	return false
}

// SetExplicitPassword gets a reference to the given ModelsKeyfactorAPISecret and assigns it to the ExplicitPassword field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetExplicitPassword(v ModelsKeyfactorAPISecret) {
	o.ExplicitPassword = &v
}

// GetUseAllowedRequesters returns the UseAllowedRequesters field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetUseAllowedRequesters() bool {
	if o == nil || isNil(o.UseAllowedRequesters) {
		var ret bool
		return ret
	}
	return *o.UseAllowedRequesters
}

// GetUseAllowedRequestersOk returns a tuple with the UseAllowedRequesters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetUseAllowedRequestersOk() (*bool, bool) {
	if o == nil || isNil(o.UseAllowedRequesters) {
		return nil, false
	}
	return o.UseAllowedRequesters, true
}

// HasUseAllowedRequesters returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasUseAllowedRequesters() bool {
	if o != nil && !isNil(o.UseAllowedRequesters) {
		return true
	}

	return false
}

// SetUseAllowedRequesters gets a reference to the given bool and assigns it to the UseAllowedRequesters field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetUseAllowedRequesters(v bool) {
	o.UseAllowedRequesters = &v
}

// GetAllowedRequesters returns the AllowedRequesters field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAllowedRequesters() []string {
	if o == nil || isNil(o.AllowedRequesters) {
		var ret []string
		return ret
	}
	return o.AllowedRequesters
}

// GetAllowedRequestersOk returns a tuple with the AllowedRequesters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAllowedRequestersOk() ([]string, bool) {
	if o == nil || isNil(o.AllowedRequesters) {
		return nil, false
	}
	return o.AllowedRequesters, true
}

// HasAllowedRequesters returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasAllowedRequesters() bool {
	if o != nil && !isNil(o.AllowedRequesters) {
		return true
	}

	return false
}

// SetAllowedRequesters gets a reference to the given []string and assigns it to the AllowedRequesters field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetAllowedRequesters(v []string) {
	o.AllowedRequesters = v
}

// GetFullScan returns the FullScan field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetFullScan() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.FullScan) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.FullScan
}

// GetFullScanOk returns a tuple with the FullScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetFullScanOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.FullScan) {
		return nil, false
	}
	return o.FullScan, true
}

// HasFullScan returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasFullScan() bool {
	if o != nil && !isNil(o.FullScan) {
		return true
	}

	return false
}

// SetFullScan gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the FullScan field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetFullScan(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.FullScan = &v
}

// GetIncrementalScan returns the IncrementalScan field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetIncrementalScan() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.IncrementalScan) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.IncrementalScan
}

// GetIncrementalScanOk returns a tuple with the IncrementalScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetIncrementalScanOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.IncrementalScan) {
		return nil, false
	}
	return o.IncrementalScan, true
}

// HasIncrementalScan returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasIncrementalScan() bool {
	if o != nil && !isNil(o.IncrementalScan) {
		return true
	}

	return false
}

// SetIncrementalScan gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the IncrementalScan field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetIncrementalScan(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.IncrementalScan = &v
}

// GetThresholdCheck returns the ThresholdCheck field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetThresholdCheck() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.ThresholdCheck) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.ThresholdCheck
}

// GetThresholdCheckOk returns a tuple with the ThresholdCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetThresholdCheckOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.ThresholdCheck) {
		return nil, false
	}
	return o.ThresholdCheck, true
}

// HasThresholdCheck returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasThresholdCheck() bool {
	if o != nil && !isNil(o.ThresholdCheck) {
		return true
	}

	return false
}

// SetThresholdCheck gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the ThresholdCheck field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetThresholdCheck(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.ThresholdCheck = &v
}

// GetCAType returns the CAType field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetCAType() int32 {
	if o == nil || isNil(o.CAType) {
		var ret int32
		return ret
	}
	return *o.CAType
}

// GetCATypeOk returns a tuple with the CAType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetCATypeOk() (*int32, bool) {
	if o == nil || isNil(o.CAType) {
		return nil, false
	}
	return o.CAType, true
}

// HasCAType returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasCAType() bool {
	if o != nil && !isNil(o.CAType) {
		return true
	}

	return false
}

// SetCAType gets a reference to the given int32 and assigns it to the CAType field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetCAType(v int32) {
	o.CAType = &v
}

// GetAuthCertificate returns the AuthCertificate field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAuthCertificate() ModelsCertificateAuthoritiesCertificateAuthorityAuthCertificate {
	if o == nil || isNil(o.AuthCertificate) {
		var ret ModelsCertificateAuthoritiesCertificateAuthorityAuthCertificate
		return ret
	}
	return *o.AuthCertificate
}

// GetAuthCertificateOk returns a tuple with the AuthCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetAuthCertificateOk() (*ModelsCertificateAuthoritiesCertificateAuthorityAuthCertificate, bool) {
	if o == nil || isNil(o.AuthCertificate) {
		return nil, false
	}
	return o.AuthCertificate, true
}

// HasAuthCertificate returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasAuthCertificate() bool {
	if o != nil && !isNil(o.AuthCertificate) {
		return true
	}

	return false
}

// SetAuthCertificate gets a reference to the given ModelsCertificateAuthoritiesCertificateAuthorityAuthCertificate and assigns it to the AuthCertificate field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetAuthCertificate(v ModelsCertificateAuthoritiesCertificateAuthorityAuthCertificate) {
	o.AuthCertificate = &v
}

// GetEnforceUniqueDN returns the EnforceUniqueDN field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetEnforceUniqueDN() bool {
	if o == nil || isNil(o.EnforceUniqueDN) {
		var ret bool
		return ret
	}
	return *o.EnforceUniqueDN
}

// GetEnforceUniqueDNOk returns a tuple with the EnforceUniqueDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetEnforceUniqueDNOk() (*bool, bool) {
	if o == nil || isNil(o.EnforceUniqueDN) {
		return nil, false
	}
	return o.EnforceUniqueDN, true
}

// HasEnforceUniqueDN returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasEnforceUniqueDN() bool {
	if o != nil && !isNil(o.EnforceUniqueDN) {
		return true
	}

	return false
}

// SetEnforceUniqueDN gets a reference to the given bool and assigns it to the EnforceUniqueDN field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetEnforceUniqueDN(v bool) {
	o.EnforceUniqueDN = &v
}

// GetLastScan returns the LastScan field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetLastScan() string {
	if o == nil || isNil(o.LastScan) {
		var ret string
		return ret
	}
	return *o.LastScan
}

// GetLastScanOk returns a tuple with the LastScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) GetLastScanOk() (*string, bool) {
	if o == nil || isNil(o.LastScan) {
		return nil, false
	}
	return o.LastScan, true
}

// HasLastScan returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) HasLastScan() bool {
	if o != nil && !isNil(o.LastScan) {
		return true
	}

	return false
}

// SetLastScan gets a reference to the given string and assigns it to the LastScan field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityResponse) SetLastScan(v string) {
	o.LastScan = &v
}

func (o ModelsCertificateAuthoritiesCertificateAuthorityResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateAuthoritiesCertificateAuthorityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.LogicalName) {
		toSerialize["LogicalName"] = o.LogicalName
	}
	if !isNil(o.HostName) {
		toSerialize["HostName"] = o.HostName
	}
	if !isNil(o.Delegate) {
		toSerialize["Delegate"] = o.Delegate
	}
	if !isNil(o.DelegateEnrollment) {
		toSerialize["DelegateEnrollment"] = o.DelegateEnrollment
	}
	// skip: ForestRoot is readOnly
	if !isNil(o.ConfigurationTenant) {
		toSerialize["ConfigurationTenant"] = o.ConfigurationTenant
	}
	if !isNil(o.Remote) {
		toSerialize["Remote"] = o.Remote
	}
	if !isNil(o.Agent) {
		toSerialize["Agent"] = o.Agent
	}
	if !isNil(o.Standalone) {
		toSerialize["Standalone"] = o.Standalone
	}
	if !isNil(o.MonitorThresholds) {
		toSerialize["MonitorThresholds"] = o.MonitorThresholds
	}
	if !isNil(o.IssuanceMax) {
		toSerialize["IssuanceMax"] = o.IssuanceMax
	}
	if !isNil(o.IssuanceMin) {
		toSerialize["IssuanceMin"] = o.IssuanceMin
	}
	if !isNil(o.DenialMax) {
		toSerialize["DenialMax"] = o.DenialMax
	}
	if !isNil(o.FailureMax) {
		toSerialize["FailureMax"] = o.FailureMax
	}
	if !isNil(o.RFCEnforcement) {
		toSerialize["RFCEnforcement"] = o.RFCEnforcement
	}
	if !isNil(o.Properties) {
		toSerialize["Properties"] = o.Properties
	}
	if !isNil(o.AllowedEnrollmentTypes) {
		toSerialize["AllowedEnrollmentTypes"] = o.AllowedEnrollmentTypes
	}
	if !isNil(o.KeyRetention) {
		toSerialize["KeyRetention"] = o.KeyRetention
	}
	if !isNil(o.KeyRetentionDays) {
		toSerialize["KeyRetentionDays"] = o.KeyRetentionDays
	}
	if !isNil(o.ExplicitCredentials) {
		toSerialize["ExplicitCredentials"] = o.ExplicitCredentials
	}
	if !isNil(o.SubscriberTerms) {
		toSerialize["SubscriberTerms"] = o.SubscriberTerms
	}
	if !isNil(o.ExplicitUser) {
		toSerialize["ExplicitUser"] = o.ExplicitUser
	}
	if !isNil(o.ExplicitPassword) {
		toSerialize["ExplicitPassword"] = o.ExplicitPassword
	}
	if !isNil(o.UseAllowedRequesters) {
		toSerialize["UseAllowedRequesters"] = o.UseAllowedRequesters
	}
	if !isNil(o.AllowedRequesters) {
		toSerialize["AllowedRequesters"] = o.AllowedRequesters
	}
	if !isNil(o.FullScan) {
		toSerialize["FullScan"] = o.FullScan
	}
	if !isNil(o.IncrementalScan) {
		toSerialize["IncrementalScan"] = o.IncrementalScan
	}
	if !isNil(o.ThresholdCheck) {
		toSerialize["ThresholdCheck"] = o.ThresholdCheck
	}
	if !isNil(o.CAType) {
		toSerialize["CAType"] = o.CAType
	}
	if !isNil(o.AuthCertificate) {
		toSerialize["AuthCertificate"] = o.AuthCertificate
	}
	if !isNil(o.EnforceUniqueDN) {
		toSerialize["EnforceUniqueDN"] = o.EnforceUniqueDN
	}
	// skip: LastScan is readOnly
	return toSerialize, nil
}

type NullableModelsCertificateAuthoritiesCertificateAuthorityResponse struct {
	value *ModelsCertificateAuthoritiesCertificateAuthorityResponse
	isSet bool
}

func (v NullableModelsCertificateAuthoritiesCertificateAuthorityResponse) Get() *ModelsCertificateAuthoritiesCertificateAuthorityResponse {
	return v.value
}

func (v *NullableModelsCertificateAuthoritiesCertificateAuthorityResponse) Set(val *ModelsCertificateAuthoritiesCertificateAuthorityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateAuthoritiesCertificateAuthorityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateAuthoritiesCertificateAuthorityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateAuthoritiesCertificateAuthorityResponse(val *ModelsCertificateAuthoritiesCertificateAuthorityResponse) *NullableModelsCertificateAuthoritiesCertificateAuthorityResponse {
	return &NullableModelsCertificateAuthoritiesCertificateAuthorityResponse{value: val, isSet: true}
}

func (v NullableModelsCertificateAuthoritiesCertificateAuthorityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateAuthoritiesCertificateAuthorityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


