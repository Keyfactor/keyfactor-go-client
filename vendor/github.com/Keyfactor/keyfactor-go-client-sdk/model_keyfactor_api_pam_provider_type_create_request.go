/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiPAMProviderTypeCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiPAMProviderTypeCreateRequest{}

// KeyfactorApiPAMProviderTypeCreateRequest struct for KeyfactorApiPAMProviderTypeCreateRequest
type KeyfactorApiPAMProviderTypeCreateRequest struct {
	Name string `json:"Name"`
	Parameters []KeyfactorApiPAMProviderTypeParameterCreateRequest `json:"Parameters,omitempty"`
}

// NewKeyfactorApiPAMProviderTypeCreateRequest instantiates a new KeyfactorApiPAMProviderTypeCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiPAMProviderTypeCreateRequest(name string) *KeyfactorApiPAMProviderTypeCreateRequest {
	this := KeyfactorApiPAMProviderTypeCreateRequest{}
	this.Name = name
	return &this
}

// NewKeyfactorApiPAMProviderTypeCreateRequestWithDefaults instantiates a new KeyfactorApiPAMProviderTypeCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiPAMProviderTypeCreateRequestWithDefaults() *KeyfactorApiPAMProviderTypeCreateRequest {
	this := KeyfactorApiPAMProviderTypeCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *KeyfactorApiPAMProviderTypeCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiPAMProviderTypeCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KeyfactorApiPAMProviderTypeCreateRequest) SetName(v string) {
	o.Name = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *KeyfactorApiPAMProviderTypeCreateRequest) GetParameters() []KeyfactorApiPAMProviderTypeParameterCreateRequest {
	if o == nil || isNil(o.Parameters) {
		var ret []KeyfactorApiPAMProviderTypeParameterCreateRequest
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiPAMProviderTypeCreateRequest) GetParametersOk() ([]KeyfactorApiPAMProviderTypeParameterCreateRequest, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *KeyfactorApiPAMProviderTypeCreateRequest) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []KeyfactorApiPAMProviderTypeParameterCreateRequest and assigns it to the Parameters field.
func (o *KeyfactorApiPAMProviderTypeCreateRequest) SetParameters(v []KeyfactorApiPAMProviderTypeParameterCreateRequest) {
	o.Parameters = v
}

func (o KeyfactorApiPAMProviderTypeCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiPAMProviderTypeCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Name"] = o.Name
	if !isNil(o.Parameters) {
		toSerialize["Parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableKeyfactorApiPAMProviderTypeCreateRequest struct {
	value *KeyfactorApiPAMProviderTypeCreateRequest
	isSet bool
}

func (v NullableKeyfactorApiPAMProviderTypeCreateRequest) Get() *KeyfactorApiPAMProviderTypeCreateRequest {
	return v.value
}

func (v *NullableKeyfactorApiPAMProviderTypeCreateRequest) Set(val *KeyfactorApiPAMProviderTypeCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiPAMProviderTypeCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiPAMProviderTypeCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiPAMProviderTypeCreateRequest(val *KeyfactorApiPAMProviderTypeCreateRequest) *NullableKeyfactorApiPAMProviderTypeCreateRequest {
	return &NullableKeyfactorApiPAMProviderTypeCreateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiPAMProviderTypeCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiPAMProviderTypeCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


