/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsCertificateStoresReenrollmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsCertificateStoresReenrollmentRequest{}

// KeyfactorApiModelsCertificateStoresReenrollmentRequest struct for KeyfactorApiModelsCertificateStoresReenrollmentRequest
type KeyfactorApiModelsCertificateStoresReenrollmentRequest struct {
	KeystoreId *string `json:"KeystoreId,omitempty"`
	SubjectName *string `json:"SubjectName,omitempty"`
	AgentGuid *string `json:"AgentGuid,omitempty"`
	Alias *string `json:"Alias,omitempty"`
	JobProperties map[string]map[string]interface{} `json:"JobProperties,omitempty"`
	CertificateAuthority *string `json:"CertificateAuthority,omitempty"`
	CertificateTemplate *string `json:"CertificateTemplate,omitempty"`
}

// NewKeyfactorApiModelsCertificateStoresReenrollmentRequest instantiates a new KeyfactorApiModelsCertificateStoresReenrollmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsCertificateStoresReenrollmentRequest() *KeyfactorApiModelsCertificateStoresReenrollmentRequest {
	this := KeyfactorApiModelsCertificateStoresReenrollmentRequest{}
	return &this
}

// NewKeyfactorApiModelsCertificateStoresReenrollmentRequestWithDefaults instantiates a new KeyfactorApiModelsCertificateStoresReenrollmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsCertificateStoresReenrollmentRequestWithDefaults() *KeyfactorApiModelsCertificateStoresReenrollmentRequest {
	this := KeyfactorApiModelsCertificateStoresReenrollmentRequest{}
	return &this
}

// GetKeystoreId returns the KeystoreId field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetKeystoreId() string {
	if o == nil || isNil(o.KeystoreId) {
		var ret string
		return ret
	}
	return *o.KeystoreId
}

// GetKeystoreIdOk returns a tuple with the KeystoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetKeystoreIdOk() (*string, bool) {
	if o == nil || isNil(o.KeystoreId) {
		return nil, false
	}
	return o.KeystoreId, true
}

// HasKeystoreId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) HasKeystoreId() bool {
	if o != nil && !isNil(o.KeystoreId) {
		return true
	}

	return false
}

// SetKeystoreId gets a reference to the given string and assigns it to the KeystoreId field.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) SetKeystoreId(v string) {
	o.KeystoreId = &v
}

// GetSubjectName returns the SubjectName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetSubjectName() string {
	if o == nil || isNil(o.SubjectName) {
		var ret string
		return ret
	}
	return *o.SubjectName
}

// GetSubjectNameOk returns a tuple with the SubjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetSubjectNameOk() (*string, bool) {
	if o == nil || isNil(o.SubjectName) {
		return nil, false
	}
	return o.SubjectName, true
}

// HasSubjectName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) HasSubjectName() bool {
	if o != nil && !isNil(o.SubjectName) {
		return true
	}

	return false
}

// SetSubjectName gets a reference to the given string and assigns it to the SubjectName field.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) SetSubjectName(v string) {
	o.SubjectName = &v
}

// GetAgentGuid returns the AgentGuid field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetAgentGuid() string {
	if o == nil || isNil(o.AgentGuid) {
		var ret string
		return ret
	}
	return *o.AgentGuid
}

// GetAgentGuidOk returns a tuple with the AgentGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetAgentGuidOk() (*string, bool) {
	if o == nil || isNil(o.AgentGuid) {
		return nil, false
	}
	return o.AgentGuid, true
}

// HasAgentGuid returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) HasAgentGuid() bool {
	if o != nil && !isNil(o.AgentGuid) {
		return true
	}

	return false
}

// SetAgentGuid gets a reference to the given string and assigns it to the AgentGuid field.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) SetAgentGuid(v string) {
	o.AgentGuid = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetAlias() string {
	if o == nil || isNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetAliasOk() (*string, bool) {
	if o == nil || isNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) HasAlias() bool {
	if o != nil && !isNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) SetAlias(v string) {
	o.Alias = &v
}

// GetJobProperties returns the JobProperties field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetJobProperties() map[string]map[string]interface{} {
	if o == nil || isNil(o.JobProperties) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.JobProperties
}

// GetJobPropertiesOk returns a tuple with the JobProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetJobPropertiesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.JobProperties) {
		return map[string]map[string]interface{}{}, false
	}
	return o.JobProperties, true
}

// HasJobProperties returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) HasJobProperties() bool {
	if o != nil && !isNil(o.JobProperties) {
		return true
	}

	return false
}

// SetJobProperties gets a reference to the given map[string]map[string]interface{} and assigns it to the JobProperties field.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) SetJobProperties(v map[string]map[string]interface{}) {
	o.JobProperties = v
}

// GetCertificateAuthority returns the CertificateAuthority field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetCertificateAuthority() string {
	if o == nil || isNil(o.CertificateAuthority) {
		var ret string
		return ret
	}
	return *o.CertificateAuthority
}

// GetCertificateAuthorityOk returns a tuple with the CertificateAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetCertificateAuthorityOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthority) {
		return nil, false
	}
	return o.CertificateAuthority, true
}

// HasCertificateAuthority returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) HasCertificateAuthority() bool {
	if o != nil && !isNil(o.CertificateAuthority) {
		return true
	}

	return false
}

// SetCertificateAuthority gets a reference to the given string and assigns it to the CertificateAuthority field.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) SetCertificateAuthority(v string) {
	o.CertificateAuthority = &v
}

// GetCertificateTemplate returns the CertificateTemplate field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetCertificateTemplate() string {
	if o == nil || isNil(o.CertificateTemplate) {
		var ret string
		return ret
	}
	return *o.CertificateTemplate
}

// GetCertificateTemplateOk returns a tuple with the CertificateTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) GetCertificateTemplateOk() (*string, bool) {
	if o == nil || isNil(o.CertificateTemplate) {
		return nil, false
	}
	return o.CertificateTemplate, true
}

// HasCertificateTemplate returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) HasCertificateTemplate() bool {
	if o != nil && !isNil(o.CertificateTemplate) {
		return true
	}

	return false
}

// SetCertificateTemplate gets a reference to the given string and assigns it to the CertificateTemplate field.
func (o *KeyfactorApiModelsCertificateStoresReenrollmentRequest) SetCertificateTemplate(v string) {
	o.CertificateTemplate = &v
}

func (o KeyfactorApiModelsCertificateStoresReenrollmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsCertificateStoresReenrollmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.KeystoreId) {
		toSerialize["KeystoreId"] = o.KeystoreId
	}
	if !isNil(o.SubjectName) {
		toSerialize["SubjectName"] = o.SubjectName
	}
	if !isNil(o.AgentGuid) {
		toSerialize["AgentGuid"] = o.AgentGuid
	}
	if !isNil(o.Alias) {
		toSerialize["Alias"] = o.Alias
	}
	if !isNil(o.JobProperties) {
		toSerialize["JobProperties"] = o.JobProperties
	}
	if !isNil(o.CertificateAuthority) {
		toSerialize["CertificateAuthority"] = o.CertificateAuthority
	}
	if !isNil(o.CertificateTemplate) {
		toSerialize["CertificateTemplate"] = o.CertificateTemplate
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest struct {
	value *KeyfactorApiModelsCertificateStoresReenrollmentRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest) Get() *KeyfactorApiModelsCertificateStoresReenrollmentRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest) Set(val *KeyfactorApiModelsCertificateStoresReenrollmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsCertificateStoresReenrollmentRequest(val *KeyfactorApiModelsCertificateStoresReenrollmentRequest) *NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest {
	return &NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsCertificateStoresReenrollmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


