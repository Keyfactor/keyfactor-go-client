/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsOrchestratorJobsJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsOrchestratorJobsJob{}

// ModelsOrchestratorJobsJob struct for ModelsOrchestratorJobsJob
type ModelsOrchestratorJobsJob struct {
	Id *string `json:"Id,omitempty"`
	ClientMachine *string `json:"ClientMachine,omitempty"`
	Target *string `json:"Target,omitempty"`
	Schedule *KeyfactorCommonSchedulingKeyfactorSchedule `json:"Schedule,omitempty"`
	Requested *string `json:"Requested,omitempty"`
	JobType *string `json:"JobType,omitempty"`
}

// NewModelsOrchestratorJobsJob instantiates a new ModelsOrchestratorJobsJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsOrchestratorJobsJob() *ModelsOrchestratorJobsJob {
	this := ModelsOrchestratorJobsJob{}
	return &this
}

// NewModelsOrchestratorJobsJobWithDefaults instantiates a new ModelsOrchestratorJobsJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsOrchestratorJobsJobWithDefaults() *ModelsOrchestratorJobsJob {
	this := ModelsOrchestratorJobsJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJob) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJob) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJob) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsOrchestratorJobsJob) SetId(v string) {
	o.Id = &v
}

// GetClientMachine returns the ClientMachine field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJob) GetClientMachine() string {
	if o == nil || isNil(o.ClientMachine) {
		var ret string
		return ret
	}
	return *o.ClientMachine
}

// GetClientMachineOk returns a tuple with the ClientMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJob) GetClientMachineOk() (*string, bool) {
	if o == nil || isNil(o.ClientMachine) {
		return nil, false
	}
	return o.ClientMachine, true
}

// HasClientMachine returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJob) HasClientMachine() bool {
	if o != nil && !isNil(o.ClientMachine) {
		return true
	}

	return false
}

// SetClientMachine gets a reference to the given string and assigns it to the ClientMachine field.
func (o *ModelsOrchestratorJobsJob) SetClientMachine(v string) {
	o.ClientMachine = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJob) GetTarget() string {
	if o == nil || isNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJob) GetTargetOk() (*string, bool) {
	if o == nil || isNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJob) HasTarget() bool {
	if o != nil && !isNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *ModelsOrchestratorJobsJob) SetTarget(v string) {
	o.Target = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJob) GetSchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.Schedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJob) GetScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJob) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the Schedule field.
func (o *ModelsOrchestratorJobsJob) SetSchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.Schedule = &v
}

// GetRequested returns the Requested field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJob) GetRequested() string {
	if o == nil || isNil(o.Requested) {
		var ret string
		return ret
	}
	return *o.Requested
}

// GetRequestedOk returns a tuple with the Requested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJob) GetRequestedOk() (*string, bool) {
	if o == nil || isNil(o.Requested) {
		return nil, false
	}
	return o.Requested, true
}

// HasRequested returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJob) HasRequested() bool {
	if o != nil && !isNil(o.Requested) {
		return true
	}

	return false
}

// SetRequested gets a reference to the given string and assigns it to the Requested field.
func (o *ModelsOrchestratorJobsJob) SetRequested(v string) {
	o.Requested = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *ModelsOrchestratorJobsJob) GetJobType() string {
	if o == nil || isNil(o.JobType) {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrchestratorJobsJob) GetJobTypeOk() (*string, bool) {
	if o == nil || isNil(o.JobType) {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *ModelsOrchestratorJobsJob) HasJobType() bool {
	if o != nil && !isNil(o.JobType) {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *ModelsOrchestratorJobsJob) SetJobType(v string) {
	o.JobType = &v
}

func (o ModelsOrchestratorJobsJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsOrchestratorJobsJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.ClientMachine) {
		toSerialize["ClientMachine"] = o.ClientMachine
	}
	if !isNil(o.Target) {
		toSerialize["Target"] = o.Target
	}
	if !isNil(o.Schedule) {
		toSerialize["Schedule"] = o.Schedule
	}
	if !isNil(o.Requested) {
		toSerialize["Requested"] = o.Requested
	}
	if !isNil(o.JobType) {
		toSerialize["JobType"] = o.JobType
	}
	return toSerialize, nil
}

type NullableModelsOrchestratorJobsJob struct {
	value *ModelsOrchestratorJobsJob
	isSet bool
}

func (v NullableModelsOrchestratorJobsJob) Get() *ModelsOrchestratorJobsJob {
	return v.value
}

func (v *NullableModelsOrchestratorJobsJob) Set(val *ModelsOrchestratorJobsJob) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsOrchestratorJobsJob) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsOrchestratorJobsJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsOrchestratorJobsJob(val *ModelsOrchestratorJobsJob) *NullableModelsOrchestratorJobsJob {
	return &NullableModelsOrchestratorJobsJob{value: val, isSet: true}
}

func (v NullableModelsOrchestratorJobsJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsOrchestratorJobsJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


