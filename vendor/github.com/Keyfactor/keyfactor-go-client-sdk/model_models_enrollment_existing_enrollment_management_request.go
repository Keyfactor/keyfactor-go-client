/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsEnrollmentExistingEnrollmentManagementRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsEnrollmentExistingEnrollmentManagementRequest{}

// ModelsEnrollmentExistingEnrollmentManagementRequest struct for ModelsEnrollmentExistingEnrollmentManagementRequest
type ModelsEnrollmentExistingEnrollmentManagementRequest struct {
	ExistingCertificateId *int32 `json:"ExistingCertificateId,omitempty"`
	CertificateId *int32 `json:"CertificateId,omitempty"`
	RequestId *int32 `json:"RequestId,omitempty"`
	Password *string `json:"Password,omitempty"`
	JobTime *time.Time `json:"JobTime,omitempty"`
}

// NewModelsEnrollmentExistingEnrollmentManagementRequest instantiates a new ModelsEnrollmentExistingEnrollmentManagementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsEnrollmentExistingEnrollmentManagementRequest() *ModelsEnrollmentExistingEnrollmentManagementRequest {
	this := ModelsEnrollmentExistingEnrollmentManagementRequest{}
	return &this
}

// NewModelsEnrollmentExistingEnrollmentManagementRequestWithDefaults instantiates a new ModelsEnrollmentExistingEnrollmentManagementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsEnrollmentExistingEnrollmentManagementRequestWithDefaults() *ModelsEnrollmentExistingEnrollmentManagementRequest {
	this := ModelsEnrollmentExistingEnrollmentManagementRequest{}
	return &this
}

// GetExistingCertificateId returns the ExistingCertificateId field value if set, zero value otherwise.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetExistingCertificateId() int32 {
	if o == nil || isNil(o.ExistingCertificateId) {
		var ret int32
		return ret
	}
	return *o.ExistingCertificateId
}

// GetExistingCertificateIdOk returns a tuple with the ExistingCertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetExistingCertificateIdOk() (*int32, bool) {
	if o == nil || isNil(o.ExistingCertificateId) {
		return nil, false
	}
	return o.ExistingCertificateId, true
}

// HasExistingCertificateId returns a boolean if a field has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) HasExistingCertificateId() bool {
	if o != nil && !isNil(o.ExistingCertificateId) {
		return true
	}

	return false
}

// SetExistingCertificateId gets a reference to the given int32 and assigns it to the ExistingCertificateId field.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) SetExistingCertificateId(v int32) {
	o.ExistingCertificateId = &v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetCertificateId() int32 {
	if o == nil || isNil(o.CertificateId) {
		var ret int32
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetCertificateIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) HasCertificateId() bool {
	if o != nil && !isNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given int32 and assigns it to the CertificateId field.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) SetCertificateId(v int32) {
	o.CertificateId = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetRequestId() int32 {
	if o == nil || isNil(o.RequestId) {
		var ret int32
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetRequestIdOk() (*int32, bool) {
	if o == nil || isNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) HasRequestId() bool {
	if o != nil && !isNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given int32 and assigns it to the RequestId field.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) SetRequestId(v int32) {
	o.RequestId = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) SetPassword(v string) {
	o.Password = &v
}

// GetJobTime returns the JobTime field value if set, zero value otherwise.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetJobTime() time.Time {
	if o == nil || isNil(o.JobTime) {
		var ret time.Time
		return ret
	}
	return *o.JobTime
}

// GetJobTimeOk returns a tuple with the JobTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) GetJobTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.JobTime) {
		return nil, false
	}
	return o.JobTime, true
}

// HasJobTime returns a boolean if a field has been set.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) HasJobTime() bool {
	if o != nil && !isNil(o.JobTime) {
		return true
	}

	return false
}

// SetJobTime gets a reference to the given time.Time and assigns it to the JobTime field.
func (o *ModelsEnrollmentExistingEnrollmentManagementRequest) SetJobTime(v time.Time) {
	o.JobTime = &v
}

func (o ModelsEnrollmentExistingEnrollmentManagementRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsEnrollmentExistingEnrollmentManagementRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ExistingCertificateId) {
		toSerialize["ExistingCertificateId"] = o.ExistingCertificateId
	}
	if !isNil(o.CertificateId) {
		toSerialize["CertificateId"] = o.CertificateId
	}
	if !isNil(o.RequestId) {
		toSerialize["RequestId"] = o.RequestId
	}
	if !isNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	if !isNil(o.JobTime) {
		toSerialize["JobTime"] = o.JobTime
	}
	return toSerialize, nil
}

type NullableModelsEnrollmentExistingEnrollmentManagementRequest struct {
	value *ModelsEnrollmentExistingEnrollmentManagementRequest
	isSet bool
}

func (v NullableModelsEnrollmentExistingEnrollmentManagementRequest) Get() *ModelsEnrollmentExistingEnrollmentManagementRequest {
	return v.value
}

func (v *NullableModelsEnrollmentExistingEnrollmentManagementRequest) Set(val *ModelsEnrollmentExistingEnrollmentManagementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsEnrollmentExistingEnrollmentManagementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsEnrollmentExistingEnrollmentManagementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsEnrollmentExistingEnrollmentManagementRequest(val *ModelsEnrollmentExistingEnrollmentManagementRequest) *NullableModelsEnrollmentExistingEnrollmentManagementRequest {
	return &NullableModelsEnrollmentExistingEnrollmentManagementRequest{value: val, isSet: true}
}

func (v NullableModelsEnrollmentExistingEnrollmentManagementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsEnrollmentExistingEnrollmentManagementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


