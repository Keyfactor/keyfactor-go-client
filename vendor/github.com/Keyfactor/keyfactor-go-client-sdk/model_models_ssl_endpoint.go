/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSLEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSLEndpoint{}

// ModelsSSLEndpoint struct for ModelsSSLEndpoint
type ModelsSSLEndpoint struct {
	EndpointId *string `json:"EndpointId,omitempty"`
	NetworkId *string `json:"NetworkId,omitempty"`
	LastHistoryId *string `json:"LastHistoryId,omitempty"`
	IpAddressBytes *string `json:"IpAddressBytes,omitempty"`
	Port *int32 `json:"Port,omitempty"`
	SNIName *string `json:"SNIName,omitempty"`
	EnableMonitor *bool `json:"EnableMonitor,omitempty"`
	Reviewed *bool `json:"Reviewed,omitempty"`
}

// NewModelsSSLEndpoint instantiates a new ModelsSSLEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSLEndpoint() *ModelsSSLEndpoint {
	this := ModelsSSLEndpoint{}
	return &this
}

// NewModelsSSLEndpointWithDefaults instantiates a new ModelsSSLEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSLEndpointWithDefaults() *ModelsSSLEndpoint {
	this := ModelsSSLEndpoint{}
	return &this
}

// GetEndpointId returns the EndpointId field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetEndpointId() string {
	if o == nil || isNil(o.EndpointId) {
		var ret string
		return ret
	}
	return *o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetEndpointIdOk() (*string, bool) {
	if o == nil || isNil(o.EndpointId) {
		return nil, false
	}
	return o.EndpointId, true
}

// HasEndpointId returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasEndpointId() bool {
	if o != nil && !isNil(o.EndpointId) {
		return true
	}

	return false
}

// SetEndpointId gets a reference to the given string and assigns it to the EndpointId field.
func (o *ModelsSSLEndpoint) SetEndpointId(v string) {
	o.EndpointId = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *ModelsSSLEndpoint) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetLastHistoryId returns the LastHistoryId field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetLastHistoryId() string {
	if o == nil || isNil(o.LastHistoryId) {
		var ret string
		return ret
	}
	return *o.LastHistoryId
}

// GetLastHistoryIdOk returns a tuple with the LastHistoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetLastHistoryIdOk() (*string, bool) {
	if o == nil || isNil(o.LastHistoryId) {
		return nil, false
	}
	return o.LastHistoryId, true
}

// HasLastHistoryId returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasLastHistoryId() bool {
	if o != nil && !isNil(o.LastHistoryId) {
		return true
	}

	return false
}

// SetLastHistoryId gets a reference to the given string and assigns it to the LastHistoryId field.
func (o *ModelsSSLEndpoint) SetLastHistoryId(v string) {
	o.LastHistoryId = &v
}

// GetIpAddressBytes returns the IpAddressBytes field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetIpAddressBytes() string {
	if o == nil || isNil(o.IpAddressBytes) {
		var ret string
		return ret
	}
	return *o.IpAddressBytes
}

// GetIpAddressBytesOk returns a tuple with the IpAddressBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetIpAddressBytesOk() (*string, bool) {
	if o == nil || isNil(o.IpAddressBytes) {
		return nil, false
	}
	return o.IpAddressBytes, true
}

// HasIpAddressBytes returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasIpAddressBytes() bool {
	if o != nil && !isNil(o.IpAddressBytes) {
		return true
	}

	return false
}

// SetIpAddressBytes gets a reference to the given string and assigns it to the IpAddressBytes field.
func (o *ModelsSSLEndpoint) SetIpAddressBytes(v string) {
	o.IpAddressBytes = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ModelsSSLEndpoint) SetPort(v int32) {
	o.Port = &v
}

// GetSNIName returns the SNIName field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetSNIName() string {
	if o == nil || isNil(o.SNIName) {
		var ret string
		return ret
	}
	return *o.SNIName
}

// GetSNINameOk returns a tuple with the SNIName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetSNINameOk() (*string, bool) {
	if o == nil || isNil(o.SNIName) {
		return nil, false
	}
	return o.SNIName, true
}

// HasSNIName returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasSNIName() bool {
	if o != nil && !isNil(o.SNIName) {
		return true
	}

	return false
}

// SetSNIName gets a reference to the given string and assigns it to the SNIName field.
func (o *ModelsSSLEndpoint) SetSNIName(v string) {
	o.SNIName = &v
}

// GetEnableMonitor returns the EnableMonitor field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetEnableMonitor() bool {
	if o == nil || isNil(o.EnableMonitor) {
		var ret bool
		return ret
	}
	return *o.EnableMonitor
}

// GetEnableMonitorOk returns a tuple with the EnableMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetEnableMonitorOk() (*bool, bool) {
	if o == nil || isNil(o.EnableMonitor) {
		return nil, false
	}
	return o.EnableMonitor, true
}

// HasEnableMonitor returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasEnableMonitor() bool {
	if o != nil && !isNil(o.EnableMonitor) {
		return true
	}

	return false
}

// SetEnableMonitor gets a reference to the given bool and assigns it to the EnableMonitor field.
func (o *ModelsSSLEndpoint) SetEnableMonitor(v bool) {
	o.EnableMonitor = &v
}

// GetReviewed returns the Reviewed field value if set, zero value otherwise.
func (o *ModelsSSLEndpoint) GetReviewed() bool {
	if o == nil || isNil(o.Reviewed) {
		var ret bool
		return ret
	}
	return *o.Reviewed
}

// GetReviewedOk returns a tuple with the Reviewed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpoint) GetReviewedOk() (*bool, bool) {
	if o == nil || isNil(o.Reviewed) {
		return nil, false
	}
	return o.Reviewed, true
}

// HasReviewed returns a boolean if a field has been set.
func (o *ModelsSSLEndpoint) HasReviewed() bool {
	if o != nil && !isNil(o.Reviewed) {
		return true
	}

	return false
}

// SetReviewed gets a reference to the given bool and assigns it to the Reviewed field.
func (o *ModelsSSLEndpoint) SetReviewed(v bool) {
	o.Reviewed = &v
}

func (o ModelsSSLEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSLEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EndpointId) {
		toSerialize["EndpointId"] = o.EndpointId
	}
	if !isNil(o.NetworkId) {
		toSerialize["NetworkId"] = o.NetworkId
	}
	if !isNil(o.LastHistoryId) {
		toSerialize["LastHistoryId"] = o.LastHistoryId
	}
	if !isNil(o.IpAddressBytes) {
		toSerialize["IpAddressBytes"] = o.IpAddressBytes
	}
	if !isNil(o.Port) {
		toSerialize["Port"] = o.Port
	}
	if !isNil(o.SNIName) {
		toSerialize["SNIName"] = o.SNIName
	}
	if !isNil(o.EnableMonitor) {
		toSerialize["EnableMonitor"] = o.EnableMonitor
	}
	if !isNil(o.Reviewed) {
		toSerialize["Reviewed"] = o.Reviewed
	}
	return toSerialize, nil
}

type NullableModelsSSLEndpoint struct {
	value *ModelsSSLEndpoint
	isSet bool
}

func (v NullableModelsSSLEndpoint) Get() *ModelsSSLEndpoint {
	return v.value
}

func (v *NullableModelsSSLEndpoint) Set(val *ModelsSSLEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSLEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSLEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSLEndpoint(val *ModelsSSLEndpoint) *NullableModelsSSLEndpoint {
	return &NullableModelsSSLEndpoint{value: val, isSet: true}
}

func (v NullableModelsSSLEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSLEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


