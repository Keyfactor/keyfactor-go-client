/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsReportSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsReportSchedule{}

// ModelsReportSchedule struct for ModelsReportSchedule
type ModelsReportSchedule struct {
	Id *int32 `json:"Id,omitempty"`
	SendReport *bool `json:"SendReport,omitempty"`
	SaveReport *bool `json:"SaveReport,omitempty"`
	SaveReportPath *string `json:"SaveReportPath,omitempty"`
	ReportFormat *string `json:"ReportFormat,omitempty"`
	KeyfactorSchedule *KeyfactorCommonSchedulingKeyfactorSchedule `json:"KeyfactorSchedule,omitempty"`
	CertificateCollectionId *int32 `json:"CertificateCollectionId,omitempty"`
	EmailRecipients []string `json:"EmailRecipients,omitempty"`
	RuntimeParameters *map[string]string `json:"RuntimeParameters,omitempty"`
}

// NewModelsReportSchedule instantiates a new ModelsReportSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsReportSchedule() *ModelsReportSchedule {
	this := ModelsReportSchedule{}
	return &this
}

// NewModelsReportScheduleWithDefaults instantiates a new ModelsReportSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsReportScheduleWithDefaults() *ModelsReportSchedule {
	this := ModelsReportSchedule{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsReportSchedule) SetId(v int32) {
	o.Id = &v
}

// GetSendReport returns the SendReport field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetSendReport() bool {
	if o == nil || isNil(o.SendReport) {
		var ret bool
		return ret
	}
	return *o.SendReport
}

// GetSendReportOk returns a tuple with the SendReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetSendReportOk() (*bool, bool) {
	if o == nil || isNil(o.SendReport) {
		return nil, false
	}
	return o.SendReport, true
}

// HasSendReport returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasSendReport() bool {
	if o != nil && !isNil(o.SendReport) {
		return true
	}

	return false
}

// SetSendReport gets a reference to the given bool and assigns it to the SendReport field.
func (o *ModelsReportSchedule) SetSendReport(v bool) {
	o.SendReport = &v
}

// GetSaveReport returns the SaveReport field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetSaveReport() bool {
	if o == nil || isNil(o.SaveReport) {
		var ret bool
		return ret
	}
	return *o.SaveReport
}

// GetSaveReportOk returns a tuple with the SaveReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetSaveReportOk() (*bool, bool) {
	if o == nil || isNil(o.SaveReport) {
		return nil, false
	}
	return o.SaveReport, true
}

// HasSaveReport returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasSaveReport() bool {
	if o != nil && !isNil(o.SaveReport) {
		return true
	}

	return false
}

// SetSaveReport gets a reference to the given bool and assigns it to the SaveReport field.
func (o *ModelsReportSchedule) SetSaveReport(v bool) {
	o.SaveReport = &v
}

// GetSaveReportPath returns the SaveReportPath field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetSaveReportPath() string {
	if o == nil || isNil(o.SaveReportPath) {
		var ret string
		return ret
	}
	return *o.SaveReportPath
}

// GetSaveReportPathOk returns a tuple with the SaveReportPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetSaveReportPathOk() (*string, bool) {
	if o == nil || isNil(o.SaveReportPath) {
		return nil, false
	}
	return o.SaveReportPath, true
}

// HasSaveReportPath returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasSaveReportPath() bool {
	if o != nil && !isNil(o.SaveReportPath) {
		return true
	}

	return false
}

// SetSaveReportPath gets a reference to the given string and assigns it to the SaveReportPath field.
func (o *ModelsReportSchedule) SetSaveReportPath(v string) {
	o.SaveReportPath = &v
}

// GetReportFormat returns the ReportFormat field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetReportFormat() string {
	if o == nil || isNil(o.ReportFormat) {
		var ret string
		return ret
	}
	return *o.ReportFormat
}

// GetReportFormatOk returns a tuple with the ReportFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetReportFormatOk() (*string, bool) {
	if o == nil || isNil(o.ReportFormat) {
		return nil, false
	}
	return o.ReportFormat, true
}

// HasReportFormat returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasReportFormat() bool {
	if o != nil && !isNil(o.ReportFormat) {
		return true
	}

	return false
}

// SetReportFormat gets a reference to the given string and assigns it to the ReportFormat field.
func (o *ModelsReportSchedule) SetReportFormat(v string) {
	o.ReportFormat = &v
}

// GetKeyfactorSchedule returns the KeyfactorSchedule field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetKeyfactorSchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.KeyfactorSchedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.KeyfactorSchedule
}

// GetKeyfactorScheduleOk returns a tuple with the KeyfactorSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetKeyfactorScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.KeyfactorSchedule) {
		return nil, false
	}
	return o.KeyfactorSchedule, true
}

// HasKeyfactorSchedule returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasKeyfactorSchedule() bool {
	if o != nil && !isNil(o.KeyfactorSchedule) {
		return true
	}

	return false
}

// SetKeyfactorSchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the KeyfactorSchedule field.
func (o *ModelsReportSchedule) SetKeyfactorSchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.KeyfactorSchedule = &v
}

// GetCertificateCollectionId returns the CertificateCollectionId field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetCertificateCollectionId() int32 {
	if o == nil || isNil(o.CertificateCollectionId) {
		var ret int32
		return ret
	}
	return *o.CertificateCollectionId
}

// GetCertificateCollectionIdOk returns a tuple with the CertificateCollectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetCertificateCollectionIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateCollectionId) {
		return nil, false
	}
	return o.CertificateCollectionId, true
}

// HasCertificateCollectionId returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasCertificateCollectionId() bool {
	if o != nil && !isNil(o.CertificateCollectionId) {
		return true
	}

	return false
}

// SetCertificateCollectionId gets a reference to the given int32 and assigns it to the CertificateCollectionId field.
func (o *ModelsReportSchedule) SetCertificateCollectionId(v int32) {
	o.CertificateCollectionId = &v
}

// GetEmailRecipients returns the EmailRecipients field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetEmailRecipients() []string {
	if o == nil || isNil(o.EmailRecipients) {
		var ret []string
		return ret
	}
	return o.EmailRecipients
}

// GetEmailRecipientsOk returns a tuple with the EmailRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetEmailRecipientsOk() ([]string, bool) {
	if o == nil || isNil(o.EmailRecipients) {
		return nil, false
	}
	return o.EmailRecipients, true
}

// HasEmailRecipients returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasEmailRecipients() bool {
	if o != nil && !isNil(o.EmailRecipients) {
		return true
	}

	return false
}

// SetEmailRecipients gets a reference to the given []string and assigns it to the EmailRecipients field.
func (o *ModelsReportSchedule) SetEmailRecipients(v []string) {
	o.EmailRecipients = v
}

// GetRuntimeParameters returns the RuntimeParameters field value if set, zero value otherwise.
func (o *ModelsReportSchedule) GetRuntimeParameters() map[string]string {
	if o == nil || isNil(o.RuntimeParameters) {
		var ret map[string]string
		return ret
	}
	return *o.RuntimeParameters
}

// GetRuntimeParametersOk returns a tuple with the RuntimeParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportSchedule) GetRuntimeParametersOk() (*map[string]string, bool) {
	if o == nil || isNil(o.RuntimeParameters) {
		return nil, false
	}
	return o.RuntimeParameters, true
}

// HasRuntimeParameters returns a boolean if a field has been set.
func (o *ModelsReportSchedule) HasRuntimeParameters() bool {
	if o != nil && !isNil(o.RuntimeParameters) {
		return true
	}

	return false
}

// SetRuntimeParameters gets a reference to the given map[string]string and assigns it to the RuntimeParameters field.
func (o *ModelsReportSchedule) SetRuntimeParameters(v map[string]string) {
	o.RuntimeParameters = &v
}

func (o ModelsReportSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsReportSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.SendReport) {
		toSerialize["SendReport"] = o.SendReport
	}
	if !isNil(o.SaveReport) {
		toSerialize["SaveReport"] = o.SaveReport
	}
	if !isNil(o.SaveReportPath) {
		toSerialize["SaveReportPath"] = o.SaveReportPath
	}
	if !isNil(o.ReportFormat) {
		toSerialize["ReportFormat"] = o.ReportFormat
	}
	if !isNil(o.KeyfactorSchedule) {
		toSerialize["KeyfactorSchedule"] = o.KeyfactorSchedule
	}
	if !isNil(o.CertificateCollectionId) {
		toSerialize["CertificateCollectionId"] = o.CertificateCollectionId
	}
	if !isNil(o.EmailRecipients) {
		toSerialize["EmailRecipients"] = o.EmailRecipients
	}
	if !isNil(o.RuntimeParameters) {
		toSerialize["RuntimeParameters"] = o.RuntimeParameters
	}
	return toSerialize, nil
}

type NullableModelsReportSchedule struct {
	value *ModelsReportSchedule
	isSet bool
}

func (v NullableModelsReportSchedule) Get() *ModelsReportSchedule {
	return v.value
}

func (v *NullableModelsReportSchedule) Set(val *ModelsReportSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsReportSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsReportSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsReportSchedule(val *ModelsReportSchedule) *NullableModelsReportSchedule {
	return &NullableModelsReportSchedule{value: val, isSet: true}
}

func (v NullableModelsReportSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsReportSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


