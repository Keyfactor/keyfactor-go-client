/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsEnrollmentRenewalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsEnrollmentRenewalRequest{}

// ModelsEnrollmentRenewalRequest struct for ModelsEnrollmentRenewalRequest
type ModelsEnrollmentRenewalRequest struct {
	CertificateId *int32 `json:"CertificateId,omitempty"`
	Thumbprint *string `json:"Thumbprint,omitempty"`
	CertificateAuthority *string `json:"CertificateAuthority,omitempty"`
	Template *string `json:"Template,omitempty"`
	Timestamp *time.Time `json:"Timestamp,omitempty"`
}

// NewModelsEnrollmentRenewalRequest instantiates a new ModelsEnrollmentRenewalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsEnrollmentRenewalRequest() *ModelsEnrollmentRenewalRequest {
	this := ModelsEnrollmentRenewalRequest{}
	return &this
}

// NewModelsEnrollmentRenewalRequestWithDefaults instantiates a new ModelsEnrollmentRenewalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsEnrollmentRenewalRequestWithDefaults() *ModelsEnrollmentRenewalRequest {
	this := ModelsEnrollmentRenewalRequest{}
	return &this
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *ModelsEnrollmentRenewalRequest) GetCertificateId() int32 {
	if o == nil || isNil(o.CertificateId) {
		var ret int32
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentRenewalRequest) GetCertificateIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasCertificateId() bool {
	if o != nil && !isNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given int32 and assigns it to the CertificateId field.
func (o *ModelsEnrollmentRenewalRequest) SetCertificateId(v int32) {
	o.CertificateId = &v
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise.
func (o *ModelsEnrollmentRenewalRequest) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint) {
		var ret string
		return ret
	}
	return *o.Thumbprint
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentRenewalRequest) GetThumbprintOk() (*string, bool) {
	if o == nil || isNil(o.Thumbprint) {
		return nil, false
	}
	return o.Thumbprint, true
}

// HasThumbprint returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasThumbprint() bool {
	if o != nil && !isNil(o.Thumbprint) {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given string and assigns it to the Thumbprint field.
func (o *ModelsEnrollmentRenewalRequest) SetThumbprint(v string) {
	o.Thumbprint = &v
}

// GetCertificateAuthority returns the CertificateAuthority field value if set, zero value otherwise.
func (o *ModelsEnrollmentRenewalRequest) GetCertificateAuthority() string {
	if o == nil || isNil(o.CertificateAuthority) {
		var ret string
		return ret
	}
	return *o.CertificateAuthority
}

// GetCertificateAuthorityOk returns a tuple with the CertificateAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentRenewalRequest) GetCertificateAuthorityOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthority) {
		return nil, false
	}
	return o.CertificateAuthority, true
}

// HasCertificateAuthority returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasCertificateAuthority() bool {
	if o != nil && !isNil(o.CertificateAuthority) {
		return true
	}

	return false
}

// SetCertificateAuthority gets a reference to the given string and assigns it to the CertificateAuthority field.
func (o *ModelsEnrollmentRenewalRequest) SetCertificateAuthority(v string) {
	o.CertificateAuthority = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *ModelsEnrollmentRenewalRequest) GetTemplate() string {
	if o == nil || isNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentRenewalRequest) GetTemplateOk() (*string, bool) {
	if o == nil || isNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasTemplate() bool {
	if o != nil && !isNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *ModelsEnrollmentRenewalRequest) SetTemplate(v string) {
	o.Template = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelsEnrollmentRenewalRequest) GetTimestamp() time.Time {
	if o == nil || isNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentRenewalRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ModelsEnrollmentRenewalRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o ModelsEnrollmentRenewalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsEnrollmentRenewalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateId) {
		toSerialize["CertificateId"] = o.CertificateId
	}
	if !isNil(o.Thumbprint) {
		toSerialize["Thumbprint"] = o.Thumbprint
	}
	if !isNil(o.CertificateAuthority) {
		toSerialize["CertificateAuthority"] = o.CertificateAuthority
	}
	if !isNil(o.Template) {
		toSerialize["Template"] = o.Template
	}
	if !isNil(o.Timestamp) {
		toSerialize["Timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableModelsEnrollmentRenewalRequest struct {
	value *ModelsEnrollmentRenewalRequest
	isSet bool
}

func (v NullableModelsEnrollmentRenewalRequest) Get() *ModelsEnrollmentRenewalRequest {
	return v.value
}

func (v *NullableModelsEnrollmentRenewalRequest) Set(val *ModelsEnrollmentRenewalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsEnrollmentRenewalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsEnrollmentRenewalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsEnrollmentRenewalRequest(val *ModelsEnrollmentRenewalRequest) *NullableModelsEnrollmentRenewalRequest {
	return &NullableModelsEnrollmentRenewalRequest{value: val, isSet: true}
}

func (v NullableModelsEnrollmentRenewalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsEnrollmentRenewalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


