/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the ModelsSSLEndpointHistoryResponseCertificateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSLEndpointHistoryResponseCertificateModel{}

// ModelsSSLEndpointHistoryResponseCertificateModel struct for ModelsSSLEndpointHistoryResponseCertificateModel
type ModelsSSLEndpointHistoryResponseCertificateModel struct {
	Id *int32 `json:"Id,omitempty"`
	IssuedDN NullableString `json:"IssuedDN,omitempty"`
	SerialNumber *string `json:"SerialNumber,omitempty"`
	NotBefore *time.Time `json:"NotBefore,omitempty"`
	NotAfter *time.Time `json:"NotAfter,omitempty"`
	SigningAlgorithm *string `json:"SigningAlgorithm,omitempty"`
	Thumbprint *string `json:"Thumbprint,omitempty"`
	IssuerDN NullableString `json:"IssuerDN,omitempty"`
	IssuedCN NullableString `json:"IssuedCN,omitempty"`
	SubjectAltNameElements []ModelsSubjectAlternativeName `json:"SubjectAltNameElements,omitempty"`
}

// NewModelsSSLEndpointHistoryResponseCertificateModel instantiates a new ModelsSSLEndpointHistoryResponseCertificateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSLEndpointHistoryResponseCertificateModel() *ModelsSSLEndpointHistoryResponseCertificateModel {
	this := ModelsSSLEndpointHistoryResponseCertificateModel{}
	return &this
}

// NewModelsSSLEndpointHistoryResponseCertificateModelWithDefaults instantiates a new ModelsSSLEndpointHistoryResponseCertificateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSLEndpointHistoryResponseCertificateModelWithDefaults() *ModelsSSLEndpointHistoryResponseCertificateModel {
	this := ModelsSSLEndpointHistoryResponseCertificateModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetId(v int32) {
	o.Id = &v
}

// GetIssuedDN returns the IssuedDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedDN() string {
	if o == nil || isNil(o.IssuedDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedDN.Get()
}

// GetIssuedDNOk returns a tuple with the IssuedDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedDN.Get(), o.IssuedDN.IsSet()
}

// HasIssuedDN returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasIssuedDN() bool {
	if o != nil && o.IssuedDN.IsSet() {
		return true
	}

	return false
}

// SetIssuedDN gets a reference to the given NullableString and assigns it to the IssuedDN field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedDN(v string) {
	o.IssuedDN.Set(&v)
}
// SetIssuedDNNil sets the value for IssuedDN to be an explicit nil
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedDNNil() {
	o.IssuedDN.Set(nil)
}

// UnsetIssuedDN ensures that no value is present for IssuedDN, not even an explicit nil
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) UnsetIssuedDN() {
	o.IssuedDN.Unset()
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetSerialNumber() string {
	if o == nil || isNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetSerialNumberOk() (*string, bool) {
	if o == nil || isNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasSerialNumber() bool {
	if o != nil && !isNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetNotBefore() time.Time {
	if o == nil || isNil(o.NotBefore) {
		var ret time.Time
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetNotBeforeOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotBefore) {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasNotBefore() bool {
	if o != nil && !isNil(o.NotBefore) {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given time.Time and assigns it to the NotBefore field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetNotBefore(v time.Time) {
	o.NotBefore = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetNotAfter() time.Time {
	if o == nil || isNil(o.NotAfter) {
		var ret time.Time
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetNotAfterOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotAfter) {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasNotAfter() bool {
	if o != nil && !isNil(o.NotAfter) {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given time.Time and assigns it to the NotAfter field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetNotAfter(v time.Time) {
	o.NotAfter = &v
}

// GetSigningAlgorithm returns the SigningAlgorithm field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetSigningAlgorithm() string {
	if o == nil || isNil(o.SigningAlgorithm) {
		var ret string
		return ret
	}
	return *o.SigningAlgorithm
}

// GetSigningAlgorithmOk returns a tuple with the SigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetSigningAlgorithmOk() (*string, bool) {
	if o == nil || isNil(o.SigningAlgorithm) {
		return nil, false
	}
	return o.SigningAlgorithm, true
}

// HasSigningAlgorithm returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasSigningAlgorithm() bool {
	if o != nil && !isNil(o.SigningAlgorithm) {
		return true
	}

	return false
}

// SetSigningAlgorithm gets a reference to the given string and assigns it to the SigningAlgorithm field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetSigningAlgorithm(v string) {
	o.SigningAlgorithm = &v
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint) {
		var ret string
		return ret
	}
	return *o.Thumbprint
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetThumbprintOk() (*string, bool) {
	if o == nil || isNil(o.Thumbprint) {
		return nil, false
	}
	return o.Thumbprint, true
}

// HasThumbprint returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasThumbprint() bool {
	if o != nil && !isNil(o.Thumbprint) {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given string and assigns it to the Thumbprint field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetThumbprint(v string) {
	o.Thumbprint = &v
}

// GetIssuerDN returns the IssuerDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetIssuerDN() string {
	if o == nil || isNil(o.IssuerDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuerDN.Get()
}

// GetIssuerDNOk returns a tuple with the IssuerDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetIssuerDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuerDN.Get(), o.IssuerDN.IsSet()
}

// HasIssuerDN returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasIssuerDN() bool {
	if o != nil && o.IssuerDN.IsSet() {
		return true
	}

	return false
}

// SetIssuerDN gets a reference to the given NullableString and assigns it to the IssuerDN field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetIssuerDN(v string) {
	o.IssuerDN.Set(&v)
}
// SetIssuerDNNil sets the value for IssuerDN to be an explicit nil
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetIssuerDNNil() {
	o.IssuerDN.Set(nil)
}

// UnsetIssuerDN ensures that no value is present for IssuerDN, not even an explicit nil
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) UnsetIssuerDN() {
	o.IssuerDN.Unset()
}

// GetIssuedCN returns the IssuedCN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedCN() string {
	if o == nil || isNil(o.IssuedCN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedCN.Get()
}

// GetIssuedCNOk returns a tuple with the IssuedCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedCNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedCN.Get(), o.IssuedCN.IsSet()
}

// HasIssuedCN returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasIssuedCN() bool {
	if o != nil && o.IssuedCN.IsSet() {
		return true
	}

	return false
}

// SetIssuedCN gets a reference to the given NullableString and assigns it to the IssuedCN field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedCN(v string) {
	o.IssuedCN.Set(&v)
}
// SetIssuedCNNil sets the value for IssuedCN to be an explicit nil
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedCNNil() {
	o.IssuedCN.Set(nil)
}

// UnsetIssuedCN ensures that no value is present for IssuedCN, not even an explicit nil
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) UnsetIssuedCN() {
	o.IssuedCN.Unset()
}

// GetSubjectAltNameElements returns the SubjectAltNameElements field value if set, zero value otherwise.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetSubjectAltNameElements() []ModelsSubjectAlternativeName {
	if o == nil || isNil(o.SubjectAltNameElements) {
		var ret []ModelsSubjectAlternativeName
		return ret
	}
	return o.SubjectAltNameElements
}

// GetSubjectAltNameElementsOk returns a tuple with the SubjectAltNameElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) GetSubjectAltNameElementsOk() ([]ModelsSubjectAlternativeName, bool) {
	if o == nil || isNil(o.SubjectAltNameElements) {
		return nil, false
	}
	return o.SubjectAltNameElements, true
}

// HasSubjectAltNameElements returns a boolean if a field has been set.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) HasSubjectAltNameElements() bool {
	if o != nil && !isNil(o.SubjectAltNameElements) {
		return true
	}

	return false
}

// SetSubjectAltNameElements gets a reference to the given []ModelsSubjectAlternativeName and assigns it to the SubjectAltNameElements field.
func (o *ModelsSSLEndpointHistoryResponseCertificateModel) SetSubjectAltNameElements(v []ModelsSubjectAlternativeName) {
	o.SubjectAltNameElements = v
}

func (o ModelsSSLEndpointHistoryResponseCertificateModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSLEndpointHistoryResponseCertificateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.IssuedDN.IsSet() {
		toSerialize["IssuedDN"] = o.IssuedDN.Get()
	}
	if !isNil(o.SerialNumber) {
		toSerialize["SerialNumber"] = o.SerialNumber
	}
	if !isNil(o.NotBefore) {
		toSerialize["NotBefore"] = o.NotBefore
	}
	if !isNil(o.NotAfter) {
		toSerialize["NotAfter"] = o.NotAfter
	}
	if !isNil(o.SigningAlgorithm) {
		toSerialize["SigningAlgorithm"] = o.SigningAlgorithm
	}
	if !isNil(o.Thumbprint) {
		toSerialize["Thumbprint"] = o.Thumbprint
	}
	if o.IssuerDN.IsSet() {
		toSerialize["IssuerDN"] = o.IssuerDN.Get()
	}
	if o.IssuedCN.IsSet() {
		toSerialize["IssuedCN"] = o.IssuedCN.Get()
	}
	if !isNil(o.SubjectAltNameElements) {
		toSerialize["SubjectAltNameElements"] = o.SubjectAltNameElements
	}
	return toSerialize, nil
}

type NullableModelsSSLEndpointHistoryResponseCertificateModel struct {
	value *ModelsSSLEndpointHistoryResponseCertificateModel
	isSet bool
}

func (v NullableModelsSSLEndpointHistoryResponseCertificateModel) Get() *ModelsSSLEndpointHistoryResponseCertificateModel {
	return v.value
}

func (v *NullableModelsSSLEndpointHistoryResponseCertificateModel) Set(val *ModelsSSLEndpointHistoryResponseCertificateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSLEndpointHistoryResponseCertificateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSLEndpointHistoryResponseCertificateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSLEndpointHistoryResponseCertificateModel(val *ModelsSSLEndpointHistoryResponseCertificateModel) *NullableModelsSSLEndpointHistoryResponseCertificateModel {
	return &NullableModelsSSLEndpointHistoryResponseCertificateModel{value: val, isSet: true}
}

func (v NullableModelsSSLEndpointHistoryResponseCertificateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSLEndpointHistoryResponseCertificateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


