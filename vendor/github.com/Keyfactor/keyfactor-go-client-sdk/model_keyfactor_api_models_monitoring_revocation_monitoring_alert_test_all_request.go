/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest{}

// KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest struct for KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest
type KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest struct {
	EvaluationDate *time.Time `json:"EvaluationDate,omitempty"`
	SendAlerts *bool `json:"SendAlerts,omitempty"`
}

// NewKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest instantiates a new KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest() *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest {
	this := KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest{}
	return &this
}

// NewKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequestWithDefaults instantiates a new KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequestWithDefaults() *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest {
	this := KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest{}
	return &this
}

// GetEvaluationDate returns the EvaluationDate field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) GetEvaluationDate() time.Time {
	if o == nil || isNil(o.EvaluationDate) {
		var ret time.Time
		return ret
	}
	return *o.EvaluationDate
}

// GetEvaluationDateOk returns a tuple with the EvaluationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) GetEvaluationDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.EvaluationDate) {
		return nil, false
	}
	return o.EvaluationDate, true
}

// HasEvaluationDate returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) HasEvaluationDate() bool {
	if o != nil && !isNil(o.EvaluationDate) {
		return true
	}

	return false
}

// SetEvaluationDate gets a reference to the given time.Time and assigns it to the EvaluationDate field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) SetEvaluationDate(v time.Time) {
	o.EvaluationDate = &v
}

// GetSendAlerts returns the SendAlerts field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) GetSendAlerts() bool {
	if o == nil || isNil(o.SendAlerts) {
		var ret bool
		return ret
	}
	return *o.SendAlerts
}

// GetSendAlertsOk returns a tuple with the SendAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) GetSendAlertsOk() (*bool, bool) {
	if o == nil || isNil(o.SendAlerts) {
		return nil, false
	}
	return o.SendAlerts, true
}

// HasSendAlerts returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) HasSendAlerts() bool {
	if o != nil && !isNil(o.SendAlerts) {
		return true
	}

	return false
}

// SetSendAlerts gets a reference to the given bool and assigns it to the SendAlerts field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) SetSendAlerts(v bool) {
	o.SendAlerts = &v
}

func (o KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EvaluationDate) {
		toSerialize["EvaluationDate"] = o.EvaluationDate
	}
	if !isNil(o.SendAlerts) {
		toSerialize["SendAlerts"] = o.SendAlerts
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest struct {
	value *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) Get() *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) Set(val *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest(val *KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) *NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest {
	return &NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


