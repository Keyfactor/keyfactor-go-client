/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiPAMProviderTypeParameterCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiPAMProviderTypeParameterCreateRequest{}

// KeyfactorApiPAMProviderTypeParameterCreateRequest struct for KeyfactorApiPAMProviderTypeParameterCreateRequest
type KeyfactorApiPAMProviderTypeParameterCreateRequest struct {
	Name string `json:"Name"`
	DisplayName *string `json:"DisplayName,omitempty"`
	DataType *int32 `json:"DataType,omitempty"`
	InstanceLevel *bool `json:"InstanceLevel,omitempty"`
}

// NewKeyfactorApiPAMProviderTypeParameterCreateRequest instantiates a new KeyfactorApiPAMProviderTypeParameterCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiPAMProviderTypeParameterCreateRequest(name string) *KeyfactorApiPAMProviderTypeParameterCreateRequest {
	this := KeyfactorApiPAMProviderTypeParameterCreateRequest{}
	this.Name = name
	return &this
}

// NewKeyfactorApiPAMProviderTypeParameterCreateRequestWithDefaults instantiates a new KeyfactorApiPAMProviderTypeParameterCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiPAMProviderTypeParameterCreateRequestWithDefaults() *KeyfactorApiPAMProviderTypeParameterCreateRequest {
	this := KeyfactorApiPAMProviderTypeParameterCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetDataType() int32 {
	if o == nil || isNil(o.DataType) {
		var ret int32
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetDataTypeOk() (*int32, bool) {
	if o == nil || isNil(o.DataType) {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) HasDataType() bool {
	if o != nil && !isNil(o.DataType) {
		return true
	}

	return false
}

// SetDataType gets a reference to the given int32 and assigns it to the DataType field.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) SetDataType(v int32) {
	o.DataType = &v
}

// GetInstanceLevel returns the InstanceLevel field value if set, zero value otherwise.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetInstanceLevel() bool {
	if o == nil || isNil(o.InstanceLevel) {
		var ret bool
		return ret
	}
	return *o.InstanceLevel
}

// GetInstanceLevelOk returns a tuple with the InstanceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) GetInstanceLevelOk() (*bool, bool) {
	if o == nil || isNil(o.InstanceLevel) {
		return nil, false
	}
	return o.InstanceLevel, true
}

// HasInstanceLevel returns a boolean if a field has been set.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) HasInstanceLevel() bool {
	if o != nil && !isNil(o.InstanceLevel) {
		return true
	}

	return false
}

// SetInstanceLevel gets a reference to the given bool and assigns it to the InstanceLevel field.
func (o *KeyfactorApiPAMProviderTypeParameterCreateRequest) SetInstanceLevel(v bool) {
	o.InstanceLevel = &v
}

func (o KeyfactorApiPAMProviderTypeParameterCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiPAMProviderTypeParameterCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Name"] = o.Name
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !isNil(o.DataType) {
		toSerialize["DataType"] = o.DataType
	}
	if !isNil(o.InstanceLevel) {
		toSerialize["InstanceLevel"] = o.InstanceLevel
	}
	return toSerialize, nil
}

type NullableKeyfactorApiPAMProviderTypeParameterCreateRequest struct {
	value *KeyfactorApiPAMProviderTypeParameterCreateRequest
	isSet bool
}

func (v NullableKeyfactorApiPAMProviderTypeParameterCreateRequest) Get() *KeyfactorApiPAMProviderTypeParameterCreateRequest {
	return v.value
}

func (v *NullableKeyfactorApiPAMProviderTypeParameterCreateRequest) Set(val *KeyfactorApiPAMProviderTypeParameterCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiPAMProviderTypeParameterCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiPAMProviderTypeParameterCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiPAMProviderTypeParameterCreateRequest(val *KeyfactorApiPAMProviderTypeParameterCreateRequest) *NullableKeyfactorApiPAMProviderTypeParameterCreateRequest {
	return &NullableKeyfactorApiPAMProviderTypeParameterCreateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiPAMProviderTypeParameterCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiPAMProviderTypeParameterCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


