/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsEnrollmentManagementStoreType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsEnrollmentManagementStoreType{}

// ModelsEnrollmentManagementStoreType struct for ModelsEnrollmentManagementStoreType
type ModelsEnrollmentManagementStoreType struct {
	StoreTypeId *int32 `json:"StoreTypeId,omitempty"`
	Alias *string `json:"Alias,omitempty"`
	Overwrite *bool `json:"Overwrite,omitempty"`
	Properties []map[string]interface{} `json:"Properties,omitempty"`
}

// NewModelsEnrollmentManagementStoreType instantiates a new ModelsEnrollmentManagementStoreType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsEnrollmentManagementStoreType() *ModelsEnrollmentManagementStoreType {
	this := ModelsEnrollmentManagementStoreType{}
	return &this
}

// NewModelsEnrollmentManagementStoreTypeWithDefaults instantiates a new ModelsEnrollmentManagementStoreType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsEnrollmentManagementStoreTypeWithDefaults() *ModelsEnrollmentManagementStoreType {
	this := ModelsEnrollmentManagementStoreType{}
	return &this
}

// GetStoreTypeId returns the StoreTypeId field value if set, zero value otherwise.
func (o *ModelsEnrollmentManagementStoreType) GetStoreTypeId() int32 {
	if o == nil || isNil(o.StoreTypeId) {
		var ret int32
		return ret
	}
	return *o.StoreTypeId
}

// GetStoreTypeIdOk returns a tuple with the StoreTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentManagementStoreType) GetStoreTypeIdOk() (*int32, bool) {
	if o == nil || isNil(o.StoreTypeId) {
		return nil, false
	}
	return o.StoreTypeId, true
}

// HasStoreTypeId returns a boolean if a field has been set.
func (o *ModelsEnrollmentManagementStoreType) HasStoreTypeId() bool {
	if o != nil && !isNil(o.StoreTypeId) {
		return true
	}

	return false
}

// SetStoreTypeId gets a reference to the given int32 and assigns it to the StoreTypeId field.
func (o *ModelsEnrollmentManagementStoreType) SetStoreTypeId(v int32) {
	o.StoreTypeId = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *ModelsEnrollmentManagementStoreType) GetAlias() string {
	if o == nil || isNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentManagementStoreType) GetAliasOk() (*string, bool) {
	if o == nil || isNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *ModelsEnrollmentManagementStoreType) HasAlias() bool {
	if o != nil && !isNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *ModelsEnrollmentManagementStoreType) SetAlias(v string) {
	o.Alias = &v
}

// GetOverwrite returns the Overwrite field value if set, zero value otherwise.
func (o *ModelsEnrollmentManagementStoreType) GetOverwrite() bool {
	if o == nil || isNil(o.Overwrite) {
		var ret bool
		return ret
	}
	return *o.Overwrite
}

// GetOverwriteOk returns a tuple with the Overwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentManagementStoreType) GetOverwriteOk() (*bool, bool) {
	if o == nil || isNil(o.Overwrite) {
		return nil, false
	}
	return o.Overwrite, true
}

// HasOverwrite returns a boolean if a field has been set.
func (o *ModelsEnrollmentManagementStoreType) HasOverwrite() bool {
	if o != nil && !isNil(o.Overwrite) {
		return true
	}

	return false
}

// SetOverwrite gets a reference to the given bool and assigns it to the Overwrite field.
func (o *ModelsEnrollmentManagementStoreType) SetOverwrite(v bool) {
	o.Overwrite = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ModelsEnrollmentManagementStoreType) GetProperties() []map[string]interface{} {
	if o == nil || isNil(o.Properties) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentManagementStoreType) GetPropertiesOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ModelsEnrollmentManagementStoreType) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []map[string]interface{} and assigns it to the Properties field.
func (o *ModelsEnrollmentManagementStoreType) SetProperties(v []map[string]interface{}) {
	o.Properties = v
}

func (o ModelsEnrollmentManagementStoreType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsEnrollmentManagementStoreType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StoreTypeId) {
		toSerialize["StoreTypeId"] = o.StoreTypeId
	}
	if !isNil(o.Alias) {
		toSerialize["Alias"] = o.Alias
	}
	if !isNil(o.Overwrite) {
		toSerialize["Overwrite"] = o.Overwrite
	}
	if !isNil(o.Properties) {
		toSerialize["Properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableModelsEnrollmentManagementStoreType struct {
	value *ModelsEnrollmentManagementStoreType
	isSet bool
}

func (v NullableModelsEnrollmentManagementStoreType) Get() *ModelsEnrollmentManagementStoreType {
	return v.value
}

func (v *NullableModelsEnrollmentManagementStoreType) Set(val *ModelsEnrollmentManagementStoreType) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsEnrollmentManagementStoreType) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsEnrollmentManagementStoreType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsEnrollmentManagementStoreType(val *ModelsEnrollmentManagementStoreType) *NullableModelsEnrollmentManagementStoreType {
	return &NullableModelsEnrollmentManagementStoreType{value: val, isSet: true}
}

func (v NullableModelsEnrollmentManagementStoreType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsEnrollmentManagementStoreType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


