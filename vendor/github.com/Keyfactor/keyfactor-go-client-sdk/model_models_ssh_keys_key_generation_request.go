/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsSSHKeysKeyGenerationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHKeysKeyGenerationRequest{}

// ModelsSSHKeysKeyGenerationRequest struct for ModelsSSHKeysKeyGenerationRequest
type ModelsSSHKeysKeyGenerationRequest struct {
	KeyType string `json:"KeyType"`
	PrivateKeyFormat string `json:"PrivateKeyFormat"`
	KeyLength int32 `json:"KeyLength"`
	Email string `json:"Email"`
	Password string `json:"Password"`
	Comment *string `json:"Comment,omitempty"`
}

// NewModelsSSHKeysKeyGenerationRequest instantiates a new ModelsSSHKeysKeyGenerationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHKeysKeyGenerationRequest(keyType string, privateKeyFormat string, keyLength int32, email string, password string) *ModelsSSHKeysKeyGenerationRequest {
	this := ModelsSSHKeysKeyGenerationRequest{}
	this.KeyType = keyType
	this.PrivateKeyFormat = privateKeyFormat
	this.KeyLength = keyLength
	this.Email = email
	this.Password = password
	return &this
}

// NewModelsSSHKeysKeyGenerationRequestWithDefaults instantiates a new ModelsSSHKeysKeyGenerationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHKeysKeyGenerationRequestWithDefaults() *ModelsSSHKeysKeyGenerationRequest {
	this := ModelsSSHKeysKeyGenerationRequest{}
	return &this
}

// GetKeyType returns the KeyType field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyType, true
}

// SetKeyType sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetKeyType(v string) {
	o.KeyType = v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetPrivateKeyFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateKeyFormat, true
}

// SetPrivateKeyFormat sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = v
}

// GetKeyLength returns the KeyLength field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.KeyLength
}

// GetKeyLengthOk returns a tuple with the KeyLength field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyLength, true
}

// SetKeyLength sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetKeyLength(v int32) {
	o.KeyLength = v
}

// GetEmail returns the Email field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetPassword(v string) {
	o.Password = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyGenerationRequest) GetComment() string {
	if o == nil || isNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetCommentOk() (*string, bool) {
	if o == nil || isNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) HasComment() bool {
	if o != nil && !isNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ModelsSSHKeysKeyGenerationRequest) SetComment(v string) {
	o.Comment = &v
}

func (o ModelsSSHKeysKeyGenerationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHKeysKeyGenerationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["KeyType"] = o.KeyType
	toSerialize["PrivateKeyFormat"] = o.PrivateKeyFormat
	toSerialize["KeyLength"] = o.KeyLength
	toSerialize["Email"] = o.Email
	toSerialize["Password"] = o.Password
	if !isNil(o.Comment) {
		toSerialize["Comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableModelsSSHKeysKeyGenerationRequest struct {
	value *ModelsSSHKeysKeyGenerationRequest
	isSet bool
}

func (v NullableModelsSSHKeysKeyGenerationRequest) Get() *ModelsSSHKeysKeyGenerationRequest {
	return v.value
}

func (v *NullableModelsSSHKeysKeyGenerationRequest) Set(val *ModelsSSHKeysKeyGenerationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHKeysKeyGenerationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHKeysKeyGenerationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHKeysKeyGenerationRequest(val *ModelsSSHKeysKeyGenerationRequest) *NullableModelsSSHKeysKeyGenerationRequest {
	return &NullableModelsSSHKeysKeyGenerationRequest{value: val, isSet: true}
}

func (v NullableModelsSSHKeysKeyGenerationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHKeysKeyGenerationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


