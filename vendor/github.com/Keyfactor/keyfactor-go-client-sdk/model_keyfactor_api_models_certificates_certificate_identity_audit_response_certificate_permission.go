/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission{}

// KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission Represents a permission granted to an account for a certificate
type KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission struct {
	// The name of the permission
	Name *string `json:"Name,omitempty"`
	// A list of roles or collections that grant the given permission
	GrantedBy []string `json:"GrantedBy,omitempty"`
}

// NewKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission instantiates a new KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission() *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission {
	this := KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission{}
	return &this
}

// NewKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermissionWithDefaults instantiates a new KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermissionWithDefaults() *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission {
	this := KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) SetName(v string) {
	o.Name = &v
}

// GetGrantedBy returns the GrantedBy field value if set, zero value otherwise.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) GetGrantedBy() []string {
	if o == nil || isNil(o.GrantedBy) {
		var ret []string
		return ret
	}
	return o.GrantedBy
}

// GetGrantedByOk returns a tuple with the GrantedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) GetGrantedByOk() ([]string, bool) {
	if o == nil || isNil(o.GrantedBy) {
		return nil, false
	}
	return o.GrantedBy, true
}

// HasGrantedBy returns a boolean if a field has been set.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) HasGrantedBy() bool {
	if o != nil && !isNil(o.GrantedBy) {
		return true
	}

	return false
}

// SetGrantedBy gets a reference to the given []string and assigns it to the GrantedBy field.
func (o *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) SetGrantedBy(v []string) {
	o.GrantedBy = v
}

func (o KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.GrantedBy) {
		toSerialize["GrantedBy"] = o.GrantedBy
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission struct {
	value *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission
	isSet bool
}

func (v NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) Get() *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission {
	return v.value
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) Set(val *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission(val *KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) *NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission {
	return &NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


