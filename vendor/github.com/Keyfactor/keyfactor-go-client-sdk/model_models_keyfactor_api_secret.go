/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsKeyfactorAPISecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsKeyfactorAPISecret{}

// ModelsKeyfactorAPISecret struct for ModelsKeyfactorAPISecret
type ModelsKeyfactorAPISecret struct {
	SecretValue *string `json:"SecretValue,omitempty"`
	Parameters *map[string]string `json:"Parameters,omitempty"`
	Provider *int32 `json:"Provider,omitempty"`
}

// NewModelsKeyfactorAPISecret instantiates a new ModelsKeyfactorAPISecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsKeyfactorAPISecret() *ModelsKeyfactorAPISecret {
	this := ModelsKeyfactorAPISecret{}
	return &this
}

// NewModelsKeyfactorAPISecretWithDefaults instantiates a new ModelsKeyfactorAPISecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsKeyfactorAPISecretWithDefaults() *ModelsKeyfactorAPISecret {
	this := ModelsKeyfactorAPISecret{}
	return &this
}

// GetSecretValue returns the SecretValue field value if set, zero value otherwise.
func (o *ModelsKeyfactorAPISecret) GetSecretValue() string {
	if o == nil || isNil(o.SecretValue) {
		var ret string
		return ret
	}
	return *o.SecretValue
}

// GetSecretValueOk returns a tuple with the SecretValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsKeyfactorAPISecret) GetSecretValueOk() (*string, bool) {
	if o == nil || isNil(o.SecretValue) {
		return nil, false
	}
	return o.SecretValue, true
}

// HasSecretValue returns a boolean if a field has been set.
func (o *ModelsKeyfactorAPISecret) HasSecretValue() bool {
	if o != nil && !isNil(o.SecretValue) {
		return true
	}

	return false
}

// SetSecretValue gets a reference to the given string and assigns it to the SecretValue field.
func (o *ModelsKeyfactorAPISecret) SetSecretValue(v string) {
	o.SecretValue = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ModelsKeyfactorAPISecret) GetParameters() map[string]string {
	if o == nil || isNil(o.Parameters) {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsKeyfactorAPISecret) GetParametersOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ModelsKeyfactorAPISecret) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *ModelsKeyfactorAPISecret) SetParameters(v map[string]string) {
	o.Parameters = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ModelsKeyfactorAPISecret) GetProvider() int32 {
	if o == nil || isNil(o.Provider) {
		var ret int32
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsKeyfactorAPISecret) GetProviderOk() (*int32, bool) {
	if o == nil || isNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ModelsKeyfactorAPISecret) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given int32 and assigns it to the Provider field.
func (o *ModelsKeyfactorAPISecret) SetProvider(v int32) {
	o.Provider = &v
}

func (o ModelsKeyfactorAPISecret) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsKeyfactorAPISecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SecretValue) {
		toSerialize["SecretValue"] = o.SecretValue
	}
	if !isNil(o.Parameters) {
		toSerialize["Parameters"] = o.Parameters
	}
	if !isNil(o.Provider) {
		toSerialize["Provider"] = o.Provider
	}
	return toSerialize, nil
}

type NullableModelsKeyfactorAPISecret struct {
	value *ModelsKeyfactorAPISecret
	isSet bool
}

func (v NullableModelsKeyfactorAPISecret) Get() *ModelsKeyfactorAPISecret {
	return v.value
}

func (v *NullableModelsKeyfactorAPISecret) Set(val *ModelsKeyfactorAPISecret) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsKeyfactorAPISecret) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsKeyfactorAPISecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsKeyfactorAPISecret(val *ModelsKeyfactorAPISecret) *NullableModelsKeyfactorAPISecret {
	return &NullableModelsKeyfactorAPISecret{value: val, isSet: true}
}

func (v NullableModelsKeyfactorAPISecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsKeyfactorAPISecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


