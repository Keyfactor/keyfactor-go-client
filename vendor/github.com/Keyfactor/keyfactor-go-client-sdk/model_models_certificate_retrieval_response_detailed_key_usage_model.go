/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateRetrievalResponseDetailedKeyUsageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateRetrievalResponseDetailedKeyUsageModel{}

// ModelsCertificateRetrievalResponseDetailedKeyUsageModel struct for ModelsCertificateRetrievalResponseDetailedKeyUsageModel
type ModelsCertificateRetrievalResponseDetailedKeyUsageModel struct {
	CrlSign *bool `json:"CrlSign,omitempty"`
	DataEncipherment *bool `json:"DataEncipherment,omitempty"`
	DecipherOnly *bool `json:"DecipherOnly,omitempty"`
	DigitalSignature *bool `json:"DigitalSignature,omitempty"`
	EncipherOnly *bool `json:"EncipherOnly,omitempty"`
	KeyAgreement *bool `json:"KeyAgreement,omitempty"`
	KeyCertSign *bool `json:"KeyCertSign,omitempty"`
	KeyEncipherment *bool `json:"KeyEncipherment,omitempty"`
	NonRepudiation *bool `json:"NonRepudiation,omitempty"`
	HexCode *string `json:"HexCode,omitempty"`
}

// NewModelsCertificateRetrievalResponseDetailedKeyUsageModel instantiates a new ModelsCertificateRetrievalResponseDetailedKeyUsageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateRetrievalResponseDetailedKeyUsageModel() *ModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	this := ModelsCertificateRetrievalResponseDetailedKeyUsageModel{}
	return &this
}

// NewModelsCertificateRetrievalResponseDetailedKeyUsageModelWithDefaults instantiates a new ModelsCertificateRetrievalResponseDetailedKeyUsageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateRetrievalResponseDetailedKeyUsageModelWithDefaults() *ModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	this := ModelsCertificateRetrievalResponseDetailedKeyUsageModel{}
	return &this
}

// GetCrlSign returns the CrlSign field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetCrlSign() bool {
	if o == nil || isNil(o.CrlSign) {
		var ret bool
		return ret
	}
	return *o.CrlSign
}

// GetCrlSignOk returns a tuple with the CrlSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetCrlSignOk() (*bool, bool) {
	if o == nil || isNil(o.CrlSign) {
		return nil, false
	}
	return o.CrlSign, true
}

// HasCrlSign returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasCrlSign() bool {
	if o != nil && !isNil(o.CrlSign) {
		return true
	}

	return false
}

// SetCrlSign gets a reference to the given bool and assigns it to the CrlSign field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetCrlSign(v bool) {
	o.CrlSign = &v
}

// GetDataEncipherment returns the DataEncipherment field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDataEncipherment() bool {
	if o == nil || isNil(o.DataEncipherment) {
		var ret bool
		return ret
	}
	return *o.DataEncipherment
}

// GetDataEnciphermentOk returns a tuple with the DataEncipherment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDataEnciphermentOk() (*bool, bool) {
	if o == nil || isNil(o.DataEncipherment) {
		return nil, false
	}
	return o.DataEncipherment, true
}

// HasDataEncipherment returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasDataEncipherment() bool {
	if o != nil && !isNil(o.DataEncipherment) {
		return true
	}

	return false
}

// SetDataEncipherment gets a reference to the given bool and assigns it to the DataEncipherment field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetDataEncipherment(v bool) {
	o.DataEncipherment = &v
}

// GetDecipherOnly returns the DecipherOnly field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDecipherOnly() bool {
	if o == nil || isNil(o.DecipherOnly) {
		var ret bool
		return ret
	}
	return *o.DecipherOnly
}

// GetDecipherOnlyOk returns a tuple with the DecipherOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDecipherOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.DecipherOnly) {
		return nil, false
	}
	return o.DecipherOnly, true
}

// HasDecipherOnly returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasDecipherOnly() bool {
	if o != nil && !isNil(o.DecipherOnly) {
		return true
	}

	return false
}

// SetDecipherOnly gets a reference to the given bool and assigns it to the DecipherOnly field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetDecipherOnly(v bool) {
	o.DecipherOnly = &v
}

// GetDigitalSignature returns the DigitalSignature field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDigitalSignature() bool {
	if o == nil || isNil(o.DigitalSignature) {
		var ret bool
		return ret
	}
	return *o.DigitalSignature
}

// GetDigitalSignatureOk returns a tuple with the DigitalSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDigitalSignatureOk() (*bool, bool) {
	if o == nil || isNil(o.DigitalSignature) {
		return nil, false
	}
	return o.DigitalSignature, true
}

// HasDigitalSignature returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasDigitalSignature() bool {
	if o != nil && !isNil(o.DigitalSignature) {
		return true
	}

	return false
}

// SetDigitalSignature gets a reference to the given bool and assigns it to the DigitalSignature field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetDigitalSignature(v bool) {
	o.DigitalSignature = &v
}

// GetEncipherOnly returns the EncipherOnly field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetEncipherOnly() bool {
	if o == nil || isNil(o.EncipherOnly) {
		var ret bool
		return ret
	}
	return *o.EncipherOnly
}

// GetEncipherOnlyOk returns a tuple with the EncipherOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetEncipherOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.EncipherOnly) {
		return nil, false
	}
	return o.EncipherOnly, true
}

// HasEncipherOnly returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasEncipherOnly() bool {
	if o != nil && !isNil(o.EncipherOnly) {
		return true
	}

	return false
}

// SetEncipherOnly gets a reference to the given bool and assigns it to the EncipherOnly field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetEncipherOnly(v bool) {
	o.EncipherOnly = &v
}

// GetKeyAgreement returns the KeyAgreement field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyAgreement() bool {
	if o == nil || isNil(o.KeyAgreement) {
		var ret bool
		return ret
	}
	return *o.KeyAgreement
}

// GetKeyAgreementOk returns a tuple with the KeyAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyAgreementOk() (*bool, bool) {
	if o == nil || isNil(o.KeyAgreement) {
		return nil, false
	}
	return o.KeyAgreement, true
}

// HasKeyAgreement returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasKeyAgreement() bool {
	if o != nil && !isNil(o.KeyAgreement) {
		return true
	}

	return false
}

// SetKeyAgreement gets a reference to the given bool and assigns it to the KeyAgreement field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetKeyAgreement(v bool) {
	o.KeyAgreement = &v
}

// GetKeyCertSign returns the KeyCertSign field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyCertSign() bool {
	if o == nil || isNil(o.KeyCertSign) {
		var ret bool
		return ret
	}
	return *o.KeyCertSign
}

// GetKeyCertSignOk returns a tuple with the KeyCertSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyCertSignOk() (*bool, bool) {
	if o == nil || isNil(o.KeyCertSign) {
		return nil, false
	}
	return o.KeyCertSign, true
}

// HasKeyCertSign returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasKeyCertSign() bool {
	if o != nil && !isNil(o.KeyCertSign) {
		return true
	}

	return false
}

// SetKeyCertSign gets a reference to the given bool and assigns it to the KeyCertSign field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetKeyCertSign(v bool) {
	o.KeyCertSign = &v
}

// GetKeyEncipherment returns the KeyEncipherment field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyEncipherment() bool {
	if o == nil || isNil(o.KeyEncipherment) {
		var ret bool
		return ret
	}
	return *o.KeyEncipherment
}

// GetKeyEnciphermentOk returns a tuple with the KeyEncipherment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyEnciphermentOk() (*bool, bool) {
	if o == nil || isNil(o.KeyEncipherment) {
		return nil, false
	}
	return o.KeyEncipherment, true
}

// HasKeyEncipherment returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasKeyEncipherment() bool {
	if o != nil && !isNil(o.KeyEncipherment) {
		return true
	}

	return false
}

// SetKeyEncipherment gets a reference to the given bool and assigns it to the KeyEncipherment field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetKeyEncipherment(v bool) {
	o.KeyEncipherment = &v
}

// GetNonRepudiation returns the NonRepudiation field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetNonRepudiation() bool {
	if o == nil || isNil(o.NonRepudiation) {
		var ret bool
		return ret
	}
	return *o.NonRepudiation
}

// GetNonRepudiationOk returns a tuple with the NonRepudiation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetNonRepudiationOk() (*bool, bool) {
	if o == nil || isNil(o.NonRepudiation) {
		return nil, false
	}
	return o.NonRepudiation, true
}

// HasNonRepudiation returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasNonRepudiation() bool {
	if o != nil && !isNil(o.NonRepudiation) {
		return true
	}

	return false
}

// SetNonRepudiation gets a reference to the given bool and assigns it to the NonRepudiation field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetNonRepudiation(v bool) {
	o.NonRepudiation = &v
}

// GetHexCode returns the HexCode field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetHexCode() string {
	if o == nil || isNil(o.HexCode) {
		var ret string
		return ret
	}
	return *o.HexCode
}

// GetHexCodeOk returns a tuple with the HexCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetHexCodeOk() (*string, bool) {
	if o == nil || isNil(o.HexCode) {
		return nil, false
	}
	return o.HexCode, true
}

// HasHexCode returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasHexCode() bool {
	if o != nil && !isNil(o.HexCode) {
		return true
	}

	return false
}

// SetHexCode gets a reference to the given string and assigns it to the HexCode field.
func (o *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetHexCode(v string) {
	o.HexCode = &v
}

func (o ModelsCertificateRetrievalResponseDetailedKeyUsageModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateRetrievalResponseDetailedKeyUsageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CrlSign) {
		toSerialize["CrlSign"] = o.CrlSign
	}
	if !isNil(o.DataEncipherment) {
		toSerialize["DataEncipherment"] = o.DataEncipherment
	}
	if !isNil(o.DecipherOnly) {
		toSerialize["DecipherOnly"] = o.DecipherOnly
	}
	if !isNil(o.DigitalSignature) {
		toSerialize["DigitalSignature"] = o.DigitalSignature
	}
	if !isNil(o.EncipherOnly) {
		toSerialize["EncipherOnly"] = o.EncipherOnly
	}
	if !isNil(o.KeyAgreement) {
		toSerialize["KeyAgreement"] = o.KeyAgreement
	}
	if !isNil(o.KeyCertSign) {
		toSerialize["KeyCertSign"] = o.KeyCertSign
	}
	if !isNil(o.KeyEncipherment) {
		toSerialize["KeyEncipherment"] = o.KeyEncipherment
	}
	if !isNil(o.NonRepudiation) {
		toSerialize["NonRepudiation"] = o.NonRepudiation
	}
	if !isNil(o.HexCode) {
		toSerialize["HexCode"] = o.HexCode
	}
	return toSerialize, nil
}

type NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel struct {
	value *ModelsCertificateRetrievalResponseDetailedKeyUsageModel
	isSet bool
}

func (v NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel) Get() *ModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	return v.value
}

func (v *NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel) Set(val *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateRetrievalResponseDetailedKeyUsageModel(val *ModelsCertificateRetrievalResponseDetailedKeyUsageModel) *NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	return &NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel{value: val, isSet: true}
}

func (v NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateRetrievalResponseDetailedKeyUsageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


