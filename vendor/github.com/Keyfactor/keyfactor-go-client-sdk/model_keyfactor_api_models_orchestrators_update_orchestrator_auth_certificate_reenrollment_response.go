/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{}

// KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse struct for KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse
type KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse struct {
	FailedOrchestratorIds []string `json:"FailedOrchestratorIds,omitempty"`
	Status *int32 `json:"Status,omitempty"`
}

// NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse instantiates a new KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse() *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	this := KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{}
	return &this
}

// NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponseWithDefaults instantiates a new KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponseWithDefaults() *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	this := KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{}
	return &this
}

// GetFailedOrchestratorIds returns the FailedOrchestratorIds field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetFailedOrchestratorIds() []string {
	if o == nil || isNil(o.FailedOrchestratorIds) {
		var ret []string
		return ret
	}
	return o.FailedOrchestratorIds
}

// GetFailedOrchestratorIdsOk returns a tuple with the FailedOrchestratorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetFailedOrchestratorIdsOk() ([]string, bool) {
	if o == nil || isNil(o.FailedOrchestratorIds) {
		return nil, false
	}
	return o.FailedOrchestratorIds, true
}

// HasFailedOrchestratorIds returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) HasFailedOrchestratorIds() bool {
	if o != nil && !isNil(o.FailedOrchestratorIds) {
		return true
	}

	return false
}

// SetFailedOrchestratorIds gets a reference to the given []string and assigns it to the FailedOrchestratorIds field.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) SetFailedOrchestratorIds(v []string) {
	o.FailedOrchestratorIds = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetStatus() int32 {
	if o == nil || isNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetStatusOk() (*int32, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) SetStatus(v int32) {
	o.Status = &v
}

func (o KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FailedOrchestratorIds) {
		toSerialize["FailedOrchestratorIds"] = o.FailedOrchestratorIds
	}
	if !isNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse struct {
	value *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) Get() *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) Set(val *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse(val *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	return &NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


