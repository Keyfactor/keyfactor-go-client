/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{}

// KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse struct for KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse
type KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse struct {
	Id *int32 `json:"Id,omitempty"`
	Name *string `json:"Name,omitempty"`
	EndpointType *string `json:"EndpointType,omitempty"`
	Location *string `json:"Location,omitempty"`
	Email *KeyfactorApiModelsMonitoringEmailResponse `json:"Email,omitempty"`
	Dashboard *KeyfactorApiModelsMonitoringDashboardResponse `json:"Dashboard,omitempty"`
	Schedule *KeyfactorCommonSchedulingKeyfactorSchedule `json:"Schedule,omitempty"`
	OCSPParameters *KeyfactorApiModelsMonitoringOCSPParametersResponse `json:"OCSPParameters,omitempty"`
}

// NewKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse instantiates a new KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse() *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	this := KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{}
	return &this
}

// NewKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponseWithDefaults instantiates a new KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponseWithDefaults() *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	this := KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetName(v string) {
	o.Name = &v
}

// GetEndpointType returns the EndpointType field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEndpointType() string {
	if o == nil || isNil(o.EndpointType) {
		var ret string
		return ret
	}
	return *o.EndpointType
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEndpointTypeOk() (*string, bool) {
	if o == nil || isNil(o.EndpointType) {
		return nil, false
	}
	return o.EndpointType, true
}

// HasEndpointType returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasEndpointType() bool {
	if o != nil && !isNil(o.EndpointType) {
		return true
	}

	return false
}

// SetEndpointType gets a reference to the given string and assigns it to the EndpointType field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetEndpointType(v string) {
	o.EndpointType = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetLocation() string {
	if o == nil || isNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetLocationOk() (*string, bool) {
	if o == nil || isNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetLocation(v string) {
	o.Location = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEmail() KeyfactorApiModelsMonitoringEmailResponse {
	if o == nil || isNil(o.Email) {
		var ret KeyfactorApiModelsMonitoringEmailResponse
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEmailOk() (*KeyfactorApiModelsMonitoringEmailResponse, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given KeyfactorApiModelsMonitoringEmailResponse and assigns it to the Email field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetEmail(v KeyfactorApiModelsMonitoringEmailResponse) {
	o.Email = &v
}

// GetDashboard returns the Dashboard field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetDashboard() KeyfactorApiModelsMonitoringDashboardResponse {
	if o == nil || isNil(o.Dashboard) {
		var ret KeyfactorApiModelsMonitoringDashboardResponse
		return ret
	}
	return *o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetDashboardOk() (*KeyfactorApiModelsMonitoringDashboardResponse, bool) {
	if o == nil || isNil(o.Dashboard) {
		return nil, false
	}
	return o.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasDashboard() bool {
	if o != nil && !isNil(o.Dashboard) {
		return true
	}

	return false
}

// SetDashboard gets a reference to the given KeyfactorApiModelsMonitoringDashboardResponse and assigns it to the Dashboard field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetDashboard(v KeyfactorApiModelsMonitoringDashboardResponse) {
	o.Dashboard = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetSchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.Schedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the Schedule field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetSchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.Schedule = &v
}

// GetOCSPParameters returns the OCSPParameters field value if set, zero value otherwise.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetOCSPParameters() KeyfactorApiModelsMonitoringOCSPParametersResponse {
	if o == nil || isNil(o.OCSPParameters) {
		var ret KeyfactorApiModelsMonitoringOCSPParametersResponse
		return ret
	}
	return *o.OCSPParameters
}

// GetOCSPParametersOk returns a tuple with the OCSPParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetOCSPParametersOk() (*KeyfactorApiModelsMonitoringOCSPParametersResponse, bool) {
	if o == nil || isNil(o.OCSPParameters) {
		return nil, false
	}
	return o.OCSPParameters, true
}

// HasOCSPParameters returns a boolean if a field has been set.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasOCSPParameters() bool {
	if o != nil && !isNil(o.OCSPParameters) {
		return true
	}

	return false
}

// SetOCSPParameters gets a reference to the given KeyfactorApiModelsMonitoringOCSPParametersResponse and assigns it to the OCSPParameters field.
func (o *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetOCSPParameters(v KeyfactorApiModelsMonitoringOCSPParametersResponse) {
	o.OCSPParameters = &v
}

func (o KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.EndpointType) {
		toSerialize["EndpointType"] = o.EndpointType
	}
	if !isNil(o.Location) {
		toSerialize["Location"] = o.Location
	}
	if !isNil(o.Email) {
		toSerialize["Email"] = o.Email
	}
	if !isNil(o.Dashboard) {
		toSerialize["Dashboard"] = o.Dashboard
	}
	if !isNil(o.Schedule) {
		toSerialize["Schedule"] = o.Schedule
	}
	if !isNil(o.OCSPParameters) {
		toSerialize["OCSPParameters"] = o.OCSPParameters
	}
	return toSerialize, nil
}

type NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse struct {
	value *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) Get() *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) Set(val *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse(val *KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) *NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	return &NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


