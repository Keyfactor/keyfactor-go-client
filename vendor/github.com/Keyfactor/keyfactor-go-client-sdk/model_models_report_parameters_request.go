/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsReportParametersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsReportParametersRequest{}

// ModelsReportParametersRequest struct for ModelsReportParametersRequest
type ModelsReportParametersRequest struct {
	Id *int32 `json:"Id,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	Description *string `json:"Description,omitempty"`
	DefaultValue *string `json:"DefaultValue,omitempty"`
}

// NewModelsReportParametersRequest instantiates a new ModelsReportParametersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsReportParametersRequest() *ModelsReportParametersRequest {
	this := ModelsReportParametersRequest{}
	return &this
}

// NewModelsReportParametersRequestWithDefaults instantiates a new ModelsReportParametersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsReportParametersRequestWithDefaults() *ModelsReportParametersRequest {
	this := ModelsReportParametersRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsReportParametersRequest) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParametersRequest) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsReportParametersRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsReportParametersRequest) SetId(v int32) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelsReportParametersRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParametersRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelsReportParametersRequest) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelsReportParametersRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsReportParametersRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParametersRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsReportParametersRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsReportParametersRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *ModelsReportParametersRequest) GetDefaultValue() string {
	if o == nil || isNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsReportParametersRequest) GetDefaultValueOk() (*string, bool) {
	if o == nil || isNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *ModelsReportParametersRequest) HasDefaultValue() bool {
	if o != nil && !isNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *ModelsReportParametersRequest) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

func (o ModelsReportParametersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsReportParametersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !isNil(o.DefaultValue) {
		toSerialize["DefaultValue"] = o.DefaultValue
	}
	return toSerialize, nil
}

type NullableModelsReportParametersRequest struct {
	value *ModelsReportParametersRequest
	isSet bool
}

func (v NullableModelsReportParametersRequest) Get() *ModelsReportParametersRequest {
	return v.value
}

func (v *NullableModelsReportParametersRequest) Set(val *ModelsReportParametersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsReportParametersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsReportParametersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsReportParametersRequest(val *ModelsReportParametersRequest) *NullableModelsReportParametersRequest {
	return &NullableModelsReportParametersRequest{value: val, isSet: true}
}

func (v NullableModelsReportParametersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsReportParametersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


