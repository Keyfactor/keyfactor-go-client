/*
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor_command_client_api

import (
	"encoding/json"
)

// checks if the ModelsCertificateDownloadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateDownloadResponse{}

// ModelsCertificateDownloadResponse struct for ModelsCertificateDownloadResponse
type ModelsCertificateDownloadResponse struct {
	Content *string `json:"Content,omitempty"`
}

// NewModelsCertificateDownloadResponse instantiates a new ModelsCertificateDownloadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateDownloadResponse() *ModelsCertificateDownloadResponse {
	this := ModelsCertificateDownloadResponse{}
	return &this
}

// NewModelsCertificateDownloadResponseWithDefaults instantiates a new ModelsCertificateDownloadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateDownloadResponseWithDefaults() *ModelsCertificateDownloadResponse {
	this := ModelsCertificateDownloadResponse{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ModelsCertificateDownloadResponse) GetContent() string {
	if o == nil || isNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateDownloadResponse) GetContentOk() (*string, bool) {
	if o == nil || isNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ModelsCertificateDownloadResponse) HasContent() bool {
	if o != nil && !isNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ModelsCertificateDownloadResponse) SetContent(v string) {
	o.Content = &v
}

func (o ModelsCertificateDownloadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateDownloadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Content) {
		toSerialize["Content"] = o.Content
	}
	return toSerialize, nil
}

type NullableModelsCertificateDownloadResponse struct {
	value *ModelsCertificateDownloadResponse
	isSet bool
}

func (v NullableModelsCertificateDownloadResponse) Get() *ModelsCertificateDownloadResponse {
	return v.value
}

func (v *NullableModelsCertificateDownloadResponse) Set(val *ModelsCertificateDownloadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateDownloadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateDownloadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateDownloadResponse(val *ModelsCertificateDownloadResponse) *NullableModelsCertificateDownloadResponse {
	return &NullableModelsCertificateDownloadResponse{value: val, isSet: true}
}

func (v NullableModelsCertificateDownloadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateDownloadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


